# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(matrix(NA, nrow = 6, ncol = 6)),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
## up to 30s
# system.time(rep1 <- obj$report()) ## one off caclulation using start pars
# head(rep1$catch_yf_pred,10)
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
control = list(eval.max = 1e6,
iter.max = 1e6)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
head(dat$catch_yf_pred,10)
head(df$catch_yf_obs,10)
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
# omega_0ij = factor(matrix(NA, nrow = 6, ncol = 6)),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
control = list(eval.max = 1e6,
iter.max = 1e6)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
head(dat$catch_yf_pred,10)
head(df$catch_yf_obs,10)
## OM_Master.R
## M S Kapur
## Inspiration  from J Sullivan N Jacobsen Summer 2020
## kapurm@uw.edu
# file.copy("C:/Users/public/shire.cpp",here("TMB","shire.cpp"),overwrite = TRUE)
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shireAEP1010",'shire_v2','shire_v2noW')[3]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 7
df$yRun = 7;# df$yRun = df$tEnd-1
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
# omega_0ij = factor(matrix(NA, nrow = 6, ncol = 6)),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
## up to 30s
# system.time(rep1 <- obj$report()) ## one off caclulation using start pars
# head(rep1$catch_yf_pred,10)
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
control = list(eval.max = 1e6,
iter.max = 1e6)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
head(dat$catch_yf_pred,10)
head(df$catch_yf_obs,10)
# file.copy("C:/Users/public/shire.cpp",here("TMB","shire.cpp"),overwrite = TRUE)
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shireAEP1010",'shire_v2','shire_v2noW')[3]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 7
df$yRun = 15;# df$yRun = df$tEnd-1
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
# omega_0ij = factor(matrix(NA, nrow = 6, ncol = 6)),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
## up to 30s
# system.time(rep1 <- obj$report()) ## one off caclulation using start pars
# head(rep1$catch_yf_pred,10)
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
control = list(eval.max = 1e6,
iter.max = 1e6)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$l
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
head(dat$catch_yf_pred,10)
head(df$catch_yf_obs,10)
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shireAEP1010",'shire_v2','shire_v2noW')[1]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 7
df$yRun = 15;# df$yRun = df$tEnd-1
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
# omega_0ij = factor(matrix(NA, nrow = 6, ncol = 6)),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
## up to 30s
# system.time(rep1 <- obj$report()) ## one off caclulation using start pars
# head(rep1$catch_yf_pred,10)
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
control = list(eval.max = 1e6,
iter.max = 1e6)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$la
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
head(dat$catch_yf_pred,10)
head(df$catch_yf_obs,10)
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shireAEP1010",'shire_v2','shire_v2noW')[2]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 7
df$yRun = 3;# df$yRun = df$tEnd-1
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(matrix(NA, nrow = 6, ncol = 6)),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
## up to 30s
# system.time(rep1 <- obj$report()) ## one off caclulation using start pars
# head(rep1$catch_yf_pred,10)
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
control = list(eval.max = 1e6,
iter.max = 1e6)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$las
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
head(dat$catch_yf_pred,10)
head(df$catch_yf_obs,10)
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shireAEP1010",'shire_v2','shire_v2noW')[2]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 7
df$yRun = 10;# df$yRun = df$tEnd-1
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(matrix(NA, nrow = 6, ncol = 6)),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
## up to 30s
# system.time(rep1 <- obj$report()) ## one off caclulation using start pars
# head(rep1$catch_yf_pred,10)
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
control = list(eval.max = 1e6,
iter.max = 1e6)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
head(dat$catch_yf_pred,10)
head(df$catch_yf_obs,10)
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shireAEP1010",'shire_v2','shire_v2noW')[2]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 7
df$yRun = 15;# df$yRun = df$tEnd-1
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(matrix(NA, nrow = 6, ncol = 6)),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
## up to 30s
# system.time(rep1 <- obj$report()) ## one off caclulation using start pars
# head(rep1$catch_yf_pred,10)
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
control = list(eval.max = 1e6,
iter.max = 1e6)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
254/60
head(dat$catch_yf_pred,15)
head(df$catch_yf_obs,15)
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shireAEP1010",'shire_v2','shire_v2noW')[2]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 7
df$yRun = 17;# df$yRun = df$tEnd-1
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(matrix(NA, nrow = 6, ncol = 6)),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
## up to 30s
# system.time(rep1 <- obj$report()) ## one off caclulation using start pars
# head(rep1$catch_yf_pred,10)
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
control = list(eval.max = 1e6,
iter.max = 1e6)
)$opt) ## estimate; can r
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
head(dat$catch_yf_pred,10)
head(df$catch_yf_obs,10)
## save everything and plot
writeOM(dat=dat,obj = obj, opt = opt, cppname = 'v2',
runname = "-ltop17yv2omega")
