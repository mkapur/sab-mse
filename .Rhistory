filter(Year >1965 ) %>%
ggplot(., aes(x = Year, y = assSSBMT, color = REG)) +
geom_line(aes(y = omSSBMT),lwd = 1.1) +
geom_errorbar(aes(ymin = assSSBMT-CV*assSSBMT,ymax= assSSBMT+CV*assSSBMT, color = REG)) +
scale_color_manual(values = mgmtPal)+
geom_point()+  ggsidekick::theme_sleek() +
labs(x = 'Modeled Year',y = 'SSB', color = 'Mgmt Region') +
facet_wrap(~REG,scales = 'free_y')
ggsave(last_plot(),
file = paste0(dumpfile,'/SSB_ym-',Sys.Date(),'.png'),
width = 10, height = 6, unit = 'in',
dpi = 420)
## catch pred by fleet ----
catch_yf_predt <- data.frame(catch_yf_pred)
names(catch_yf_predt) <- df$fltnames_fish
catch_yf_predt <- catch_yf_predt %>%
mutate(Year = years) %>%
group_by(Year) %>%
mutate("AK_FIX (aggregate)" = sum(AK_FIX_W, AK_FIX_E),
"AK_TWL (aggregate)"= sum(AK_TWL_W, AK_TWL_E)) %>%
select(-AK_TWL_W,-AK_TWL_E,-AK_FIX_W,-AK_FIX_E) %>%
melt(id = 'Year') %>%
mutate(Type = 'PRED') %>%
mutate(REG = substr(variable,0,2)) %>% filter(value != 0)
catch_yf_obst <- df$catch_yf_obs %>%  data.frame() %>%select(-Year)
catch_yf_obst <- catch_yf_obst %>%
mutate(Year = years) %>%
group_by(Year) %>%
mutate("AK_FIX (aggregate)" = sum(AK_FIX_W, AK_FIX_E),
"AK_TWL (aggregate)"= sum(AK_TWL_W, AK_TWL_E)) %>%
select(-AK_TWL_W,-AK_TWL_E,-AK_FIX_W,-AK_FIX_E) %>%
melt(id = 'Year') %>%
## convert CV to SD via CV = mean/sd
mutate(Type = 'OBS',
lci = value - 1.96*(0.1*value),
uci = value + 1.96*(0.1*value)) %>%
mutate(REG = substr(variable,0,2)) #%>% head()
ggplot(data = catch_yf_obst,
aes(x = Year, y = value, color = variable)) +
geom_line(data = catch_yf_predt, lwd = 0.75) +
scale_color_manual(values = fishfltPal) +
scale_x_continuous(limits = c(1960,1960+df$yRun)) +
geom_point(pch = 1, fill = NA, col = 'black') +
geom_errorbar(aes(ymin = lci, ymax = uci), col = 'black') +
theme_sleek() +
theme(legend.position = 'none')+
labs(y = 'catch', color = 'Fishing Fleet')+
facet_wrap(~variable, scales = "free_y", ncol = 2)
ggsave(last_plot(),
file = paste0(dumpfile,'/catch_fits_TMB_',
'v1=',df$v1,'niter=',df$niter,'Fmax=',df$Fmax,Sys.Date(),'.png'),
width = 8, height = 6, unit = 'in',
dpi = 420)
## catch pred by m ----
catch_yf_predm <- catch_yf_predt %>%
group_by(Year, REG) %>%
summarise(totC = sum(value)) %>%  mutate(Type = 'PRED')
catch_yf_obsm <- catch_yf_obst %>%
group_by(Year, REG) %>%
summarise(totC = sum(value)) %>%
mutate(Type = 'OBS',
lci = totC - 1.96*(0.1*totC),
uci = totC + 1.96*(0.1*totC))
ggplot(data = catch_yf_obsm,
aes(x = Year, y = totC, color = REG)) +
geom_line(data = catch_yf_predm, lwd = 1.1) +
scale_color_manual(values = mgmtPal) +
scale_x_continuous(limits = c(1960,1960+df$yRun)) +
geom_point(pch = 1, fill = NA, col = 'black') +
geom_errorbar(aes(ymin = lci, ymax = uci), col = 'black') +
theme_sleek() +
theme(legend.position = 'none')+
labs(y = 'catch', color = 'Fishing Fleet')+
facet_wrap(~REG, scales = "free_y")
ggsave(last_plot(),
file = paste0(dumpfile,'/catchm_fits_TMB_',
'v1=',df$v1,'niter=',df$niter,'Fmax=',df$Fmax,Sys.Date(),'.png'),
width = 10, height = 6, unit = 'in', dpi = 420)
## survey preds ----
survey_yf_predt <- data.frame(surv_yf_pred)
names(survey_yf_predt) <- df$fltnames_surv
survey_yf_predt <- survey_yf_predt %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
mutate(Type = 'PRED') %>%
mutate(REG = substr(variable,0,2)) #%>%
survey_yf_obst <- data.frame( df$surv_yf_obs)  %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
## convert CV to SD via CV = mean/sd
mutate(Type = 'OBS',
lci = value - 1.96*(0.1*value),
uci = value + 1.96*(0.1*value)) %>%
mutate(REG = substr(variable,0,2)) %>%
filter(value > 0) #%>% View()
ggplot(data = survey_yf_obst,
aes(x = Year, y = value, color = variable)) +
geom_line(data = survey_yf_predt, lwd = 0.75) +
scale_color_manual(values = fishfltPal) +
geom_point(pch = 1, fill = NA, col = 'black') +
geom_errorbar(aes(ymin = lci, ymax = uci), col = 'black') +
theme_sleek() +
theme(legend.position = 'none')+
labs(y = 'survey', color = 'Fishing Fleet')+
facet_wrap(~variable, scales = "free_y")
ggsave(last_plot(),
file =paste0(dumpfile,'/survey_fits_selMult_',
'v1=',df$v1,'Fmax=',df$Fmax,Sys.Date(),'.png'),
width = 10, height = 6, unit = 'in',
dpi = 420)
# plot  selex ----
## bring estimates out and rearrange
inputSel <- array(exp(obj$par[grep('fsh_slx',names(obj$par))]),
dim = dim(df$parms$log_fsh_slx_pars),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
selP <- array(exp(opt$par[grep('fsh_slx',names(opt$par))]),
dim = dim(df$parms$log_fsh_slx_pars),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
dimnames(selP)[[1]] <- paste(df$fltnames_fish)
fsh_sel_afs <- array(NA, dim = c(df$nage,df$nfleets_fish,2),
dimnames = list(c(df$age),
c(paste(df$fltnames_fish)),
c('Fem','Mal')))
## function to take the estimated parameters
## and info about selType, selShape
## and spit out vector of selx@a or selx@L
for(a in 1:df$nage){
for(s in 1:2){
for(fish_flt in 1:df$nfleets_fish){
fsh_sel_afs[,fish_flt,s] <- getSelec2(sex = s,
selP = selP,
flt_idx = fish_flt,
selType = df$selType_fish[fish_flt],
selShape = df$selShape_fish[fish_flt])
}
}
}
png(paste0(dumpfile,'/fishery_selex.png'),
height = 8, width = 6, unit = 'in', res = 420)
par(mfrow = c(3,3) )
for(flt in 1:df$nfleets_fish){
for(s in 1:2){
tmp <- fsh_sel_afs[,flt,s]
if(s == 1) plot(tmp,
col = sexPal[1],
type = 'l',
lwd = 2,
xlab = ifelse(df$selType_fish[flt] == 0,
'Age','Length'),
ylab = 'Selectivity',
lty = 1,
ylim = c(0,1),
main = df$fltnames_fish[flt], xlim = c(0,75),
col.main  = c(rep(mgmtPal[1],4), rep(mgmtPal[2],3),rep(mgmtPal[3],2))[flt])
box(which = 'plot', lty = 'solid',
col = c(rep(mgmtPal[1],4), rep(mgmtPal[2],3),rep(mgmtPal[3],2))[flt],
lwd = 2)
if(s == 2) lines(tmp, col = sexPal[2], type = 'l', lty = 2, lwd = 2)
}
}
dev.off()
}
df$yRun = 40;
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
obj$par
obj$report(par = best)
obj$env$last.par.best
lower
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds
system.time(opt <- TMBhelper::fit_tmb(obj, lower = lower, upper = upper,
control = list(eval.max = 1e8,
iter.max = 1e8))$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(model$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
head(dat$catch_yf_pred)
head(dat$N_yais_end)
attach(dat)
detach(dat)
attach(dat)
par(mfrow = c(2,3))
for(i in 1:6){
ylt = 3*max(sum(dat$N_yais_end[2,,i,][!is.na(dat$N_yais_end[2,,i,])]),
sum(dat$N_yais_end[10,,i,][!is.na(dat$N_yais_end[10,,i,])]))
plot(rowSums(dat$dat$N_yais_beg[,,i,]),
type = 'l',
lwd = 2,
col = scales::alpha(subareaPal[i],0.2),
main = inames[i],
col.main = subareaPal[i],
ylim = c(0,ylt),
xlim = c(0,nyear),xaxt='n',
xlab = "Model Year",
ylab = 'Numbers (M+F)')
lines(rowSums(dat$N_yais_mid[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(subareaPal[i],0.4))
lines(rowSums(dat$N_yais_end[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(subareaPal[i],0.8))
legend("topright",col = c(scales::alpha(subareaPal[i],0.2),
scales::alpha(subareaPal[i],0.4),
scales::alpha(subareaPal[i],0.8)),
legend = c("beg",
"mid (move)",
"end (fished)"), cex = 0.7, lty =1, lwd = 5)
axis(1, at = seq(1,nyear,5), labels = years[seq(1,nyear,5)])
}
for(i in 1:6){
ylt = 3*max(sum(dat$N_yais_end[2,,i,][!is.na(dat$N_yais_end[2,,i,])]),
sum(dat$N_yais_end[10,,i,][!is.na(dat$N_yais_end[10,,i,])]))
plot(rowSums(dat$N_yais_beg[,,i,]),
type = 'l',
lwd = 2,
col = scales::alpha(subareaPal[i],0.2),
main = inames[i],
col.main = subareaPal[i],
ylim = c(0,ylt),
xlim = c(0,nyear),xaxt='n',
xlab = "Model Year",
ylab = 'Numbers (M+F)')
lines(rowSums(dat$N_yais_mid[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(subareaPal[i],0.4))
lines(rowSums(dat$N_yais_end[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(subareaPal[i],0.8))
legend("topright",col = c(scales::alpha(subareaPal[i],0.2),
scales::alpha(subareaPal[i],0.4),
scales::alpha(subareaPal[i],0.8)),
legend = c("beg",
"mid (move)",
"end (fished)"), cex = 0.7, lty =1, lwd = 5)
axis(1, at = seq(1,nyear,5), labels = years[seq(1,nyear,5)])
}
years <- 1960:2019
nyear <- length(years)
tEnd <- length(years)
age <- 0:70
nage <- length(age)
par(mfrow = c(2,3))
for(i in 1:6){
ylt = 3*max(sum(dat$N_yais_end[2,,i,][!is.na(dat$N_yais_end[2,,i,])]),
sum(dat$N_yais_end[10,,i,][!is.na(dat$N_yais_end[10,,i,])]))
plot(rowSums(dat$N_yais_beg[,,i,]),
type = 'l',
lwd = 2,
col = scales::alpha(subareaPal[i],0.2),
main = inames[i],
col.main = subareaPal[i],
ylim = c(0,ylt),
xlim = c(0,nyear),xaxt='n',
xlab = "Model Year",
ylab = 'Numbers (M+F)')
lines(rowSums(dat$N_yais_mid[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(subareaPal[i],0.4))
lines(rowSums(dat$N_yais_end[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(subareaPal[i],0.8))
legend("topright",col = c(scales::alpha(subareaPal[i],0.2),
scales::alpha(subareaPal[i],0.4),
scales::alpha(subareaPal[i],0.8)),
legend = c("beg",
"mid (move)",
"end (fished)"), cex = 0.7, lty =1, lwd = 5)
axis(1, at = seq(1,nyear,5), labels = years[seq(1,nyear,5)])
}
spmat <- data.frame(subarea = c('A1',"A2","B2","B1","C2","C1"),
stock = c("R4","R3","R3","R2","R2","R1"),
mgmt = c("AI","AK", rep("BC",2), rep("CC",2)))
inames = unique(spmat$subarea)
for(i in 1:6){
ylt = 3*max(sum(dat$N_yais_end[2,,i,][!is.na(dat$N_yais_end[2,,i,])]),
sum(dat$N_yais_end[10,,i,][!is.na(dat$N_yais_end[10,,i,])]))
plot(rowSums(dat$N_yais_beg[,,i,]),
type = 'l',
lwd = 2,
col = scales::alpha(subareaPal[i],0.2),
main = inames[i],
col.main = subareaPal[i],
ylim = c(0,ylt),
xlim = c(0,nyear),xaxt='n',
xlab = "Model Year",
ylab = 'Numbers (M+F)')
lines(rowSums(dat$N_yais_mid[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(subareaPal[i],0.4))
lines(rowSums(dat$N_yais_end[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(subareaPal[i],0.8))
legend("topright",col = c(scales::alpha(subareaPal[i],0.2),
scales::alpha(subareaPal[i],0.4),
scales::alpha(subareaPal[i],0.8)),
legend = c("beg",
"mid (move)",
"end (fished)"), cex = 0.7, lty =1, lwd = 5)
axis(1, at = seq(1,nyear,5), labels = years[seq(1,nyear,5)])
}
graphics.off()
par(mfrow = c(2,3))
for(i in 1:6){
ylt = 3*max(sum(dat$N_yais_end[2,,i,][!is.na(dat$N_yais_end[2,,i,])]),
sum(dat$N_yais_end[10,,i,][!is.na(dat$N_yais_end[10,,i,])]))
plot(rowSums(dat$N_yais_beg[,,i,]),
type = 'l',
lwd = 2,
col = scales::alpha(subareaPal[i],0.2),
main = inames[i],
col.main = subareaPal[i],
ylim = c(0,ylt),
xlim = c(0,nyear),xaxt='n',
xlab = "Model Year",
ylab = 'Numbers (M+F)')
lines(rowSums(dat$N_yais_mid[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(subareaPal[i],0.4))
lines(rowSums(dat$N_yais_end[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(subareaPal[i],0.8))
legend("topright",col = c(scales::alpha(subareaPal[i],0.2),
scales::alpha(subareaPal[i],0.4),
scales::alpha(subareaPal[i],0.8)),
legend = c("beg",
"mid (move)",
"end (fished)"), cex = 0.7, lty =1, lwd = 5)
axis(1, at = seq(1,nyear,5), labels = years[seq(1,nyear,5)])
}
df$yRun
best
lower[names(lower) == 'omega_0ij'] = 0
upper[names(upper) == 'omega_0ij'] = 1
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds
system.time(opt <- TMBhelper::fit_tmb(obj, lower = lower, upper = upper,
control = list(eval.max = 1e8,
iter.max = 1e8))$opt) ## estimate; can repreat for stability)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
## save everything and plot
writeOM(dat,obj = obj, opt = opt)
best
lower
upper
best[names(best) == 'omega_0ij']
## OM_Master.R
## M S Kapur
## Inspiration  from J Sullivan N Jacobsen Summer 2020
## kapurm@uw.edu
# file.copy("C:/Users/public/shire.cpp",here("TMB","shire.cpp"),overwrite = TRUE)
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
compile(here("TMB","shireAEP.cpp"))
dyn.load(dynlib(here("TMB","shireAEP")))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 7
df$yRun = 40;
# df$yRun = df$tEnd-1
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
# omega_0ij = factor(rep(NA,6)),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
df$yRun = 25;
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
## up to 30s
# system.time(rep1 <- obj$report()) ## one off caclulation using start pars
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
lower
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds
system.time(opt <- TMBhelper::fit_tmb(obj, lower = lower, upper = upper,
control = list(eval.max = 1e8,
iter.max = 1e8))$opt) ## estimate; can repreat for stability)
fltnames
fltnames$M[fltnames$M == 'WC'] <- CC
fltnames$M[fltnames$M == 'WC'] <- 'CC'
levels(fltnames$M)
levels(fltnames$M) <- ("AK" "BC" "WC","CC")
fltnames$M[fltnames$M == 'WC'] <- 'CC'
fltnamesCol <- merge(fltnames, melt(fishfltPal), by.x = 'NAME', by.y = 'Var2' ) %>%
rbind(.,
merge(fltnames, melt(survfltPal), by.x = 'NAME', by.y = 'Var2' ) ) %>%
merge(., fltnames, all.y = TRUE)
levels(fltnames$M) <- ("AK", "BC", "WC","CC")
levels(fltnames$M) <- c("AK", "BC", "WC","CC")
fltnames$M[fltnames$M == 'WC'] <- 'CC'
fltnamesCol <- merge(fltnames, melt(fishfltPal), by.x = 'NAME', by.y = 'Var2' ) %>%
rbind(.,
merge(fltnames, melt(survfltPal), by.x = 'NAME', by.y = 'Var2' ) ) %>%
merge(., fltnames, all.y = TRUE)
levels(fltnamesCol$value) <- c(levels(fltnamesCol$value), "#015b58","#2c6184","#ba7999")
fltnamesCol$value[is.na(fltnamesCol$value)] <- c(rep("#015b58",3),
rep("#2c6184",2),  "#ba7999")
fltnames[fltnames==FALSE] <- NA
fltsub <- fltnames %>%
select(-SELTYPE) %>%
reshape2::melt(., id = c('M','NAME'))
ggplot(fltsub,aes(x = NAME, y = variable, fill = NAME )) +
theme_sleek() +
theme(legend.position = 'none',
axis.text.x = element_text(angle = 90))+
scale_fill_manual(values = paste(fltnamesCol$value)) +
geom_tile(color = 'white') +
geom_tile(data = subset(fltsub, is.na(value)),fill = 'white') +
geom_tile(data = subset(fltsub, variable == 'DISCARD' & !is.na(value)|
variable == 'LCOMP' & !is.na(value)),
alpha = 0.8) +
labs(x = 'Fleet Name', y= '') +
facet_wrap(.~M, scales = 'free_x')
df$catch_yf_obs
## kapurm@uw.edu
# file.copy("C:/Users/public/shire.cpp",here("TMB","shire.cpp"),overwrite = TRUE)
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
compile(here("TMB","shireAEP.cpp"))
dyn.load(dynlib(here("TMB","shireAEP")))
## kapurm@uw.edu
# file.copy("C:/Users/public/shire.cpp",here("TMB","shire.cpp"),overwrite = TRUE)
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
compile(here("TMB","shireAEP.cpp"))
dyn.load(dynlib(here("TMB","shireAEP")))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 7
df$yRun = 25;
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
# omega_0ij = factor(rep(NA,6)),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
## up to 30s
# system.time(rep1 <- obj$report()) ## one off caclulation using start pars
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds
system.time(opt <- TMBhelper::fit_tmb(obj, lower = lower, upper = upper,
control = list(eval.max = 1e8,
iter.max = 1e8))$opt) ## estimate; can repreat for stability)
