df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
# df$parms$logq_f <- rep(log(1e-5),length(df$parms$logq_f))
df$surv_yf_obs[df$surv_yf_obs >0] <-
df$surv_yf_obs[df$surv_yf_obs >0]
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
df$parms$logq_f <- rep(log(1e-5),length(df$parms$logq_f))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
# "mort_k",
# "log_srv_slx_pars"),
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars"),
# "mort_k",
# "log_srv_slx_pars"),
fixFlt = c("all_fsh"))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[3])
bounds
source(here("R","functions",'load_files_OM.R'))
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[3])
bounds
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repeat for stability)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
# lower = bounds$lower,
# upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repeat for stability)
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars"),
"mort_k",
# "log_srv_slx_pars"),
fixFlt = c("all_fsh"))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars",
"mort_k",
# "log_srv_slx_pars"
),
fixFlt = c("all_fsh"))
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars",
"mort_k"
# "log_srv_slx_pars"
),
fixFlt = c("all_fsh"))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
system.time(opt <-
TMBhelper::fit_tmb(
obj,
# lower = bounds$lower,
# upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repeat for stability)
opt$time_for_MLE
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
dat <- obj$report(par = best)
## save everything and plot
cppname = substr(dllUSE,7,nchar(dllUSE))
writeOM(dat=dat,obj = obj, opt = opt, rep=rep, cppname =cppname, mappy = mappy,
runname = paste0("-",df$yRun,"y_",cppname,"_M=",
paste(df$parms$mort_k,collapse="-"),
"_allest_nobounds"))
mappy
steep <- exp(opt$par[names(opt$par) == 'logh_k']); names(steep) <- paste0("h","_R",1:4);steep
logR_0 <- opt$par[names(opt$par) == 'logR_0k'];names(logR_0) <- paste0("logR_0","_R",1:4);logR_0
## save everything and plot
cppname = substr(dllUSE,7,nchar(dllUSE))
writeOM(dat=dat,obj = obj, opt = opt, rep=rep, cppname =cppname, mappy = mappy,
runname = paste0("-",df$yRun,"y_",cppname,"_M=",
paste(df$parms$mort_k,collapse="-"),
"_baseQ=goaL_srvslxest_withbounds"))
opt$time_for_MLE
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/2020-12-13-59y_v4L_0922VAST_srvslxest_nobounds/mappy.rdata")
mappy
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
rm(list = ls())
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/2020-12-10-35y_v4L_M=0.2-0.2-0.2-0.2_srvslxest_withbounds/dat.rdata")
years <- 1960:2019
nyear <- length(years)
tEnd <- length(years)
age <- 0:70
nage <- length(age)
survey_yf_predt <- data.frame(dat$surv_yf_pred)
names(survey_yf_predt) <- df$fltnames_surv
survey_yf_predt <- survey_yf_predt %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
mutate(Type = 'PRED') %>%
mutate(REG = substr(variable,0,2)) %>% filter(value > 0)
survey_yf_predt
survey_yf_errt <- data.frame(df$surv_yf_err) %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(!is.na(value))
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/2020-12-10-35y_v4L_M=0.2-0.2-0.2-0.2_srvslxest_withbounds/df_used.rdata")
survey_yf_obst <- data.frame( df$surv_yf_obs)  %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(value > 0) %>%
merge(survey_yf_errt, by = c('Year','variable')) %>%
mutate(value = value.x) %>%
## convert CV to SD via CV = mean/sd
## we think these are sds in mt (input to model as log)
mutate(Type = 'OBS',
lci = round(value - value*(value.y)),
uci = round(value + (value*value.y))) %>%
mutate(REG = substr(variable,0,2)) %>%
select(Year, variable, value, lci, uci)
survey_yf_errt <- data.frame(df$surv_yf_err) %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(!is.na(value))
survey_yf_obst <- data.frame( df$surv_yf_obs)  %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(value > 0) %>%
merge(survey_yf_errt, by = c('Year','variable')) %>%
mutate(value = value.x) %>%
## convert CV to SD via CV = mean/sd
## we think these are sds in mt (input to model as log)
mutate(Type = 'OBS',
lci = round(value - value*(value.y)),
uci = round(value + (value*value.y))) %>%
mutate(REG = substr(variable,0,2)) %>%
select(Year, variable, value, lci, uci)
ggplot(data = survey_yf_obst,
aes(x = Year, y = value, color = variable)) +
geom_line(data = survey_yf_predt, lwd = 0.75) +
scale_color_manual(values = survfltPal) +
geom_point(pch = 1, fill = NA, col = 'black') +
geom_errorbar(aes(ymin = lci, ymax = uci), col = 'black',width=0) +
scale_x_continuous(limits = c(1980,ifelse(df$yRun == 59,2021,1959+df$yRun)),
breaks = seq(1980,1960+df$yRun,10),
labels = seq(1980,1960+df$yRun,10)) +
theme_sleek() +
theme(legend.position = 'none')+
labs(y = 'survey', color = 'Fishing Fleet')+
facet_wrap(~variable, scales = "free_y")
survfltPal <-  matrix(PNWColors::pnw_palette(name = 'Bay',n=5), ncol = 5) ## for VAST outputs
ggplot(data = survey_yf_obst,
aes(x = Year, y = value, color = variable)) +
geom_line(data = survey_yf_predt, lwd = 0.75) +
scale_color_manual(values = survfltPal) +
geom_point(pch = 1, fill = NA, col = 'black') +
geom_errorbar(aes(ymin = lci, ymax = uci), col = 'black',width=0) +
scale_x_continuous(limits = c(1980,ifelse(df$yRun == 59,2021,1959+df$yRun)),
breaks = seq(1980,1960+df$yRun,10),
labels = seq(1980,1960+df$yRun,10)) +
theme_sleek() +
theme(legend.position = 'none')+
labs(y = 'survey', color = 'Fishing Fleet')+
facet_wrap(~variable, scales = "free_y")
survey_yf_predt <- data.frame(dat$surv_yf_pred)
names(survey_yf_predt) <- df$fltnames_surv
survey_yf_predt <- survey_yf_predt %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
mutate(Type = 'PRED') %>%
mutate(REG = substr(variable,0,2)) %>% filter(value > 0)
survey_yf_errt <- data.frame(df$surv_yf_err) %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(!is.na(value))
survey_yf_obst <- data.frame( df$surv_yf_obs)  %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(value > 0) %>%
merge(survey_yf_errt, by = c('Year','variable')) %>%
mutate(value = value.x) %>%
## convert CV to SD via CV = mean/sd
## we think these are sds in mt (input to model as log)
mutate(Type = 'OBS',
lci = round(value - value*(value.y)),
uci = round(value + (value*value.y))) %>%
mutate(REG = substr(variable,0,2)) %>%
select(Year, variable, value, lci, uci)
ggplot(data = survey_yf_obst,
aes(x = Year, y = value, color = variable)) +
geom_line(data = survey_yf_predt, lwd = 0.75) +
scale_color_manual(values = survfltPal) +
geom_point(pch = 1, fill = NA, col = 'black') +
geom_errorbar(aes(ymin = lci, ymax = uci), col = 'black',width=0) +
scale_x_continuous(limits = c(1980,ifelse(df$yRun == 59,2021,1959+df$yRun)),
breaks = seq(1980,1960+df$yRun,10),
labels = seq(1980,1960+df$yRun,10)) +
theme_sleek() +
theme(legend.position = 'none')+
labs(y = 'survey', color = 'Fishing Fleet')+
facet_wrap(~variable, scales = "free_y")
dat$surv_yf_pred
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/2020-12-13-59y_v4L_0922VAST_allest_nobounds/dat.rdata")
survey_yf_predt <- data.frame(dat$surv_yf_pred)
names(survey_yf_predt) <- df$fltnames_surv
survey_yf_predt <- survey_yf_predt %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
mutate(Type = 'PRED') %>%
mutate(REG = substr(variable,0,2)) %>% filter(value > 0)
survey_yf_errt <- data.frame(df$surv_yf_err) %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(!is.na(value))
survey_yf_obst <- data.frame( df$surv_yf_obs)  %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(value > 0) %>%
merge(survey_yf_errt, by = c('Year','variable')) %>%
mutate(value = value.x) %>%
## convert CV to SD via CV = mean/sd
## we think these are sds in mt (input to model as log)
mutate(Type = 'OBS',
lci = round(value - value*(value.y)),
uci = round(value + (value*value.y))) %>%
mutate(REG = substr(variable,0,2)) %>%
select(Year, variable, value, lci, uci)
ggplot(data = survey_yf_obst,
aes(x = Year, y = value, color = variable)) +
geom_line(data = survey_yf_predt, lwd = 0.75) +
scale_color_manual(values = survfltPal) +
geom_point(pch = 1, fill = NA, col = 'black') +
geom_errorbar(aes(ymin = lci, ymax = uci), col = 'black',width=0) +
scale_x_continuous(limits = c(1980,ifelse(df$yRun == 59,2021,1959+df$yRun)),
breaks = seq(1980,1960+df$yRun,10),
labels = seq(1980,1960+df$yRun,10)) +
theme_sleek() +
theme(legend.position = 'none')+
labs(y = 'survey', color = 'Fishing Fleet')+
facet_wrap(~variable, scales = "free_y")
dat$surv_yf_pred
survey_yf_predt
survey_yf_predt
dat$surv_yf_pred
years
survey_yf_predt <- survey_yf_predt %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
mutate(Type = 'PRED') %>%
mutate(REG = substr(variable,0,2)) %>%
filter(value > 0)
survey_yf_predt <- data.frame(dat$surv_yf_pred)
names(survey_yf_predt) <- df$fltnames_surv
survey_yf_predt %>%
mutate(Year = years)
df$surv_yf_obs
cbind(df$surv_yf_obs,1960:2019)
df$tEnd
length(1960:2019)
survey_yf_predt
survey_yf_predt <- data.frame(dat$surv_yf_pred)
names(survey_yf_predt) <- df$fltnames_surv
survey_yf_predt %>%
mutate(Year = years)
data.frame(dat$surv_yf_pred)
data.frame( df$surv_yf_obs)
data.frame(dat$catch_yf_pred_total)
catch_yf_pred_totalt %>%
mutate(Year = years)
## catch pred by fleet ----
catch_yf_pred_totalt <- data.frame(dat$catch_yf_pred_total)
names(catch_yf_pred_totalt) <- df$fltnames_fish
catch_yf_pred_totalt %>%
mutate(Year = years)
1959+df$yRun
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v3L",'shire_v4L')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
df$yRun <-  df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
df$parms$logq_f <- rep(log(1e-5),length(df$parms$logq_f))
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
# "log_fsh_slx_pars",
# "log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh"))
load(here("output","2020-12-10-59y_v4L_M=0.2-0.2-0.2-0.2_allslxest_withbounds/opt.rdata"))
df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
dimnames = dimnames(df$parms$log_srv_slx_pars))
df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
rm(opt)
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh"))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
df$years
df$yRun
system.time(rep1 <- obj$report())
head(rep1$surv_yf_pred)
tail(rep1$surv_yf_pred)
tail(rep1$N_yais_mid)
## OM_Master.R
## M S Kapur
## Inspiration from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v3L",'shire_v4L')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
df$yRun <-  df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
df$parms$logq_f <- rep(log(1e-5),length(df$parms$logq_f))
load(here("output","2020-12-10-59y_v4L_M=0.2-0.2-0.2-0.2_allslxest_withbounds/opt.rdata"))
df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
dimnames = dimnames(df$parms$log_srv_slx_pars))
df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
rm(opt)
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh"))
# array(mappy$log_fsh_slx_pars, dim = c(df$nfleets_fish,2,1,2), dimnames = dimnames(df$parms$log_fsh_slx_pars))
# array(mappy$log_srv_slx_pars, dim = c(df$nfleets_surv+df$nfleets_acomp-4,2,1,2),
#       dimnames = dimnames(df$parms$log_srv_slx_pars))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repeat for stability)
rep1$surv_yf_pred
system.time(rep1 <- obj$report())
rep1$surv_yf_pred
dat = rep1
survey_yf_predt <- data.frame(dat$surv_yf_pred)
names(survey_yf_predt) <- df$fltnames_surv
survey_yf_predt <- survey_yf_predt %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
mutate(Type = 'PRED') %>%
mutate(REG = substr(variable,0,2)) %>%
filter(value > 0)
survey_yf_errt <- data.frame(df$surv_yf_err) %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(!is.na(value))
survey_yf_obst <- data.frame( df$surv_yf_obs)  %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(value > 0) %>%
merge(survey_yf_errt, by = c('Year','variable')) %>%
mutate(value = value.x) %>%
## convert CV to SD via CV = mean/sd
## we think these are sds in mt (input to model as log)
mutate(Type = 'OBS',
lci = round(value - value*(value.y)),
uci = round(value + (value*value.y))) %>%
mutate(REG = substr(variable,0,2)) %>%
select(Year, variable, value, lci, uci)
years <- 1960:2019
nyear <- length(years)
tEnd <- length(years)
age <- 0:70
nage <- length(age)
survey_yf_predt <- data.frame(dat$surv_yf_pred)
names(survey_yf_predt) <- df$fltnames_surv
survey_yf_predt <- survey_yf_predt %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
mutate(Type = 'PRED') %>%
mutate(REG = substr(variable,0,2)) %>%
filter(value > 0)
survey_yf_errt <- data.frame(df$surv_yf_err) %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(!is.na(value))
survey_yf_obst <- data.frame( df$surv_yf_obs)  %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(value > 0) %>%
merge(survey_yf_errt, by = c('Year','variable')) %>%
mutate(value = value.x) %>%
## convert CV to SD via CV = mean/sd
## we think these are sds in mt (input to model as log)
mutate(Type = 'OBS',
lci = round(value - value*(value.y)),
uci = round(value + (value*value.y))) %>%
mutate(REG = substr(variable,0,2)) %>%
select(Year, variable, value, lci, uci)
ggplot(data = survey_yf_obst,
aes(x = Year, y = value, color = variable)) +
geom_line(data = survey_yf_predt, lwd = 0.75) +
scale_color_manual(values = survfltPal) +
geom_point(pch = 1, fill = NA, col = 'black') +
geom_errorbar(aes(ymin = lci, ymax = uci), col = 'black',width=0) +
scale_x_continuous(limits = c(1980,ifelse(df$yRun == 59,2021,1959+df$yRun)),
breaks = seq(1980,1960+df$yRun,10),
labels = seq(1980,1960+df$yRun,10)) +
theme_sleek() +
theme(legend.position = 'none')+
labs(y = 'survey', color = 'Fishing Fleet')+
facet_wrap(~variable, scales = "free_y")
survey_yf_predt
## 2019 Sab WC SS ----
wc <- SS_output(here("input","raw_data","2019 WC Stock Assessment"))
require(tidyverse)
require(reshape2)
require(r4ss)
require(here)
require(ggplot2)
require(ggsidekick)
require(PNWColors)
## 2019 Sab WC SS ----
wc <- SS_output(here("input","raw_data","2019 WC Stock Assessment"))
wc$derived_quants
wc$timeseries
wc$derived_quants[grep("SSB_", wc$derived_quants$Label),]
