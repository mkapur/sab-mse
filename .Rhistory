file = paste0(dumpfile,"/", Sys.Date(),'-catchM_fits.png'),
width = 10, height = 6, unit = 'in', dpi = 420)
## survey preds ----
survey_yf_predt <- data.frame(dat$surv_yf_pred)
names(survey_yf_predt) <- df$fltnames_surv
survey_yf_predt <- survey_yf_predt %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
mutate(Type = 'PRED') %>%
mutate(REG = substr(variable,0,2)) %>%
filter(value > 0)
survey_yf_errt <- data.frame(df$surv_yf_err) %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(!is.na(value))
survey_yf_obst <- data.frame( df$surv_yf_obs)  %>%
mutate(Year = years) %>%
melt(id = 'Year') %>%
filter(value > 0) %>%
merge(survey_yf_errt, by = c('Year','variable')) %>%
mutate(value = value.x) %>%
## convert CV to SD via CV = mean/sd
## we think these are sds in mt (input to model as log)
mutate(Type = 'OBS',
lci = round(value - value*(value.y)),
uci = round(value + (value*value.y))) %>%
mutate(REG = substr(variable,0,2)) %>%
select(Year, variable, value, lci, uci)
ggplot(data = survey_yf_obst,
aes(x = Year, y = value, color = variable)) +
geom_line(data = survey_yf_predt, lwd = 0.75) +
scale_color_manual(values = survfltPal) +
geom_point(pch = 1, fill = NA, col = 'black') +
geom_errorbar(aes(ymin = lci, ymax = uci), col = 'black',width=0) +
scale_x_continuous(limits = c(1980,ifelse(df$yRun == 59,2021,1959+df$yRun)),
breaks = seq(1980,1960+df$yRun,10),
labels = seq(1980,1960+df$yRun,10)) +
theme_sleek() +
theme(legend.position = 'none')+
labs(y = 'survey', color = 'Fishing Fleet')+
facet_wrap(~variable, scales = "free_y")
ggsave(last_plot(),
file =paste0(dumpfile,"/", Sys.Date(),'-survey_fits.png'),
width = 10, height = 6, unit = 'in',
dpi = 420)
## plot length_yais thru time ----
templyais<-NULL
for(i in 1:6){
for(y in 1:df$yRun){
templyais <- bind_rows(templyais,
# Length_yais_beg[y,,i,] %>%
# Length_yais_mid[y,,i,] %>%
dat$Length_yais_end[y,,i,] %>%
melt() %>%
plyr::rename(c('Var1' = 'age','Var2' = 'sex', 'value' = 'length')) %>%
mutate(year =  y,
subarea = paste0("Subarea ",i),
sex = ifelse(sex == 1,'Fem','Mal')))
}
}
ggplot(filter(templyais, sex == 'Fem') ,
aes(x = age, y = length, group = year)) +
geom_line(aes(color = year), alpha = 0.2, lwd = 0.5) +
scale_color_viridis_c() +
ggsidekick::theme_sleek() +
labs(x = 'Age (years)', y = 'Length (cm)',
title = 'Mean LAA in Subarea, Females') +
facet_wrap(~subarea, ncol = 6)
ggsave(last_plot(),
file =paste0(dumpfile,"/",
Sys.Date(),'-meanLAA_fem.png'),
width = 8, height = 6, units = 'in', dpi = 520)
ggplot(filter(templyais, sex == 'Mal') ,
aes(x = age, y = length, group = year)) +
geom_line(aes(color = year), alpha = 0.2, lwd = 0.5) +
scale_color_viridis_c() +
ggsidekick::theme_sleek() +
labs(x = 'Age (years)', y = 'Length (cm)',
title = 'Mean LAA in Subarea, Males') +
facet_wrap(~subarea, ncol = 6)
ggsave(last_plot(),
file =paste0(dumpfile,"/",
Sys.Date(),'-meanLAA_mal.png'),
width = 8, height = 6, units = 'in', dpi = 520)
## plot dist of LAA using length_alyis ----
# pA1 <- list() ## for area 1
# for(y in 1:5){ #45:dim(LengthAge_alyi_beg)[3]){ ## loop years
#   a1 <-
#     LengthAge_alyis_end[,,y,1,1] %>%
#     melt() %>%
#     group_by(Var2) %>%
#     mutate(sumP = sum(value), ## total prob within A-L bin
#            pbin = value/sumP) ## relative prob within A-L bin
#
#   ggplot(a1,aes( x = Var2, y = pbin, color = factor(Var1))) +
#     # geom_histogram(stat ='identity', position = 'stack') +
#     geom_line() +
#     geom_area(aes(fill=factor(Var1))) +
#     # geom_density( )+
#     labs(x = 'len', y = 'prob(Bin)', fill = 'age',
#          title = paste("year ",y),
#          subtitle= 'subarea 1') +
#     theme_sleek()
#
#   ggplot(a1,aes( x = Var1, y = pbin, color = factor(Var2))) +
#     # geom_histogram(stat ='identity', position = 'stack') +
#     geom_line() +
#     # geom_area(aes(fill=factor(Var2))) +
#     # geom_density( )+
#     labs(x = 'age', y = 'prob(Bin)', fill = 'len',
#          title = paste("year ",y),
#          subtitle= 'subarea 1') +
#     theme_sleek()
#
#   pA1[[y]] <- ggplot(a1,aes(x = Var1, y = Var2, fill = pbin)) +
#     geom_tile() +
#     labs(x = 'age', y = 'len',
#          title = paste("year ",y),
#          subtitle= 'subarea 1') +
#     theme_sleek()
#   rm(a1)
#   # p[[i]] <- qplot(1:10,10:1,main=i)
# }
# # png(here("figs","LAA_Dist_A1.png"),
# #     height = 10, width = 10, unit = 'in', res = 420)
# do.call(gridExtra::grid.arrange,pA1)
# dev.off()
# plot FISH selex ----
## bring estimates out and rearrange
## if everythign fixed use
if(length(mappy$log_fsh_slx_pars) == length(df$parms$log_fsh_slx_pars) ){
inputSel <- array(exp(df$parms$log_fsh_slx_pars),
dim = dim(df$parms$log_fsh_slx_pars),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
selP <- array(exp(df$parms$log_fsh_slx_pars),
dim = c(7,2,1,2))
} else{
inputSel <- array(exp(obj$par[grep('fsh_slx',names(obj$par))]),
dim = dim(df$parms$log_fsh_slx_pars),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
selP <- array(exp(best[grep('fsh_slx',names(best))]),
dim = c(7,2,1,2))
}
mapped_fsh_selnames <- c('AK_FIX','AK_TWL',paste(df$fltnames_fish[3:df$nfleets_fish]))
dimnames(selP)[[1]] <- mapped_fsh_selnames
fsh_sel_afs <- array(NA, dim = c(df$nage,
length(mapped_fsh_selnames),#df$nfleets_fish
2),
dimnames = list(c(df$age),
mapped_fsh_selnames,# c(paste(df$fltnames_fish)),
c('Fem','Mal')))
## function to take the estimated parameters
## and info about selType, selShape
## and spit out vector of selx@a or selx@L
for(a in 1:df$nage){
for(s in 1:2){
for(fish_flt in 1:length(mapped_fsh_selnames)){
fsh_sel_afs[,fish_flt,s] <- getSelec2(sex = s,
selP = selP,
flt_idx = fish_flt,
selType = df$selType_fish[fish_flt],
selShape = df$selShape_fish[fish_flt])
}
}
}
png(paste0(dumpfile,'/fishery_selex.png'),
height = 8, width = 6, unit = 'in', res = 420)
par(mfrow = c(4,2) )
for(flt in 1:length(mapped_fsh_selnames)){
for(s in 1:2){
tmp <- fsh_sel_afs[,flt,s]
## if fixed overwrite colors
if(length(mappy$log_fsh_slx_pars) == length(df$parms$log_fsh_slx_pars) ){
sexPal_temp = c('grey22','grey66')
} else{
sexPal_temp = sexPal
}
if(s == 1) plot(tmp,
col = sexPal_temp[1],
type = 'l',
yaxt = 'n',
lwd = 2,
xlab = ifelse(df$selType_fish[flt] == 0,
'Age','Length'),
ylab = 'Selectivity',
lty = 1,
ylim = c(0,1),
main = mapped_fsh_selnames[flt], xlim = c(0,75),
col.main  = c(rep(mgmtPal[1],2),
rep(mgmtPal[2],3),
rep(mgmtPal[3],2))[flt])
box(which = 'plot', lty = 'solid',
col = c(rep(mgmtPal[1],2), rep(mgmtPal[2],3),rep(mgmtPal[3],2))[flt],
lwd = 2)
axis(2, at = seq(0,1,0.2), labels = seq(0,1,0.2))
if(s == 2) lines(tmp, col = sexPal_temp[2], type = 'l', lty = 2, lwd = 2)
}
}
dev.off()
# plot SURV selex ----
## bring estimates out and rearrange
nsurvmod = df$nfleets_surv+(df$nfleets_acomp-4) ## bc we got selex for acomp flts too
Nas <- which(is.na(mappy[[grep("log_srv_slx_pars", names(mappy))]]))
nfixedfleets <- length(Nas)/4
nsurvmod <- nsurvmod - nfixedfleets
inputSel <- array(exp(obj$par[grep('log_srv_slx_pars',names(obj$par))]),
dim = dim(df$parms$log_srv_slx_pars),
dimnames = dimnames(df$parms$log_srv_slx_pars))
selP <- array(exp(best[grep('log_srv_slx_pars',names(best))]),
dim = c(nsurvmod,2,1,2))
dimnames(selP)[[1]] <- dimnames(df$parms$log_srv_slx_pars)[[1]][1:nsurvmod]
srv_sel_afs <- array(NA, dim =  c(df$nage,nsurvmod,2),
dimnames = list(c(df$age),
c(dimnames(df$parms$log_srv_slx_pars)[[1]][1:nsurvmod]),
c('Fem','Mal')))
## function to take the estimated parameters
## and info about selType, selShape
## and spit out vector of selx@a or selx@L
# for(a in 1:df$nage){
for(s in 1:2){
for(surv_flt in 1:nsurvmod){
srv_sel_afs[,surv_flt,s] <- getSelec2(sex = s,
selP = selP,
flt_idx = surv_flt,
selType = df$selType_surv[surv_flt],
selShape = df$selShape_surv[surv_flt],
fltType = 'surv')
}
}
# }
png(paste0(dumpfile,'/survey_selex.png'),
height = 8, width = 6, unit = 'in', res = 420)
par(mfrow = c(4,2) )
for(flt in 1:nsurvmod){
for(s in 1:2){
tmp <- srv_sel_afs[,flt,s]
if(s == 1) plot(tmp,
col = sexPal[1],
type = 'l',
lwd = 2,
xlab = ifelse(df$selType_surv[flt] == 0,
'Age','Length'),
ylab = 'Selectivity',
lty = 1,
ylim = c(0,1),
main = dimnames(df$parms$log_srv_slx_pars)[[1]][flt], xlim = c(0,75),
col.main  = c(rep(mgmtPal[1],4), rep(mgmtPal[2],3),rep(mgmtPal[3],2))[flt])
box(which = 'plot', lty = 'solid',
col = c(rep(mgmtPal[1],4), rep(mgmtPal[2],3),rep(mgmtPal[3],2))[flt],
lwd = 2)
if(s == 2) lines(tmp, col = sexPal[2], type = 'l', lty = 2, lwd = 2)
# seeddim = nestflts
# lines(bounds$lower type = 'v', col = sexPal[2])
}
}
dev.off()
} ## end func
writeOM(justPlots = FALSE,
dat=dat,
obj = obj,
opt = opt,
rep=rep,
cppname =cppname,
mappy = mappy,
runname = paste0("-",df$yRun,"y_",cppname,
"_fixAcompslx",
"_epstauon"))
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/-deprecated/2021-01-05-29y_v4_noslxbnds_lengthon/df_used.rdata")
df$Linf_yk
df$yRun
df$tEnd
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
# df$selShape_surv[3] <- -1 ## bc early is constant
# df$parms$logq_f <-
mappy <-
buildMap(toFix =  c("omega_0ij",
# "epsilon_tau",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh", "AK_GOA_SURV", "BC_StRS", "BC_SS"))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repeat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
dat <- obj$report(par = best)
## save everything and plot
cppname = substr(dllUSE,7,nchar(dllUSE))
writeOM(justPlots = FALSE,
dat=dat,
obj = obj,
opt = opt,
rep=rep,
cppname =cppname,
mappy = mappy,
runname = paste0("-",df$yRun,"y_",cppname,
"_fixAcompslx",
"_epstauon2"))
dat$surv_yf_pred/df$surv_yf_obs
#Read in and setup PacFIN Catches 81 - present
#Catches can be double counted here so be careful
#e.g. "ALL" in ARID is all catch by gear and state
#e.g. catches in 1A = CP as this is essentially the same area
#e.g. In the PCID column "AWA" stands for All WA ports.
require(here)
#read in pacfin catches
datfile2 = "PacFIN.SABL.Catch.INPFC.28.Mar.2019.dmp"
dir.base <- here('input','raw_data','catch')
DataYr <- 2018
filename2 <- paste(directory2,datfile2,sep="/")
load(filename2)
tempdata2 <- PacFIN.SABL.Catch.INPFC.28.Mar.2019
names(tempdata2)
DataYr <- 2018
dir.base
load( here('input','raw_data','catch',"PacFIN.SABL.Catch.INPFC.28.Mar.2019.dmp"))
tempdata2 <- PacFIN.SABL.Catch.INPFC.28.Mar.2019
names(tempdata2)
#"COUNCIL"  "YEAR"     "PERIOD"   "SPID"     "ARID"     "GRID"     "GRGROUP"  "PCID"     "CATCH.KG"
#PERIOD IS MONTH HERE!
tempdata2$Catch.MT <- tempdata2$CATCH.KG/1000	#convert to MT
Nyears <- DataYr-1981+1
#subset data to keep only areas of interest
tempdata2$flag <- 0
tempdata2 <- tempdata2[tempdata2$flag %in% 1,]      # remove unused records
tempdata2$flag[(tempdata2$ARID %in% c("CP","MT","EK","CL","VN","UI"))] <- 1
#catches by port of landing
Catch <- tempdata2[,c("YEAR","PCID","Catch.MT", "PERIOD", "GRGROUP","DAHL_SECTOR")]
#assign catches to state using PCID
Catch$State <- "NA"
Catch$State[Catch$PCID %in% c("AWA")] <- "WA"
Catch$State[Catch$PCID %in% c("AOR")] <- "OR"
Catch$State[Catch$PCID %in% c("ACA")] <- "CA"
#sum catches for each STATE
Catch.sum.state <- aggregate(Catch$Catch.MT,list(year=Catch$YEAR, state=Catch$State, gear=Catch$GRGROUP) ,sum)
names(Catch.sum.state) <- c("Year", "State", "Gear", "Catch.MT")
write.csv(Catch.sum.state, file = paste(directory2,"Catch.sum.state.allgears.csv", sep=""))
#catches by port of landing
Catch <- tempdata2[,c("YEAR","PCID","Catch.MT", "PERIOD", "GRGROUP","DAHL_SECTOR")]
Catch
tempdata2 <- PacFIN.SABL.Catch.INPFC.28.Mar.2019
#"COUNCIL"  "YEAR"     "PERIOD"   "SPID"     "ARID"     "GRID"     "GRGROUP"  "PCID"     "CATCH.KG"
#PERIOD IS MONTH HERE!
tempdata2$Catch.MT <- tempdata2$CATCH.KG/1000	#convert to MT
tempdata2
Nyears <- DataYr-1981+1
#subset data to keep only areas of interest
tempdata2$flag <- 0
tempdata2$flag[(tempdata2$ARID %in% c("CP","MT","EK","CL","VN","UI"))] <- 1
tempdata2 <- tempdata2[tempdata2$flag %in% 1,]      # remove unused records
tempdata2
#catches by port of landing
Catch <- tempdata2[,c("YEAR","PCID","Catch.MT", "PERIOD", "GRGROUP","DAHL_SECTOR")]
Catch
#assign catches to state using PCID
Catch$State <- "NA"
Catch$State[Catch$PCID %in% c("AWA")] <- "WA"
Catch$State[Catch$PCID %in% c("AOR")] <- "OR"
Catch$State[Catch$PCID %in% c("ACA")] <- "CA"
Catch
#sum catches for each STATE
Catch.sum.state <- aggregate(Catch$Catch.MT,list(year=Catch$YEAR, state=Catch$State, gear=Catch$GRGROUP) ,sum)
Catch.sum.state
names(Catch.sum.state) <- c("Year", "State", "Gear", "Catch.MT")
write.csv(Catch.sum.state, file = here('input','raw_data','catch',"Catch.sum.state.allgears.csv"), sep="")
#subset state hkl gear table
Catch.state.hkl <- subset(Catch, Catch$GRGROUP %in% c("HKL","TLS"))
Catch.sum.state.hkl <- aggregate(Catch.state.hkl$Catch.MT,list(year=Catch.state.hkl$YEAR, state=Catch.state.hkl$State) ,sum)
names(Catch.sum.state.hkl) <- c("Year", "State", "Catch.MT")
write.csv(Catch.sum.state.hkl, file = here('input','raw_data','catch',"Catch.sum.state.hklgears.csv"))
#subset state pot gear table
Catch.state.pot <- subset(Catch, Catch$GRGROUP %in% c("POT"))
Catch.sum.state.pot <- aggregate(Catch.state.pot$Catch.MT,list(year=Catch.state.pot$YEAR, state=Catch.state.pot$State) ,sum)
names(Catch.sum.state.pot) <- c("Year", "State", "Catch.MT")
write.csv(Catch.sum.state.pot, file = here('input','raw_data','catch',"Catch.sum.state.potgears.csv"))
# separate DAHL_SECTOR = 3 AND DAHL_SECTOR != 3
Catch.w3 <- Catch[ which(Catch$DAHL_SECTOR == "03"),]
Catch.no3 <- Catch[ which(Catch$DAHL_SECTOR != "03"),]
#subset state trawl gear table
Catch.state.trawl <- subset(Catch.no3, Catch.no3$GRGROUP  %in% c("TWL", "TWS", "NET", "MSC", "DRG"))
Catch.sum.state.trawl <- aggregate(Catch.state.trawl$Catch.MT,list(year=Catch.state.trawl$YEAR, state=Catch.state.trawl$State) ,sum)
names(Catch.sum.state.trawl) <- c("Year", "State", "Catch.MT")
write.csv(Catch.sum.state.trawl, file = paste(directory2,"Catch.sum.state.trawlgears.csv", sep=""))
#subset state pot gear table
Catch.state.pot <- subset(Catch, Catch$GRGROUP %in% c("POT"))
Catch.sum.state.pot <- aggregate(Catch.state.pot$Catch.MT,list(year=Catch.state.pot$YEAR, state=Catch.state.pot$State) ,sum)
names(Catch.sum.state.pot) <- c("Year", "State", "Catch.MT")
write.csv(Catch.sum.state.pot, file = here('input','raw_data','catch',"Catch.sum.state.potgears.csv"))
# separate DAHL_SECTOR = 3 AND DAHL_SECTOR != 3
Catch.w3 <- Catch[ which(Catch$DAHL_SECTOR == "03"),]
Catch.no3 <- Catch[ which(Catch$DAHL_SECTOR != "03"),]
#subset state trawl gear table
Catch.state.trawl <- subset(Catch.no3, Catch.no3$GRGROUP  %in% c("TWL", "TWS", "NET", "MSC", "DRG"))
Catch.sum.state.trawl <- aggregate(Catch.state.trawl$Catch.MT,list(year=Catch.state.trawl$YEAR, state=Catch.state.trawl$State) ,sum)
names(Catch.sum.state.trawl) <- c("Year", "State", "Catch.MT")
write.csv(Catch.sum.state.trawl, file = here('input','raw_data','catch',"Catch.sum.state.trawlgears.csv"))
Catch.state.trawl.only <- subset(Catch.no3, Catch.no3$GRGROUP  %in% c("TWL"))
Catch.sum.state.trawl.only <- aggregate(Catch.state.trawl.only$Catch.MT,list(year=Catch.state.trawl.only$YEAR, state=Catch.state.trawl.only$State) ,sum)
names(Catch.sum.state.trawl.only) <- c("Year", "State", "Catch.MT")
write.csv(Catch.sum.state.trawl.only, file = here('input','raw_data','catch',"Catch.sum.state.trawlgears.only.csv"))
#subset state trawl gears with dalh_sector = 3, these are hake trips that catch small sablefish
Catch.state.trawl.hake <- subset(Catch.w3, Catch.w3$GRGROUP  %in% c("TWL", "TWS", "NET", "MSC", "DRG"))
Catch.sum.state.trawl.hake <- aggregate(Catch.state.trawl.hake$Catch.MT,list(year=Catch.state.trawl.hake$YEAR, state=Catch.state.trawl.hake$State) ,sum)
names(Catch.sum.state.trawl.hake) <- c("Year", "State", "Catch.MT")
write.csv(Catch.sum.state.trawl.hake, file = here('input','raw_data','catch',"Catch.sum.state.trawlgears.hake.csv"))
load("C:/Users/mkapur/Dropbox/UW/sab-mse/input/raw_data/catch/PacFIN.SABL.bds.03.Dec.2020.RData")
newDat = load(here('input','raw_data','catch',"PacFIN.SABL.bds.03.Dec.2020.RData"))
names(newDat)
newDat
View(PacFIN.SABL.bds.03.Dec.2020)
tempdata2 <- PacFIN.SABL.bds.03.Dec.2020
names(tempdata2)
tempdata2 <- PacFIN.SABL.bds.03.Dec.2020 %>% select("COUNCIL")
require(dplyr)
tempdata2 <- PacFIN.SABL.bds.03.Dec.2020 %>% select("COUNCIL")
PacFIN.SABL.bds.03.Dec.2020
tempdata2 <- PacFIN.SABL.bds.03.Dec.2020 %>%
select("COUNCIL","YEAR","PERIOD","SPID","ARID","GRID","GRGROUP","PCID","CATCH.KG")
tempdata2 <- PacFIN.SABL.bds.03.Dec.2020 %>%
select("YEAR","PERIOD","SPID","ARID","GRID","GRGROUP","PCID","CATCH.KG")
names(tempdata2)
sort(names(tempdata2))
newDat <- PacFIN.SABL.bds.03.Dec.2020
tempdata2 <- PacFIN.SABL.Catch.INPFC.28.Mar.2019
head(tempdata2)
subset(tempdata2, YEAR == 2002, PERIOD ==0)
subset(tempdata2, YEAR == 2002, PERIOD ==9)
subset(tempdata2, YEAR == "2002", PERIOD =="9")
summary(tempdata2)
subset(tempdata2, "YEAR" == 2002, "PERIOD" ==9)
subset(tempdata2, "YEAR" == 2002)
subset(tempdata2, "YEAR" == 1981)
filter(tempdata2, YEAR == 2002)
filter(tempdata2, YEAR == 2002, PERIOD == 9)
head(tempdata2)
filter(tempdata2, YEAR == 2002, PERIOD == 9, CATCH_KG == 362.87762)
filter(tempdata2, YEAR == 2002, PERIOD == 9, CATCH.KG == 362.87762)
filter(tempdata2, YEAR == 2002, PERIOD == 9, CATCH.KG  > 362)
filter(tempdata2, YEAR == 2002, PERIOD == 9, CATCH.KG  > 362 & CATCH.KG < 362.5)
filter(tempdata2, YEAR == 2002, PERIOD == 9, CATCH.KG  > 362 & CATCH.KG < 363)
filter(newDat, SAMPLE_YEAR == 2002, SAMPLE_MONTH == 9)
filter(newDat, SAMPLE_YEAR == 2002, SAMPLE_MONTH == 9, TOTAL_WT > 362)
sort(names(newDat))
filter(newDat, SAMPLE_YEAR == 2002, SAMPLE_MONTH == 9, TOTAL_WGT > 362)
filter(newDat, SAMPLE_YEAR == 2002, SAMPLE_MONTH == 9, TOTAL_WGT > 362 & TOTAL_WGT < 363)
filter(newDat, SAMPLE_YEAR == 2002, SAMPLE_MONTH == 9, SPECIES_WGT > 362 & SPECIES_WGT < 363)
filter(newDat, SAMPLE_YEAR == 2002, SAMPLE_MONTH == 9, FISH_WEIGHT > 362 & FISH_WEIGHT < 363)
filter(tempdata2, YEAR == 2002, PERIOD == 9, CATCH.KG  > 362 & CATCH.KG < 362.5)
filter(tempdata2, YEAR == 2002, PERIOD == 9, CATCH.KG  > 362 & CATCH.KG < 363)
which(newDat == 362.8776)
which(newDat == 363)
newDat[which(newDat == 363),]
filter(tempdata2, CATCH.KG ==1)
filter(tempdata2, CATCH.KG <5)
filter(tempdata2, CATCH.KG ==3.62877620)
filter(tempdata2, CATCH.KG >3.6 & CATCH.KG < 3.7)
filter(tempdata2, CATCH.KG >3.62 & CATCH.KG < 3.63)
summary(newdat)
summary(newDat)
summary(tempdata2$CATCH.KG)
newDat = load(here('input','raw_data','catch',"PacFIN.SABL.Catch.03.Dec.2020.RData"))
newDat <- PacFIN.SABL.bds.03.Dec.2020 %>%
select("COUNCIL","YEAR","PERIOD","SPID","PSMFC_ARID","GRID","GRGROUP","PCID","CATCH.KG")
newDat <- PacFIN.SABL.Catch.03.Dec.2020 %>%
select("COUNCIL","YEAR","PERIOD","SPID","PSMFC_ARID","GRID","GRGROUP","PCID","CATCH.KG")
newDat
newDat <- PacFIN.SABL.Catch.03.Dec.2020
newDat%>%
select("COUNCIL","YEAR","PERIOD","SPID","PSMFC_ARID","GRID","GRGROUP","PCID","CATCH.KG")
newDat
class(newDat)
str(newDat)
newDat <- PacFIN.SABL.Catch.03.Dec.2020$PacFIN.INPFC.Summary.Catch
newDat%>% select("COUNCIL","YEAR","PERIOD","SPID","PSMFC_ARID","GRID","GRGROUP","PCID","CATCH.KG")
newDat%>% select("COUNCIL","YEAR","PERIOD","SPID","ARID","GRID","GRGROUP","PCID","CATCH.KG")
