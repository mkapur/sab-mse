}
Linf_yk[1:(2009-1960),r,s] <- temp$Linf[temp$Period == 'early']
Linf_yk[(2009-1960):nrow(Linf_yk),r,s] <- temp$Linf[temp$Period == 'late']
L1_yk[1:(2009-1960),r,s] <- temp$L1[temp$Period == 'early']
L1_yk[(2009-1960):nrow(L1_yk),r,s] <- temp$L1[temp$Period == 'late']
kappa_yk[1:(2009-1960),r,s] <- temp$k[temp$Period == 'early']
kappa_yk[(2009-1960):nrow(Linf_yk),r,s] <- temp$k[temp$Period == 'late']
sigmaG_yk[1:(2009-1960),r,s] <- temp$Sigma[temp$Period == 'early']
sigmaG_yk[(2009-1960):nrow(Linf_yk),r,s] <- temp$Sigma[temp$Period == 'late']
}
}
## growth ----
## load growth params - this used to happen in load_data_seasons
growPar <- read.csv(here("input","raw_data","demography","Table3_2020-05-06phase2.csv"))
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
growPar$Sex <- substrRight(as.character(growPar$Sex), 1)## overwrite for loops
# array of year x stock x sex
Linf_yk <- L1_yk <- kappa_yk <- sigmaG_yk <- array(NA,
dim = c(length(1960:2018),
length(unique(growPar$Region)),2))
for(s in 1:2){
for(r in 1:4){
temp <- subset(growPar, Sex == c("F","M")[s] & Region == paste0("R",c(1,2,4,5)[r]))
if("pool" %in% temp$Period){
Linf_yk[,r,s] <- temp$Linf
L1_yk[,r,s] <- temp$L1
kappa_yk[,r,s] <- temp$k
sigmaG_yk[,r,s] <- temp$Sigma
next()
}
Linf_yk[1:(2009-1960),r,s] <- temp$Linf[temp$Period == 'early']
Linf_yk[(2009-1960):nrow(Linf_yk),r,s] <- temp$Linf[temp$Period == 'late']
L1_yk[1:(2009-1960),r,s] <- temp$L1[temp$Period == 'early']
L1_yk[(2009-1960):nrow(L1_yk),r,s] <- temp$L1[temp$Period == 'late']
kappa_yk[1:(2009-1960),r,s] <- temp$k[temp$Period == 'early']
kappa_yk[(2009-1960):nrow(Linf_yk),r,s] <- temp$k[temp$Period == 'late']
sigmaG_yk[1:(2009-1960),r,s] <- temp$Sigma[temp$Period == 'early']
sigmaG_yk[(2009-1960):nrow(Linf_yk),r,s] <- temp$Sigma[temp$Period == 'late']
}
}
Linf_yk
growthPars <- list("Linf_yk"=Linf_yk, "L1_yk"=L1_yk,
"kappa_yk"=kappa_yk, "sigmaG_yk"=sigmaG_yk)
save(growthPars,
file = here('input','input_data',"OM_growthPars.rdata"))
# Run the simulation model
# assessment <- read.csv(here("input","data",'assessment_MLE.csv')) ## I believe this comes from SS3
# assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
# Catch.obs <- read.csv(here("input","data",'hake_totcatch.csv'))
df <- load_data_seasons(nspace = 6, move = FALSE) ## data that works with OM
runOM_datagen(df)
rm(Linf_yk)
runOM_datagen(df)
df$Linf_yk
phi_ik2+1
phi_ik2
df$phi_ik2
Linf[2,4]
Linf_yk[2,4]
phi_ik2
phi_ik2[i]
Linf_yk
# // growth //
Linf_yk <- df$Linf_yk
,phi_ik2[i]
Linf_yk[1,phi_ik2[i]]
phi_ik2[i]
Linf_yk
Linf_yk[1,4]
Linf_yk[1,phi_ik2[i],1]
library(sf)
library(tibble)
require(ggplot2)
require(dplyr)
require(patchwork)
require(ggsidekick)
require(rgdal)
library(marmap)
require(rerddap)
require(here)
?griddap
#* ocean SST ----
# https://rmendels.github.io/pices2017.nb.html
sstInfo <- info('jplMURSST41')
# get latest daily sst
murSST <- griddap(sstInfo, latitude = c(22., 75),
longitude = c(-179., -115, 175,180), time = c('last','last'),
fields = 'analysed_sst', stride = 2)
murSST$data$lon= murSST$data$lon+360
save(murSST, file = here("input","downloads","murSST.RDA"))
mycolor <- colors$temperature
## settings
land.col <- "cornsilk1"
EEZ.border.col <- 'black'
EEZ.fill.col <- c('grey22','grey44','grey66')
currents.col <- c("#000000", "#009E73", "#0072B2","#e79f00","#e79f00")
# c("gold", "dodgerblue","#ABDDA4", "#ABDDA4" ,"grey22")
## manual legend placement
x1 <- rep(180, 4); x1end <- rep(190, 4)
y1 <- rev(seq(30,35,length.out = 4))
ggplot(data = regions) +
theme_sleek() +
labs(x ="",y="", fill = 'SST (mean *C)') +
geom_raster(data = murSST$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
scale_fill_gradientn(colours = colors$temperature, na.value = NA) +
## EEZ
geom_sf(lwd = 1, col = EEZ.border.col, fill = EEZ.fill.col, alpha = 0.2) +
## land
geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = NA) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 60))
## political boundaries ----
load(here("input","downloads","eez_nepac_regions.RDA"))
regions <- eez_nepac_regions
usa <- map_data("world") %>% filter(region %in% c("USA","Canada"))
usa$long  <- usa$long+360
## LME Clips ----
ggplot(data = regions) +
theme_sleek() +
labs(x ="",y="", fill = 'SST (mean *C)') +
geom_raster(data = murSST$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
scale_fill_gradientn(colours = colors$temperature, na.value = NA) +
## EEZ
geom_sf(lwd = 1, col = EEZ.border.col, fill = EEZ.fill.col, alpha = 0.2) +
## land
geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = NA) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 60))
murSST <- griddap(sstInfo, latitude = c(22., 75),
longitude = c(-179., -115), time = c('last','last'),
fields = 'analysed_sst', stride = 2)
murSST$data$lon= murSST$data$lon+360
##AI Chunk
murSSTB <- griddap(sstInfo, latitude = c(22., 75),
longitude = c( 175,180), time = c('last','last'),
fields = 'analysed_sst', stride = 2)
murSSTB$data$lon= murSSTB$data$lon+360
ggplot(data = regions) +
theme_sleek() +
labs(x ="",y="", fill = 'SST (mean *C)') +
geom_raster(data = murSST$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
geom_raster(data = murSSTB$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
scale_fill_gradientn(colours = colors$temperature, na.value = NA) +
## EEZ
geom_sf(lwd = 1, col = EEZ.fill.col, fill = EEZ.fill.col, alpha = 0.2) +
## land
# geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = NA) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 60))
# w <- mapdata::map_data("worldHires", ylim = c(22., 51.), xlim = c(-140, -105))
ggplot(data = murSSTB$data, aes(x = lon, y = lat, fill = analysed_sst)) +
# geom_polygon(data = w, aes(x = long, y = lat, group = group), fill = "grey80") +
geom_raster(interpolate = FALSE) +
scale_fill_gradientn(colours = mycolor, na.value = NA) +
theme_bw() + ylab("latitude") + xlab("longitude") +
# coord_fixed(1.3, xlim = c(-140+360, -105+360),  ylim = c(22., 51.)) +
ggtitle("Latest MUR SST")
murSSTB <- griddap(sstInfo, latitude = c(22., 75),
longitude = c(175,180), time = c('last','last'),
fields = 'analysed_sst', stride = 2)
murSSTB$data$lon= murSSTB$data$lon-360
# w <- mapdata::map_data("worldHires", ylim = c(22., 51.), xlim = c(-140, -105))
ggplot(data = murSSTB$data, aes(x = lon, y = lat, fill = analysed_sst)) +
# geom_polygon(data = w, aes(x = long, y = lat, group = group), fill = "grey80") +
geom_raster(interpolate = FALSE) +
scale_fill_gradientn(colours = mycolor, na.value = NA) +
theme_bw() + ylab("latitude") + xlab("longitude") +
# coord_fixed(1.3, xlim = c(-140+360, -105+360),  ylim = c(22., 51.)) +
ggtitle("Latest MUR SST")
summary(murSST$data$lon)
summary(murSSTB$data$lon)
##AI Chunk - SHOULD RUN AT 179 ONCE CORRECTED
murSSTB <- griddap(sstInfo, latitude = c(22., 75),
longitude = c(175,180), time = c('last','last'),
fields = 'analysed_sst', stride = 2)
murSSTB$data$lon= (murSSTB$data$lon-360)*-1
summary(murSSTB$data$lon)
# w <- mapdata::map_data("worldHires", ylim = c(22., 51.), xlim = c(-140, -105))
ggplot(data = murSSTB$data, aes(x = lon, y = lat, fill = analysed_sst)) +
# geom_polygon(data = w, aes(x = long, y = lat, group = group), fill = "grey80") +
geom_raster(interpolate = FALSE) +
scale_fill_gradientn(colours = mycolor, na.value = NA) +
theme_bw() + ylab("latitude") + xlab("longitude") +
# coord_fixed(1.3, xlim = c(-140+360, -105+360),  ylim = c(22., 51.)) +
ggtitle("Latest MUR SST")
ggplot(data = regions) +
theme_sleek() +
labs(x ="",y="", fill = 'SST (mean *C)') +
geom_raster(data = murSST$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
geom_raster(data = murSSTB$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
scale_fill_gradientn(colours = colors$temperature, na.value = NA) +
## EEZ
geom_sf(lwd = 1, col = EEZ.fill.col, fill = EEZ.fill.col, alpha = 0.2) +
## land
# geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = NA) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 60))
summary(murSSTB$data$lon)
##AI Chunk - SHOULD RUN AT 179 ONCE CORRECTED
murSSTB <- griddap(sstInfo, latitude = c(22., 75),
longitude = c(175,180), time = c('last','last'),
fields = 'analysed_sst', stride = 2)
# murSSTB$data$lon= (murSSTB$data$lon-360)*-1
summary(murSSTB$data$lon)
ggplot(data = regions) +
theme_sleek() +
labs(x ="",y="", fill = 'SST (mean *C)') +
geom_raster(data = murSST$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
geom_raster(data = murSSTB$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
scale_fill_gradientn(colours = colors$temperature, na.value = NA) +
## EEZ
geom_sf(lwd = 1, col = EEZ.fill.col, fill = EEZ.fill.col, alpha = 0.2) +
## land
# geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = NA) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 60))
## Fig 1: SST  ----
ocsst <- ggplot(data = regions) +
theme_sleek() +
labs(x ="",y="", fill = 'SST (mean *C)') +
geom_raster(data = murSST$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
geom_raster(data = murSSTB$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
scale_fill_gradientn(colours = colors$temperature, na.value = NA) +
## EEZ
geom_sf(lwd = 1, col = EEZ.fill.col, fill = EEZ.fill.col, alpha = 0.2) +
## land
# geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = NA) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 60))
# Fig 2: LMEs ----
lmes <- ggplot(data = regions) +
theme_sleek() +
## EEZ and land
geom_sf(lwd = 1, col = EEZ.border.col, fill = EEZ.fill.col, alpha = 0.2) +
geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = land.col) +
## manual legend
annotate("segment", x = x1, xend = x1end, y = y1, yend = y1,
colour = currents.col[1:4], size = 1.1) +
annotate("text", x = x1+20, y = y1,
label =  c('Alaskan Current',
'N. Pacific Current',
'S. California Bight',
'California Current'),
size = 2) +
##* add LMEs ----
geom_sf(data = bering, fill = 'blue', alpha = 0.9, color = NA) +
geom_sf(data = aleut, fill = 'blue', alpha = 0.9, color = NA) +
geom_sf(data = gulf, fill = 'pink', alpha = 0.9, color = NA) +
geom_sf(data = ptcon, fill = 'grey22', alpha = 0.9, color = NA) +
labs(x ="",y="") +
## add currents
geom_polygon(data = shapefile_df,
aes(x = long, y = lat, group = group, fill = id),
fill = rep(currents.col,
length(shapefile_df$id)/5), size = 0.2) +
geom_label(aes(x = x1[1]+5, y = 55, label = "BS/AI"), fill = "grey88",
size = 2) +
geom_label(aes(x = x1[1]+30, y = 55, label = "GOA"), fill = "grey88",
size = 2) +
geom_label(aes(x = x1[1]+55, y = 34, label = "S. Pt Conception"), fill = "grey88",
size = 2) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 65))
## LME Clips ----
# BS
BS <- tibble(X = seq(-200 + 360, -155 + 360, length.out = 100),
Y = seq(55, 65, length.out = 100)) %>% as.matrix()
n50BS_poly <- st_linestring(BS)
n50BS_geom <- st_sfc(list(n50BS_poly), crs = "+proj=longlat +datum=WGS84 +no_defs")
n50BS_shape <- st_sf(n50BS_geom)
bering <- st_crop(regions %>% filter(Region_Name == 'Alaska'),
n50BS_shape)
##AI
AI <- tibble(X = seq(-200 + 360, -170 + 360, length.out = 100),
Y = seq(45, 65, length.out = 100)) %>% as.matrix()
n50AI_geom <- st_sfc(list(n50AI_poly), crs = "+proj=longlat +datum=WGS84 +no_defs")
n50AI_shape <- st_sf(n50AI_geom)
aleut <- st_crop(regions %>% filter(Region_Name == 'Alaska'),
n50AI_shape)
## Gulf
GOA <- tibble(X = seq(-170 + 360, -130 + 360, length.out = 100),
Y = seq(45, 60, length.out = 100)) %>% as.matrix()
n50AI_poly <- st_linestring(AI)
n50GOA_poly <- st_linestring(GOA)
n50GOA_geom <- st_sfc(list(n50GOA_poly), crs = "+proj=longlat +datum=WGS84 +no_defs")
n50GOA_shape <- st_sf(n50GOA_geom)
AI <- tibble(X = seq(-200 + 360, -170 + 360, length.out = 100),
Y = seq(45, 65, length.out = 100)) %>% as.matrix()
n50AI_poly <- st_linestring(AI)
n50AI_geom <- st_sfc(list(n50AI_poly), crs = "+proj=longlat +datum=WGS84 +no_defs")
n50AI_shape <- st_sf(n50AI_geom)
aleut <- st_crop(regions %>% filter(Region_Name == 'Alaska'),
n50AI_shape)
## Gulf
GOA <- tibble(X = seq(-170 + 360, -130 + 360, length.out = 100),
Y = seq(45, 60, length.out = 100)) %>% as.matrix()
n50GOA_poly <- st_linestring(GOA)
n50GOA_geom <- st_sfc(list(n50GOA_poly), crs = "+proj=longlat +datum=WGS84 +no_defs")
n50GOA_shape <- st_sf(n50GOA_geom)
gulf <- st_crop(regions %>% filter(Region_Name == 'Alaska'),
n50GOA_shape)
Conc <- tibble(X = seq(-135 + 360, -115 + 360, length.out = 100),
Y = seq(28, 36, length.out = 100)) %>% as.matrix()
n50Conc_poly <- st_linestring(Conc)
n50Conc_geom <- st_sfc(list(n50Conc_poly), crs = "+proj=longlat +datum=WGS84 +no_defs")
n50Conc_shape <- st_sf(n50Conc_geom)
ptcon <- st_crop(regions %>% filter(Region_Name == 'US West Coast'),
n50Conc_shape)
shape <- readOGR(dsn = "C:/Users/MKapur/Dropbox/UW/sab-growth/raw_data/Major_Ocean_Currents_arrowPolys_30m_8",
layer = 'Major_Ocean_Currents_arrowPolys_30m_8')
shapefile_df <- fortify(shape)
shapefile_df$long <- shapefile_df$long+360
##AI Chunk - SHOULD RUN AT 179 ONCE CORRECTED
murSSTB <- griddap(sstInfo, latitude = c(22., 75),
longitude = c(175,-179), time = c('last','last'),
fields = 'analysed_sst', stride = 2)
sstInfo <- info('jplMURSST41')
# get latest daily sst
murSST <- griddap(sstInfo, latitude = c(22., 75),
longitude = c(-179.9, -115), time = c('last','last'),
fields = 'analysed_sst', stride = 2)
murSST$data$lon= murSST$data$lon+360
##AI Chunk - SHOULD RUN AT 179 ONCE CORRECTED
murSSTB <- griddap(sstInfo, latitude = c(22., 75),
longitude = c(175,180), time = c('last','last'),
fields = 'analysed_sst', stride = 2)
# murSSTB$data$lon= (murSSTB$data$lon-360)*-1
summary(murSSTB$data$lon)
save(list(murSST,murSSTB), file = here("input","downloads","murSST.RDA"))
save(list(c(murSST,murSSTB)), file = here("input","downloads","murSST.RDA"))
ggplot(data = regions) +
theme_sleek() +
labs(x ="",y="", fill = 'SST (mean *C)') +
geom_raster(data = murSST$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
geom_raster(data = murSSTB$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
scale_fill_gradientn(colours = colors$temperature, na.value = NA) +
## EEZ
geom_sf(lwd = 1, col = EEZ.fill.col, fill = EEZ.fill.col, alpha = 0.2) +
## land
# geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = NA) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 60))
# murSSTB$data$lon= (murSSTB$data$lon-360)*-1
summary(murSSTB$data$lon)
##AI Chunk - SHOULD RUN AT 179 ONCE CORRECTED
murSSTB <- griddap(sstInfo, latitude = c(22., 75),
longitude = c(170,180), time = c('last','last'),
fields = 'analysed_sst', stride = 2)
ggplot(data = regions) +
theme_sleek() +
labs(x ="",y="", fill = 'SST (mean *C)') +
geom_raster(data = murSST$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
geom_raster(data = murSSTB$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
scale_fill_gradientn(colours = colors$temperature, na.value = NA) +
## EEZ
geom_sf(lwd = 1, col = EEZ.fill.col, fill = EEZ.fill.col, alpha = 0.2) +
## land
# geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = NA) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 60))
# get latest daily sst
murSST <- griddap(sstInfo, latitude = c(22., 75),
longitude = c(-179.99, -115), time = c('last','last'),
fields = 'analysed_sst', stride = 2)
murSST$data$lon= murSST$data$lon+360
summary(murSST$data$lon)
ggplot(data = regions) +
theme_sleek() +
labs(x ="",y="", fill = 'SST (mean *C)') +
geom_raster(data = murSST$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
geom_raster(data = murSSTB$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
scale_fill_gradientn(colours = colors$temperature, na.value = NA) +
## EEZ
geom_sf(lwd = 1, col = EEZ.fill.col, fill = EEZ.fill.col, alpha = 0.2) +
## land
# geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = NA) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 60))
## Fig 1: SST  ----
ocsst <- ggplot(data = regions) +
theme_sleek() +
labs(x ="",y="", fill = 'SST (mean *C)') +
geom_raster(data = murSST$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
geom_raster(data = murSSTB$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
scale_fill_gradientn(colours = colors$temperature, na.value = NA) +
## EEZ
geom_sf(lwd = 1, col = EEZ.fill.col, fill = EEZ.fill.col, alpha = 0.2) +
## land
# geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = NA) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 60))
## Fig 1: SST  ----
ocsst <- ggplot(data = regions) +
theme_sleek() +
labs(x ="",y="", fill = 'SST (mean *C)') +
geom_raster(data = murSST$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
geom_raster(data = murSSTB$data, aes(x = lon, y = lat,
fill = analysed_sst),
interpolate = TRUE) +
scale_fill_gradientn(colours = colors$temperature, na.value = NA) +
## EEZ
geom_sf(lwd = 1, col = 'black', fill = EEZ.fill.col, alpha = 0.2) +
## land
# geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = NA) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 60))
## ocsst takes 5 mins to render,
ggsave(lmes   | ocsst,
file = here("figs","lmes_sst.png"),
width = 8, height = 6, dpi = 420)
# Fig 2: LMEs ----
lmes <- ggplot(data = regions) +
theme_sleek() +
## EEZ and land
geom_sf(lwd = 1, col = EEZ.border.col, fill = EEZ.fill.col, alpha = 0.2) +
geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = land.col) +
## manual legend
annotate("segment", x = x1, xend = x1end, y = y1, yend = y1,
colour = currents.col[1:4], size = 1.1) +
annotate("text", x = x1+20, y = y1,
label =  c('Alaskan Current',
'N. Pacific Current',
'S. California Bight',
'California Current'),
size = 2) +
##* add LMEs ----
geom_sf(data = bering, fill = 'blue', alpha = 0.9, color = NA) +
geom_sf(data = aleut, fill = 'blue', alpha = 0.9, color = NA) +
geom_sf(data = gulf, fill = 'pink', alpha = 0.9, color = NA) +
geom_sf(data = ptcon, fill = 'grey22', alpha = 0.9, color = NA) +
labs(x ="",y="") +
## add currents
geom_polygon(data = shapefile_df,
aes(x = long, y = lat, group = group, fill = id),
fill = rep(currents.col,
length(shapefile_df$id)/5), size = 0.2) +
geom_label(aes(x = x1[1]+5, y = 55, label = "BS/AI"), fill = "grey88",
size = 2) +
geom_label(aes(x = x1[1]+30, y = 55, label = "GOA"), fill = "grey88",
size = 2) +
geom_label(aes(x = x1[1]+55, y = 34, label = "S. Pt Conception"), fill = "grey88",
size = 2) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 65))
## ocsst takes 5 mins to render,
ggsave(lmes   | ocsst,
file = here("figs","lmes_sst.png"),
width = 8, height = 6, dpi = 420)
# Fig 2: LMEs ----
lmes <- ggplot(data = regions) +
theme_sleek() +
## EEZ and land
geom_sf(lwd = 1, col = EEZ.border.col, fill = EEZ.fill.col, alpha = 0.2) +
geom_polygon(data = usa, aes(x = long, y = lat, group = group), fill = land.col) +
## manual legend
annotate("segment", x = x1, xend = x1end, y = y1, yend = y1,
colour = currents.col[1:4], size = 1.1) +
annotate("text", x = x1+20, y = y1,
label =  c('Alaskan Current',
'N. Pacific Current',
'S. California Bight',
'California Current'),
size = 2) +
##* add LMEs ----
geom_sf(data = bering, fill = 'blue', alpha = 0.9, color = NA) +
geom_sf(data = aleut, fill = 'blue', alpha = 0.9, color = NA) +
geom_sf(data = gulf, fill = 'pink', alpha = 0.9, color = NA) +
geom_sf(data = ptcon, fill = 'grey22', alpha = 0.9, color = NA) +
labs(x ="",y="") +
## add currents
geom_polygon(data = shapefile_df,
aes(x = long, y = lat, group = group, fill = id),
fill = rep(currents.col,
length(shapefile_df$id)/5), size = 0.2) +
geom_label(aes(x = x1[1]+5, y = 55, label = "BS/AI"), fill = "grey88",
size = 2) +
geom_label(aes(x = x1[1]+30, y = 55, label = "GOA"), fill = "grey88",
size = 2) +
geom_label(aes(x = x1[1]+50, y = 36, label = "S. Pt Conception"), fill = "grey88",
size = 2) +
coord_sf(xlim = c(175, 240), ylim = c(25.5, 65))
## ocsst takes 5 mins to render,
ggsave(lmes   | ocsst,
file = here("figs","lmes_sst.png"),
width = 10, height = 8, dpi = 420)
