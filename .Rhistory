ylt = 2*max(sum(dat$N_yais_end[2,,i,][!is.na(dat$N_yais_end[2,,i,])]),
sum(dat$N_yais_end[df$yRun,,i,][!is.na(dat$N_yais_end[df$yRun,,i,])]))
plot(rowSums(dat$N_yais_beg[,,i,]),
type = 'l',
lwd = 2,
col = scales::alpha(rev(rev(subareaPal)[i]),0.2),
main = inames[i],
col.main = rev(rev(subareaPal)[i]),
ylim = c(0,ylt),
xlim = c(0,nyear),xaxt='n',
xlab = "Model Year",
ylab = 'Numbers (M+F)')
lines(rowSums(dat$N_yais_mid[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(rev(rev(subareaPal)[i]),0.4))
lines(rowSums(dat$N_yais_end[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(rev(rev(subareaPal)[i]),0.8))
legend("topright",col = c(scales::alpha(rev(rev(subareaPal)[i]),0.2),
scales::alpha(rev(rev(subareaPal)[i]),0.4),
scales::alpha(rev(rev(subareaPal)[i]),0.8)),
legend = c("beg",
"mid (move)",
"end (fished)"), cex = 0.7, lty =1, lwd = 5)
axis(1, at = seq(1,nyear,5), labels = years[seq(1,nyear,5)])
}
dat$N_yais_beg[1:df$yRun,,i,]
for(i in 1:6){
ylt = 2*max(sum(dat$N_yais_end[2,,i,][!is.na(dat$N_yais_end[2,,i,])]),
sum(dat$N_yais_end[df$yRun,,i,][!is.na(dat$N_yais_end[df$yRun,,i,])]))
plot(rowSums(dat$N_yais_beg[1:df$yRun,,i,]),
type = 'l',
lwd = 2,
col = scales::alpha(rev(rev(subareaPal)[i]),0.2),
main = inames[i],
col.main = rev(rev(subareaPal)[i]),
ylim = c(0,ylt),
xlim = c(0,nyear),xaxt='n',
xlab = "Model Year",
ylab = 'Numbers (M+F)')
lines(rowSums(dat$N_yais_mid[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(rev(rev(subareaPal)[i]),0.4))
lines(rowSums(dat$N_yais_end[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(rev(rev(subareaPal)[i]),0.8))
legend("topright",col = c(scales::alpha(rev(rev(subareaPal)[i]),0.2),
scales::alpha(rev(rev(subareaPal)[i]),0.4),
scales::alpha(rev(rev(subareaPal)[i]),0.8)),
legend = c("beg",
"mid (move)",
"end (fished)"), cex = 0.7, lty =1, lwd = 5)
axis(1, at = seq(1,nyear,5), labels = years[seq(1,nyear,5)])
}
for(i in 1:6){
ylt = 2*max(sum(dat$N_yais_end[2,,i,][!is.na(dat$N_yais_end[2,,i,])]),
sum(dat$N_yais_end[df$yRun,,i,][!is.na(dat$N_yais_end[df$yRun,,i,])]))
plot(rowSums(dat$N_yais_beg[1:(df$yRun-1),,i,]),
type = 'l',
lwd = 2,
col = scales::alpha(rev(rev(subareaPal)[i]),0.2),
main = inames[i],
col.main = rev(rev(subareaPal)[i]),
ylim = c(0,ylt),
xlim = c(0,nyear),xaxt='n',
xlab = "Model Year",
ylab = 'Numbers (M+F)')
lines(rowSums(dat$N_yais_mid[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(rev(rev(subareaPal)[i]),0.4))
lines(rowSums(dat$N_yais_end[,,i,]),
type = 'l',
lwd = 3,
col = scales::alpha(rev(rev(subareaPal)[i]),0.8))
legend("topright",col = c(scales::alpha(rev(rev(subareaPal)[i]),0.2),
scales::alpha(rev(rev(subareaPal)[i]),0.4),
scales::alpha(rev(rev(subareaPal)[i]),0.8)),
legend = c("beg",
"mid (move)",
"end (fished)"), cex = 0.7, lty =1, lwd = 5)
axis(1, at = seq(1,nyear,5), labels = years[seq(1,nyear,5)])
}
dat$N_yais_beg[1:(df$yRun-1),,i,]
dat$N_yais_beg[df$yRun-1,,i,]
dat$SSB_0i
rowSums(dat$N_yais_beg[44,,,]
)
dat$SSB_yk[44,]
dat$SSB_0k
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shireAEP1010",'shire_v2','shire_v2L')[3]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =  df$tEnd-1
# df$mat_age <- rep(1e-3,df$nage)
df$selShape_fish[5:7] <-  -1 ## turn OFF
omega_0ij_map <- matrix(NA, nrow = 6, ncol = 6) ## turn everything off
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(omega_0ij_map),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
df$yRun =  30 #df$tEnd-1
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
head(round(rep1$catch_yf_pred/df$catch_yf_obs[,2:10],2),df$yRun)
rep1$SSB_0i ## should not be small or negative
rep1$SSB_yi ## should match SSB0 without fishing
rep1$SSB_yi[3,] ## should match SSB0 without fishing
rep1$SSB_0i ## should not be small or negative
df$mat_age
rep1$SSB_yi[3,]/rep1$SSB_0i ## should match SSB0 without fishing
df$X_ijas[,,5,1]
df$X_ijas[,,6,1]
Nage <- df$nage; Nspace <- df$nspace; Ndim <- Nage*Nspace
## only need to update this with movement
A <- matrix(NA, nrow = Ndim, ncol = Ndim)
A
df$X_ijas[i,,,1]
df$X_ijas[i,i,,1]
atemp
atemp <- matrix(NA, nrow = Nspace, ncol = Nage)
atemp
atemp_fem <- atemp_mal <-matrix(NA, nrow = Nspace, ncol = Nage)
diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
dim( df$X_ijas[i,i,,1] )
length( df$X_ijas[i,i,,1] )
length(diag(atemp_fem))
atemp_fem <- atemp_mal <-matrix(NA, nrow = Nage, ncol = Nage) ## block for one area
diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
a = 1
i = 1
## easier to make simple space x age matrix for each, then stich
idx = 1
atemp_fem <- atemp_mal <-matrix(NA, nrow = Nage, ncol = Nage) ## block for one area
## only need to update this with movement
A_fem <- A_mal <- matrix(NA, nrow = Ndim, ncol = Ndim)
## easier to make simple space x age matrix for each, then stich
idx = 1
diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
atemp_fem
atemp_fem <- atemp_mal <-matrix(0) ## block for one area
diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
A_fem <- cbind(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
atemp_fem <- atemp_mal <-matrix(0, nrow = Nage, ncol = Nage) ## block for one area
diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
A_fem <- cbind(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
A_fem
## only need to update this with movement
A_fem <- A_mal <- matrix(NA)
A_fem <- cbind(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
## only need to update this with movement
A_fem <- A_mal <- matrix(NA, nrow = Nage)
append(A_fem, atemp_fem)
df$X_ijas[i,,a,1]
t(df$X_ijas[i,,a,1])
df$X_ijas[i,,2,1]
## M S Kapur
## Inspiration  from J Sullivan N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
df$X_ijas
df$X_ijas[,,1,1]
for(a in 1:Nage){
tempvec = NULL
for(i in 1:Nspace){
for(j in 1:Nspace){
## working with one source area at a time, make a vertical vector for the age at hand
## the position (row) for the infill is a recurisve function of the age and block position
## tis is the same position to be used to index columns of final product
position0 = a+(i-1)*Nage ## will be 1 for first subarea
tempvec[position0] <- df$X_ijas[i,j,a,1]
# A_fem[,position] <- tempvect
#
#   atemp_fem <- atemp_mal <-matrix(0, nrow = Nage, ncol = Nage) ## block for one area
#
#     diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
#     diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
#     A_fem <- append(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
#
#     idx = idx+Nage ## bump to next set
}
}
}
Nage <- df$nage; Nspace <- df$nspace; Ndim <- Nage*Nspace
for(a in 1:Nage){
tempvec = NULL
for(i in 1:Nspace){
for(j in 1:Nspace){
## working with one source area at a time, make a vertical vector for the age at hand
## the position (row) for the infill is a recurisve function of the age and block position
## tis is the same position to be used to index columns of final product
position0 = a+(i-1)*Nage ## will be 1 for first subarea
tempvec[position0] <- df$X_ijas[i,j,a,1]
# A_fem[,position] <- tempvect
#
#   atemp_fem <- atemp_mal <-matrix(0, nrow = Nage, ncol = Nage) ## block for one area
#
#     diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
#     diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
#     A_fem <- append(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
#
#     idx = idx+Nage ## bump to next set
}
}
}
tempvec
position0
for(a in 1:5){
tempvec = NULL
for(i in 1:3){
for(j in 1:3){
## working with one source area at a time, make a vertical vector for the age at hand
## the position (row) for the infill is a recurisve function of the age and block position
## tis is the same position to be used to index columns of final product
position0 = a+(i-1)*Nage ## will be 1 for first subarea
cat(position0,'\n')
tempvec[position0] <- df$X_ijas[i,j,a,1]
# A_fem[,position] <- tempvect
#
#   atemp_fem <- atemp_mal <-matrix(0, nrow = Nage, ncol = Nage) ## block for one area
#
#     diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
#     diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
#     A_fem <- append(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
#
#     idx = idx+Nage ## bump to next set
}
}
}
tempvec
for(a in 1:5){
tempvec = NULL
for(i in 1:3){
for(j in 1:3){
## working with one source area at a time, make a vertical vector for the age at hand
## the position (row) for the infill is a recurisve function of the age and block position
## tis is the same position to be used to index columns of final product
position0 = a+(i-1)*5 ## will be 1 for first subarea
position1 =
cat(position0,'\n')
tempvec[position0] <- df$X_ijas[i,j,a,1]
A_fem[,position] <- tempvect
#
#   atemp_fem <- atemp_mal <-matrix(0, nrow = Nage, ncol = Nage) ## block for one area
#
#     diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
#     diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
#     A_fem <- append(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
#
#     idx = idx+Nage ## bump to next set
}
}
}
for(a in 1:5){
tempvec = NULL
for(i in 1:3){
for(j in 1:3){
## working with one source area at a time, make a vertical vector for the age at hand
## the position (row) for the infill is a recurisve function of the age and block position
## tis is the same position to be used to index columns of final product
position0 = a+(i-1)*5 ## will be 1 for first subarea
position1 =
cat(position0,'\n')
tempvec[position0] <- df$X_ijas[i,j,a,1]
# A_fem[,position] <- tempvect
#
#   atemp_fem <- atemp_mal <-matrix(0, nrow = Nage, ncol = Nage) ## block for one area
#
#     diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
#     diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
#     A_fem <- append(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
#
#     idx = idx+Nage ## bump to next set
}
}
}
## only need to update this with movement
A_fem <- A_mal <- matrix(NA, nrow = Ndim, ncol = Ndim)
## easier to make simple space x age matrix for each, then stich
for(a in 1:5){
tempvec = NULL
for(i in 1:3){
for(j in 1:3){
## working with one source area at a time, make a vertical vector for the age at hand
## the position (row) for the infill is a recurisve function of the age and block position
## tis is the same position to be used to index columns of final product
position0 = a+(i-1)*5 ## will be 1 for first subarea
cat(position0,'\n')
tempvec[position0] <- df$X_ijas[i,j,a,1]
A_fem[,position] <- tempvec
#
#   atemp_fem <- atemp_mal <-matrix(0, nrow = Nage, ncol = Nage) ## block for one area
#
#     diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
#     diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
#     A_fem <- append(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
#
#     idx = idx+Nage ## bump to next set
}
}
}
## easier to make simple space x age matrix for each, then stich
for(a in 1:5){
tempvec = NULL
for(i in 1:3){
for(j in 1:3){
## working with one source area at a time, make a vertical vector for the age at hand
## the position (row) for the infill is a recurisve function of the age and block position
## tis is the same position to be used to index columns of final product
position0 = a+(i-1)*5 ## will be 1 for first subarea
cat(position0,'\n')
tempvec[position0] <- df$X_ijas[i,j,a,1]
A_fem[,position0] <- tempvec
#
#   atemp_fem <- atemp_mal <-matrix(0, nrow = Nage, ncol = Nage) ## block for one area
#
#     diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
#     diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
#     A_fem <- append(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
#
#     idx = idx+Nage ## bump to next set
}
}
}
tempvec
## easier to make simple space x age matrix for each, then stich
for(a in 1:5){
tempvec = matrix(0, ncol = 1, nrow = Ndim)
for(i in 1:3){
for(j in 1:3){
## working with one source area at a time, make a vertical vector for the age at hand
## the position (row) for the infill is a recurisve function of the age and block position
## tis is the same position to be used to index columns of final product
position0 = a+(i-1)*5 ## will be 1 for first subarea
cat(position0,'\n')
tempvec[position0] <- df$X_ijas[i,j,a,1]
A_fem[,position0] <- tempvec
#
#   atemp_fem <- atemp_mal <-matrix(0, nrow = Nage, ncol = Nage) ## block for one area
#
#     diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
#     diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
#     A_fem <- append(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
#
#     idx = idx+Nage ## bump to next set
}
}
}
A_fem
## only need to update this with movement
A_fem <- A_mal <- matrix(0, nrow = Ndim, ncol = Ndim)
## easier to make simple space x age matrix for each, then stich
for(a in 1:5){
tempvec = matrix(0, ncol = 1, nrow = Ndim)
for(i in 1:3){
for(j in 1:3){
## working with one source area at a time, make a vertical vector for the age at hand
## the position (row) for the infill is a recurisve function of the age and block position
## tis is the same position to be used to index columns of final product
position0 = a+(i-1)*5 ## will be 1 for first subarea
cat(position0,'\n')
tempvec[position0] <- df$X_ijas[i,j,a,1]
A_fem[,position0] <- tempvec
#
#   atemp_fem <- atemp_mal <-matrix(0, nrow = Nage, ncol = Nage) ## block for one area
#
#     diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
#     diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
#     A_fem <- append(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
#
#     idx = idx+Nage ## bump to next set
}
}
}
A_fem
A_fem[1:10,1:10]
Ndim = 16
Ndim = 15
## only need to update this with movement
A_fem <- A_mal <- matrix(0, nrow = Ndim, ncol = Ndim)
## easier to make simple space x age matrix for each, then stich
for(a in 1:5){
tempvec = matrix(0, ncol = 1, nrow = Ndim)
for(i in 1:3){
for(j in 1:3){
## working with one source area at a time, make a vertical vector for the age at hand
## the position (row) for the infill is a recurisve function of the age and block position
## tis is the same position to be used to index columns of final product
position0 = a+(i-1)*5 ## will be 1 for first subarea
cat(position0,'\n')
tempvec[position0] <- df$X_ijas[i,j,a,1]
A_fem[,position0] <- tempvec
#
#   atemp_fem <- atemp_mal <-matrix(0, nrow = Nage, ncol = Nage) ## block for one area
#
#     diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
#     diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
#     A_fem <- append(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
#
#     idx = idx+Nage ## bump to next set
}
}
}
A_fem
## only need to update this with movement
A_fem <- A_mal <- matrix(0, nrow = Ndim, ncol = Ndim)
## easier to make simple space x age matrix for each, then stich
for(a in 1:5){
tempvec = matrix(0, ncol = 1, nrow = Ndim)
for(i in 1:3){
for(j in 1:3){
## working with one source area at a time, make a vertical vector for the age at hand
## the position (row) for the infill is a recurisve function of the age and block position
## tis is the same position to be used to index columns of final product
position0 = a+(i-1)*5 ## will be 1 for first subarea
cat(position0,'\n')
tempvec[position0] <- df$X_ijas[i,j,a,1]
}
A_fem[,position0] <- tempvec
#
#   atemp_fem <- atemp_mal <-matrix(0, nrow = Nage, ncol = Nage) ## block for one area
#
#     diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
#     diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
#     A_fem <- append(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
#
#     idx = idx+Nage ## bump to next set
}
}
tempvec
df$X_ijas[i,j,a,1]
i
j
cat(i,"\t",j,"\t",position0,'\n')
## only need to update this with movement
A_fem <- A_mal <- matrix(0, nrow = Ndim, ncol = Ndim)
## easier to make simple space x age matrix for each, then stich
for(a in 1:5){
tempvec = matrix(0, ncol = 1, nrow = Ndim)
for(i in 1:3){
for(j in 1:3){
## working with one source area at a time, make a vertical vector for the age at hand
## the position (row) for the infill is a recurisve function of the age and block position
## tis is the same position to be used to index columns of final product
position0 = a+(i-1)*5 ## will be 1 for first subarea
cat(i,"\t",j,"\t",position0,'\n')
tempvec[position0] <- df$X_ijas[i,j,a,1]
}
A_fem[,position0] <- tempvec
#
#   atemp_fem <- atemp_mal <-matrix(0, nrow = Nage, ncol = Nage) ## block for one area
#
#     diag(atemp_fem) = df$X_ijas[i,i,,1] ## stay in area, will become diag
#     diag(atemp_mal) = df$X_ijas[i,i,,2] ## stay in area, will become diag
#     A_fem <- append(A_fem, atemp_fem)  ;   A_mal <-    cbind(A_mal, atemp_mal)
#
#     idx = idx+Nage ## bump to next set
}
}
A_fem
tempvec
