array(exp(obj$par[names(obj$par)=='log_fsh_slx_pars']),
dim = c(7,2,2))
# ## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
rep1$fsh_slx_yafs[1,,3,1]; rep1$fsh_slx_yafs[1,,4,1]; rep1$fsh_slx_yafs[1,,5,1]
plot(rep1$fsh_slx_yafs[1,,3,1])
source(here('R','functions','boundPars.R')) ## bound selex etc
# array(exp(upper[names(upper)=='log_fsh_slx_pars']), dim = c(9,2,2),
# dimnames = list(df$fltnames_fish))
## about 65s for 22 years
## 7 hours for 44 yrs ## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
array(round(exp(best[names(best)=='log_fsh_slx_pars'])),
dim = c(7,2,2))
#* fsh slx lower bounds ----
## logistic p1 (a50)
array(1:length(lower[names(lower) == 'log_fsh_slx_pars']), dim = c(7,2,2))
## bounds on fsh slx ----
## brute force par locations; if mappy mirrors first ak fleets,
## assume that fleets 1 and 2 are now AK FIX mirror and AK TWL mirror
array(1:length(df$parms$log_fsh_slx_pars), dim = c(7,2,2))
p1_logistic_idx <- c(1:2,15:16) #c(1:4,19:22)
p2_logistic_idx <- p1_logistic_idx+df$nfleets_fish -2
p1_norm_idx <- c(3,4,6,7,17,18,20,21)  #c(5,6,8,9,23,24,26,27)
p2_norm_idx <- p1_norm_idx+df$nfleets_fish -2
p1_gamma_idx <- c(5,19)#c(7,25)
p2_gamma_idx <- p1_gamma_idx+df$nfleets_fish -2
# array(exp(upper[names(upper)=='log_fsh_slx_pars']), dim = c(9,2,2),
# dimnames = list(df$fltnames_fish))
## about 65s for 22 years
## 7 hours for 44 yrs ## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
array(round(exp(best[names(best)=='log_fsh_slx_pars'])),
dim = c(7,2,2))
upper
lower
#* fsh slx lower bounds ----
## logistic p1 (a50)
array(1:length(lower[names(lower) == 'log_fsh_slx_pars']), dim = c(7,2,2))
source(here('R','functions','boundPars.R')) ## bound selex etc
#* fsh slx lower bounds ----
## logistic p1 (a50)
array(1:length(lower[names(lower) == 'log_fsh_slx_pars']), dim = c(7,2,2))
array(exp(upper[names(upper) == 'log_fsh_slx_pars']), dim = dim(df$parms$log_fsh_slx_pars))
array(exp(lower[names(lower) == 'log_fsh_slx_pars']), dim = dim(df$parms$log_fsh_slx_pars))
upper
upper[names(upper) == 'log_fsh_slx_pars']
array(exp(upper[names(upper) == 'log_fsh_slx_pars']), dim = dim(df$parms$log_fsh_slx_pars))
# array(exp(upper[names(upper)=='log_fsh_slx_pars']), dim = c(9,2,2),
# dimnames = list(df$fltnames_fish))
## about 65s for 22 years
## 7 hours for 44 yrs ## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
array(round(exp(best[names(best)=='log_fsh_slx_pars'])),
dim = c(7,2,2))
upper
array(exp(upper[names(upper) == 'log_fsh_slx_pars']), dim = dim(df$parms$log_fsh_slx_pars))
p2_norm_idx
#* fsh slx lower bounds ----
## logistic p1 (a50)
array(1:length(lower[names(lower) == 'log_fsh_slx_pars']), dim = c(7,2,2))
p1_norm_idx+df$nfleets_fish
p1_logistic_idx <- c(1:2,15:16) #c(1:4,19:22)
p2_logistic_idx <- p1_logistic_idx+df$nfleets_fish
p1_norm_idx <- c(3,4,6,7,17,18,20,21)  #c(5,6,8,9,23,24,26,27)
p2_norm_idx <- p1_norm_idx+df$nfleets_fish
p1_gamma_idx <- c(5,19)#c(7,25)
p2_gamma_idx <- p1_gamma_idx+df$nfleets_fish
lower[names(lower) == 'log_fsh_slx_pars'][p1_logistic_idx] <- log(35)
## logistic p2 (a95)
lower[names(lower) == 'log_fsh_slx_pars'][p2_logistic_idx] <- log(60)
## normal p1 (mean)
lower[names(lower) == 'log_fsh_slx_pars'][p1_norm_idx] <- log(15)
## normal p2 (sd)
lower[names(lower) == 'log_fsh_slx_pars'][p2_norm_idx] <- log(1)
## gamma shape (k*theta equals mean)
lower[names(lower) == 'log_fsh_slx_pars'][p1_gamma_idx] <- log(15)
## gamma rate
lower[names(lower) == 'log_fsh_slx_pars'][p2_gamma_idx] <- log(2)
#* fsh slx upper bounds ----
## logistic p1 (a50)
upper[names(upper) == 'log_fsh_slx_pars'][p1_logistic_idx] <- log(60)
## logistic p2 (a95)
upper[names(upper) == 'log_fsh_slx_pars'][p2_logistic_idx] <- log(70)
## normal p1 (mean)
upper[names(upper) == 'log_fsh_slx_pars'][p1_norm_idx] <- log(65)
## normal p2 (sd)
upper[names(upper) == 'log_fsh_slx_pars'][p2_norm_idx] <- log(4)
## gamma shape (k*theta equals mean)
upper[names(upper) == 'log_fsh_slx_pars'][p1_gamma_idx] <- log(35)
## gamma rate
upper[names(upper) == 'log_fsh_slx_pars'][p2_gamma_idx] <- log(2)
array(exp(upper[names(upper) == 'log_fsh_slx_pars']), dim = dim(df$parms$log_fsh_slx_pars))
# array(exp(upper[names(upper)=='log_fsh_slx_pars']), dim = c(9,2,2),
# dimnames = list(df$fltnames_fish))
## about 65s for 22 years
## 7 hours for 44 yrs ## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
growth <- function(k, lmin, lmax, ages, a3, a4)
{
len      <- matrix(NA, ages, 1)
a.linear <- a3 ## age at which linear growth stops
len.step <- ifelse(lmin < 4, lmin, 4)  ## lmin is size at age 0 (?)
#L infinity (cm)
Linf <- lmax + ((lmax - lmin) / (1 - exp( -k * (a4 - a3)))) ## years of VB growth
len.slope <- (lmin - len.step) / a3 ## linear growth slope
# Length at the start of the year (cm)
len[1:(a.linear+1),1]<-len.step[1]+len.slope*(seq(1, (a.linear + 1), 1) - 1)
# Growth based on the VB
len[(a.linear+2):ages,1] <- Linf + (lmin - Linf)*exp(-k*((seq(a.linear+2, ages,1)-1)-a3))
# Growth based on the VB
len[1:ages,1] <- Linf + (lmin - Linf)*exp(-k*(1:ages))
#Plus Group Growth
temp1 <- sum(exp(-0.20*(ages:(ages*2)-ages))*(len[ages,1]+((ages:(ages*2)-ages)/ages)*(Linf-len[ages,1])))
temp2 <- sum(exp(-0.20*(ages:(ages*2)-ages)))
len[ages,1] <- temp1 / temp2
return(len)
}
eq2 <- function(Lnow, K, Linf){
lthen = Lnow + (Linf - Lnow)*(1-exp(-K))
return(lthen)
}
dat <- data.frame("age" = 1:95, "len" = NA, "linflnow" = NA)
dat[1,"len"] <- 4.5
for(i in 2:nrow(dat)){
dat[i,"linflnow"] = 125.5 - dat[i-1,"len"]
dat[i,"len"] <- eq2(Lnow = dat[i-1,"len"],K = 0.3,Linf = 125.5) ## for a given age use prev age's length as lnow
## if we want to increment this over year be sure to up the age as well
}
# with(dat, plot(len ~ age))
plot(1:95, growth(k = 0.3, lmin = 4.5, lmax = 65, ages = 95, a3 = 3, a4 = 70), pch = 20) ## LMAX IS NOT LINF
with(dat, points(len ~ age,  col = "blue", pch = 20))
55+(40-50)*(1-exp(-0.2))
55+(40-55)*(1-exp(-0.2))
100+(40-100)*(1-exp(-0.2))
df$Linf_yk
68+(55-68)*(1-exp(-0.2))
df$kappa_yk
(55-68)*(1-exp(-0.2))
plot(55+(4-55)*exp(0.2)*1:10)
plot(55+(4-55)*exp(0.2*1:10)
)
plot(55+(4-55)*exp(0.2*1:10))
plot(55+(4-55)*exp(-0.2*1:10))
plot(55+(4-55)*exp(-0.2*1:))
plot(55+(4-55)*exp(-0.2*1))
55+(4-55)*exp(-0.2*1)
df$yRun
array(exp(upper[names(upper)=='log_fsh_slx_pars']), dim = c(9,2,2),
dimnames = list(df$fltnames_fish))
array(exp(upper[names(upper)=='log_fsh_slx_pars']), dim = c(7,2,2),
dimnames = list(df$fltnames_fish))
## about 65s for 22 years
## 7 hours for 44 yrs ## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
## Inspiration from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v2L",'shire_v2L_1')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
# df$v1 = 0.7;  df$Fmax = 1.5;
df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =  10#df$tEnd-1
df$mat_age <- rep(1e-5,df$nage)
omega_0ij_map <- matrix(NA, nrow = 6, ncol = 6) ## turn off age-zero movement estimation
# omega_0ij_map[1,] <- df$parms$omega_0ij[1,] ## estimate to/from C1 only
#
# ## mirror selex in AK E/W
# ## if you want to MIRROR selex, fill a value in the specific location which is identical for each fleet
fsh_slx_map <- array(1:length(df$parms$log_fsh_slx_pars)*2,
dim = dim(df$parms$log_fsh_slx_pars),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(omega_0ij_map),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))#,
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now) x sex
# log_fsh_slx_pars = factor(fsh_slx_map)
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
array(exp(obj$par[names(obj$par)=='log_fsh_slx_pars']),
dim = c(7,2,2))
# ## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
rep1$fsh_slx_yafs[1,,3,1]; rep1$fsh_slx_yafs[1,,4,1]; rep1$fsh_slx_yafs[1,,5,1]
head(round(rep1$catch_yf_pred/df$catch_yf_obs[,2:(1+df$nfleets_fish)],2),df$yRun)
rep1$NeqnR
colSums(rep1$N_0ais) ## should not be super small anywhere
rep1$SSB_0i ## should not be small or negative
rep1$SSB_yi[3,] ## should match SSB0 without fishing
round(rep1$SSB_yi[1:df$yRun,]) ## should not be small or negative
rep1$SSB_yi[1,] ## should match SSB0 without fishing
rep1$SSB_0i ## should not be small or negative
rep1$SSB_yi[1,] ## should match SSB0 without fishing
round(rep1$SSB_yi[1:df$yRun,]) ## should not be small or negative
round(rep1$R_yi[1:df$yRun,])
rowSums(rep1$N_yais_end[1:df$yRun,,,1])
source(here('R','functions','boundPars.R')) ## bound selex etc
array(exp(upper[names(upper)=='log_fsh_slx_pars']), dim = c(7,2,2),
dimnames = list(df$fltnames_fish))
array(exp(lower[names(lower)=='log_fsh_slx_pars']), dim = c(7,2,2),
dimnames = list(df$fltnames_fish))
## about 65s for 22 years
## 7 hours for 44 yrs ## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
rm(list = ls())
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
# df$v1 = 0.7;  df$Fmax = 1.5;
df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =  2 #df$tEnd-1
df$mat_age <- rep(1e-5,df$nage)
omega_0ij_map <- matrix(NA, nrow = 6, ncol = 6) ## turn off age-zero movement estimation
# omega_0ij_map[1,] <- df$parms$omega_0ij[1,] ## estimate to/from C1 only
#
# ## mirror selex in AK E/W
# ## if you want to MIRROR selex, fill a value in the specific location which is identical for each fleet
fsh_slx_map <- array(1:length(df$parms$log_fsh_slx_pars)*2,
dim = dim(df$parms$log_fsh_slx_pars),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(omega_0ij_map),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))#,
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now) x sex
# log_fsh_slx_pars = factor(fsh_slx_map)
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
dllUSE = c("shire_v2L",'shire_v2L_1')[2]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
# df$v1 = 0.7;  df$Fmax = 1.5;
df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =  2 #df$tEnd-1
df$mat_age <- rep(1e-5,df$nage)
omega_0ij_map <- matrix(NA, nrow = 6, ncol = 6) ## turn off age-zero movement estimation
# omega_0ij_map[1,] <- df$parms$omega_0ij[1,] ## estimate to/from C1 only
#
# ## mirror selex in AK E/W
# ## if you want to MIRROR selex, fill a value in the specific location which is identical for each fleet
fsh_slx_map <- array(1:length(df$parms$log_fsh_slx_pars)*2,
dim = dim(df$parms$log_fsh_slx_pars),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(omega_0ij_map),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))#,
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now) x sex
# log_fsh_slx_pars = factor(fsh_slx_map)
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
array(exp(obj$par[names(obj$par)=='log_fsh_slx_pars']),
dim = c(7,2,2))
source(here('R','functions','boundPars.R')) ## bound selex etc
array(exp(upper[names(upper)=='log_fsh_slx_pars']), dim = c(7,2,2),
dimnames = list(df$fltnames_fish))
lower
array(exp(lower[names(lower)=='log_fsh_slx_pars']), dim = c(7,2,2),
dimnames = list(df$fltnames_fish))
## about 65s for 22 years
## 7 hours for 44 yrs ## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
rep1$NeqnR
# ## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
rep1$fsh_slx_yafs[1,,3,1]; rep1$fsh_slx_yafs[1,,4,1]; rep1$fsh_slx_yafs[1,,5,1]
rep1$R_0i_vect
rep1$NeqnR
head(round(rep1$catch_yf_pred/df$catch_yf_obs[,2:(1+df$nfleets_fish)],2),df$yRun)
rep1$NeqnR
colSums(rep1$N_0ais) ## should not be super small anywhere
head(df$Neqn)
colSums(df$Neqn)
Neqn
load("C:/Users/mkapur/Dropbox/UW/sab-mse/input/input_data/Mat2_init.rdata")
load("C:/Users/mkapur/Dropbox/UW/sab-mse/input/input_data/I_init.rdata")
# save(r0vect, file=  here('input','input_data','r0vect_init.rdata'))
Neqn <- solve(I-Mat2) #%*% r0vect
Neqn
matrix(Neqn, ncol = nspace, nrow = nage)
nage = df$nage ## #just trying ages 5:7 for now
nspace =  df$nspace
matrix(Neqn, ncol = nspace, nrow = nage)
r0vect <- matrix(0, nrow = 1, ncol = Ndim)
Ndim <- nage*nspace
# R_init <-  rep(1,nspace) ## fixed R0 in each earea
R_init_temp <-  df$parms$logR_0k*df$tau_ki ## fixed R0 in each earea
r0vect <- matrix(0, nrow = 1, ncol = Ndim)
r0vect[seq(1,Ndim,nage)] <- exp(R_init_temp[R_init_temp !=0])
r0vect = c(r0vect)
# save(r0vect, file=  here('input','input_data','r0vect_init.rdata'))
Neqn <- solve(I-Mat2) %*% r0vect
neqnm <- matrix(Neqn, ncol = nspace, nrow = nage) %>%
data.frame(.) %>%
mutate(age = 1:nage) %>%
reshape2::melt(id = 'age') #%>%
conservation_status <- c(
X1 =  dimnames(df$X_ijas)[[1]][1],
X2 = dimnames(df$X_ijas)[[1]][2],
X3 = dimnames(df$X_ijas)[[1]][3],
X4 =dimnames(df$X_ijas)[[1]][4],
X5 = dimnames(df$X_ijas)[[1]][5],
X6 = dimnames(df$X_ijas)[[1]][6]
)
ggplot(neqnm, aes(x = age, y = value, color = variable)) +
ggsidekick::theme_sleek() +
geom_line(lwd = 1.1) +
scale_color_manual(values = rev(subareaPal),labels =  dimnames(df$X_ijas)[[1]]) +
facet_wrap(~variable, scales = 'free_y', labeller = labeller(variable =conservation_status))
rep1$NeqnR
neqnm <- matrix(rep1$NeqnR, ncol = nspace, nrow = nage) %>%
data.frame(.) %>%
mutate(age = 1:nage) %>%
reshape2::melt(id = 'age') #%>%
conservation_status <- c(
X1 =  dimnames(df$X_ijas)[[1]][1],
X2 = dimnames(df$X_ijas)[[1]][2],
X3 = dimnames(df$X_ijas)[[1]][3],
X4 =dimnames(df$X_ijas)[[1]][4],
X5 = dimnames(df$X_ijas)[[1]][5],
X6 = dimnames(df$X_ijas)[[1]][6]
)
ggplot(neqnm, aes(x = age, y = value, color = variable)) +
ggsidekick::theme_sleek() +
geom_line(lwd = 1.1) +
scale_color_manual(values = rev(subareaPal),labels =  dimnames(df$X_ijas)[[1]]) +
facet_wrap(~variable, scales = 'free_y', labeller = labeller(variable =conservation_status))
rep1$SSB_0i ## should not be small or negative
rep1$SSB_yi[1,] ## should match SSB0 without fishing
## OM_Master.R
## M S Kapur
## Inspiration from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v2L",'shire_v2L_1')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
# df$v1 = 0.7;  df$Fmax = 1.5;
df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =  2 #df$tEnd-1
df$mat_age <- rep(1e-5,df$nage)
omega_0ij_map <- matrix(NA, nrow = 6, ncol = 6) ## turn off age-zero movement estimation
# omega_0ij_map[1,] <- df$parms$omega_0ij[1,] ## estimate to/from C1 only
#
# ## mirror selex in AK E/W
# ## if you want to MIRROR selex, fill a value in the specific location which is identical for each fleet
fsh_slx_map <- array(1:length(df$parms$log_fsh_slx_pars)*2,
dim = dim(df$parms$log_fsh_slx_pars),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
# dimnames(fsh_slx_map)[[1]] <- df$fltnames_fish
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(omega_0ij_map),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))#,
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now) x sex
# log_fsh_slx_pars = factor(fsh_slx_map)
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
# ## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
rep1$fsh_slx_yafs[1,,3,1]; rep1$fsh_slx_yafs[1,,4,1]; rep1$fsh_slx_yafs[1,,5,1]
rep1$R_0i_vect
rep1$NeqnR
head(round(rep1$catch_yf_pred/df$catch_yf_obs[,2:(1+df$nfleets_fish)],2),df$yRun)
rep1$catch_yf_pred
