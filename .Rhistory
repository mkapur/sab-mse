map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
# ## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
rep1$fsh_slx_yafs[1,,2,1]; rep1$fsh_slx_yafs[1,,3,1];
rep1$fsh_slx_yafs[1,,4,1]; rep1$fsh_slx_yafs[1,,5,1]
colSums(rep1$N_0ais) ## should not be super small anywhere
colSums(rep1$Ninit_ais) ## should not be super small anywhere
rep1$SSB_0i ## should not be small or negative
rep1$SSB_0k ## should not be small or negative
rep1$SSB_yi[1,] ## should match SSB0 without fishing
rowSums(rep1$N_yais_end[1:df$yRun,,,1])
rowSums(rep1$N_yais_beg[1:df$yRun,,,1])
rowSums(rep1$N_yais_mid[1:df$yRun,,,1])
colSums(rep1$N_0ais) ## should not be super small anywhere
rep1$NeqnR
# matrix(rep1$NeqnR, ncol = 6, nrow = length(0:70)) %>%
#   data.frame(.) %>%
#   mutate(age = 0:70) %>%
#   reshape2::melt(id = 'age') %>%
#   ggplot(., aes(x = age, y = value, color = variable)) +
#   ggsidekick::theme_sleek() +
#   geom_line(lwd = 1.1) +
#   scale_color_manual(values = rev(subareaPal),labels =  dimnames(df$X_ijas)[[1]]) +
#   facet_wrap(~variable, scales = 'free_y' )
matrix(rep1$NeqnR, ncol = 6, nrow = length(0:70)) %>%
data.frame(.) %>%
mutate(age = 0:70) %>%
reshape2::melt(id = 'age') %>%
ggplot(., aes(x = age, y = value, color = variable)) +
ggsidekick::theme_sleek() +
geom_line(lwd = 1.1) +
scale_color_manual(values = rev(subareaPal),labels =  dimnames(df$X_ijas)[[1]]) +
facet_wrap(~variable, scales = 'free_y' )
matrix(rep1$NeqnR, ncol = 6, nrow = length(0:70)) %>%
data.frame(.) %>%
mutate(age = 0:70) %>%
reshape2::melt(id = 'age')
matrix(rep1$NeqnR, ncol = 6, nrow = length(0:70)) %>%
data.frame(.) %>%
mutate(age = 0:70)
neqnm <- matrix(rep1$NeqnR, ncol = 6, nrow = length(0:70)) %>%
data.frame(.)
neqnm
colSums(neqnm) ## should not be super small anywhere
colSums(rep1$N_0ais) ## should not be super small anywhere
data.frame('NEQN_m' = neqnm,
"N_0_Fem" = colSums(rep1$N_0ais)[,1],
"N_0_Mal" = colSums(rep1$N_0ais)[,2],
"N_init_Fem" = colSums(rep1$Ninit_ais)[,1],
"N_init_Mal" = colSums(rep1$Ninit_ais)[,2])
colSums(rep1$Ninit_ais)
colSums(rep1$N_0ais) ## should not be super small anywhere
colSums(neqnm) ## should not be super small anywhere
data.frame('NEQN_m' = t(neqnm),
"N_0_Fem" = colSums(rep1$N_0ais)[,1],
"N_0_Mal" = colSums(rep1$N_0ais)[,2],
"N_init_Fem" = colSums(rep1$Ninit_ais)[,1],
"N_init_Mal" = colSums(rep1$Ninit_ais)[,2])
t(neqnm)
neqnm <- matrix(rep1$NeqnR, ncol = 6, nrow = length(0:70)) %>%
data.frame(.)
data.frame('NEQN_m' = t(neqnm),
"N_0_Fem" = colSums(rep1$N_0ais)[,1],
"N_0_Mal" = colSums(rep1$N_0ais)[,2],
"N_init_Fem" = colSums(rep1$Ninit_ais)[,1],
"N_init_Mal" = colSums(rep1$Ninit_ais)[,2])
neqnm
colSums(neqnm)
data.frame('NEQN_m' = t(colSums(neqnm) ),
"N_0_Fem" = colSums(rep1$N_0ais)[,1],
"N_0_Mal" = colSums(rep1$N_0ais)[,2],
"N_init_Fem" = colSums(rep1$Ninit_ais)[,1],
"N_init_Mal" = colSums(rep1$Ninit_ais)[,2])
t(colSums(neqnm) )
data.frame('NEQN_m' =colSums(neqnm) ,
"N_0_Fem" = colSums(rep1$N_0ais)[,1],
"N_0_Mal" = colSums(rep1$N_0ais)[,2],
"N_init_Fem" = colSums(rep1$Ninit_ais)[,1],
"N_init_Mal" = colSums(rep1$Ninit_ais)[,2])
owSums(rep1$N_yais_beg[1:df$yRun,,,1])
rowSums(rep1$N_yais_beg[1:df$yRun,,,1])
rowSums(rep1$N_yais_beg[1,,,1]
)
rep1$N_yais_beg[1,,,1]
colSums(rep1$N_yais_beg[1,,,1])
data.frame('NEQN_m' =colSums(neqnm) ,
"N_0_Fem" = colSums(rep1$N_0ais)[,1],
"N_0_Mal" = colSums(rep1$N_0ais)[,2],
"N_init_Fem" = colSums(rep1$Ninit_ais)[,1],
"N_init_Mal" = colSums(rep1$Ninit_ais)[,2],
"N_beg_y1_Fem" = colSums(rep1$N_yais_beg[1,,,1]),
"N_mid_y1_Fem" = colSums(rep1$N_yais_mid[1,,,1]),
"N_end_y1_Fem" = colSums(rep1$N_yais_end[1,,,1]))
## OM_Master.R
## M S Kapur
## Inspiration from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v2L_1_16Nov",'shire_v3L')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
# df$v1 = 0.7;  df$Fmax = 1.5;
df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =   7 #df$tEnd-1
df$mat_age <- rep(1e-5,df$nage)
df$selShape_fish[3:5] <-  -1 ## slx = 1.0 for all BC fisheries
## the numbers are in order of df$parms
## if you are fixing fish fleets, be sure that selShape is correct!
mappy <- buildMap(toFix = c(3,5,8),
fixFlt = c("BC_LL","BC_TRAP","BC_TWL"))
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
# ## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
# ## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
head(round(rep1$catch_yf_pred,2)/round(df$catch_yf_obs[,2:(1+df$nfleets_fish)],2),df$yRun)
data.frame('NEQN_m' =colSums(neqnm) ,
"N_0_Fem" = colSums(rep1$N_0ais)[,1],
"N_0_Mal" = colSums(rep1$N_0ais)[,2],
"N_init_Fem" = colSums(rep1$Ninit_ais)[,1],
"N_init_Mal" = colSums(rep1$Ninit_ais)[,2],
"N_beg_y1_Fem" = colSums(rep1$N_yais_beg[1,,,1]),
"N_mid_y1_Fem" = colSums(rep1$N_yais_mid[1,,,1]),
"N_end_y1_Fem" = colSums(rep1$N_yais_end[1,,,1]))
rep1$SSB_0i ## should not be small or negative nor disproportionate
rep1$SSB_0i ## should not be small or negative nor disproportionate
df$phi_ik2
rep1$N_0ais[,1,1]*
df$wtatlen_kab[1,1]*
pow(df$unfished_ALK_F[,1],  df$wtatlen_kab[1,2])*
df$mat_ak[,1]
rep1$N_0ais[,1,1]*
df$wtatlen_kab[1,1]*
df$unfished_ALK_F[,1]^ df$wtatlen_kab[1,2]*
df$mat_ak[,1]
sum(rep1$N_0ais[,1,1]*
df$wtatlen_kab[1,1]*
df$unfished_ALK_F[,1]^ df$wtatlen_kab[1,2]*
df$mat_ak[,1])
for(i in 1:6){
sum(rep1$N_0ais[,i,1]*
df$wtatlen_kab[df$phi_ik2[i]+1,1]*
df$unfished_ALK_F[,1]^ df$wtatlen_kab[df$phi_ik2[i]+1,2]*
df$mat_ak[,df$phi_ik2[i]+1])
}
for(i in 1:6){
cat(sum(rep1$N_0ais[,i,1]*
df$wtatlen_kab[df$phi_ik2[i]+1,1]*
df$unfished_ALK_F[,1]^ df$wtatlen_kab[df$phi_ik2[i]+1,2]*
df$mat_ak[,df$phi_ik2[i]+1]), "\n")
}
rep1$SSB_0i ## should not be small or negative nor disproportionate
df$unfished_ALK_F[,1]^df$wtatlen_kab[df$phi_ik2[i]+1,2]
ans = rep(0,6)
ans = rep(0,6)
for(i in 1:6){
for(a in 1:70){
ans[i] = ans[i] + rep1$N_0ais[,i,1]*
df$wtatlen_kab[df$phi_ik2[i]+1,1]*
df$unfished_ALK_F[,1]^df$wtatlen_kab[df$phi_ik2[i]+1,2]*
df$mat_ak[,df$phi_ik2[i]+1])
}
}
for(i in 1:6){
for(a in 1:70){
ans[i] = ans[i] + rep1$N_0ais[,i,1]*
df$wtatlen_kab[df$phi_ik2[i]+1,1]*
df$unfished_ALK_F[,1]^df$wtatlen_kab[df$phi_ik2[i]+1,2]*
df$mat_ak[,df$phi_ik2[i]+1]
}
}
warnings()
ans = rep(0,6)
for(i in 1:6){
for(a in 1:70){
ans[i] = ans[i] + rep1$N_0ais[s,i,1]*
df$wtatlen_kab[df$phi_ik2[i]+1,1]*
df$unfished_ALK_F[s,1]^df$wtatlen_kab[df$phi_ik2[i]+1,2]*
df$mat_ak[,df$phi_ik2[i]+1]
}
}
rep1$N_0ais[a,i,1]*
df$wtatlen_kab[df$phi_ik2[i]+1,1]*
df$unfished_ALK_F[s,1]^df$wtatlen_kab[df$phi_ik2[i]+1,2]*
df$mat_ak[,df$phi_ik2[i]+1]
rep1$N_0ais[a,i,1]*
df$wtatlen_kab[df$phi_ik2[i]+1,1]*
df$unfished_ALK_F[a,1]^df$wtatlen_kab[df$phi_ik2[i]+1,2]*
df$mat_ak[a,df$phi_ik2[i]+1]
ans = rep(0,6)
for(i in 1:6){
for(a in 1:70){
ans[i] = ans[i] + rep1$N_0ais[a,i,1]*
df$wtatlen_kab[df$phi_ik2[i]+1,1]*
df$unfished_ALK_F[a,1]^df$wtatlen_kab[df$phi_ik2[i]+1,2]*
df$mat_ak[a,df$phi_ik2[i]+1]
}
}
ans
rep1$SSB_0i ## should not be small or negative nor disproportionate
ans = rep(0,6)
for(i in 1:6){
for(a in 1:71){
ans[i] = ans[i] + rep1$N_0ais[a,i,1]*
df$wtatlen_kab[df$phi_ik2[i]+1,1]*
df$unfished_ALK_F[a,1]^df$wtatlen_kab[df$phi_ik2[i]+1,2]*
df$mat_ak[a,df$phi_ik2[i]+1]
}
}
ans
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v2L_1_16Nov",'shire_v3L')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
## Inspiration from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v2L_1_16Nov",'shire_v3L')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
# df$v1 = 0.7;  df$Fmax = 1.5;
df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =   7 #df$tEnd-1
df$mat_age <- rep(1e-5,df$nage)
df$selShape_fish[3:5] <-  -1 ## slx = 1.0 for all BC fisherie
## the numbers are in order of df$parms
## if you are fixing fish fleets, be sure that selShape is correct!
mappy <- buildMap(toFix = c(3,5,8),
fixFlt = c("BC_LL","BC_TRAP","BC_TWL"))
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
# ## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
neqnm <- matrix(rep1$NeqnR, ncol = 6, nrow = length(0:70)) %>%
data.frame(.)
head(round(rep1$catch_yf_pred,2)/round(df$catch_yf_obs[,2:(1+df$nfleets_fish)],2),df$yRun)
data.frame('NEQN_m' =colSums(neqnm) ,
"N_0_Fem" = colSums(rep1$N_0ais)[,1],
"N_0_Mal" = colSums(rep1$N_0ais)[,2],
"N_init_Fem" = colSums(rep1$Ninit_ais)[,1],
"N_init_Mal" = colSums(rep1$Ninit_ais)[,2],
"N_beg_y1_Fem" = colSums(rep1$N_yais_beg[1,,,1]),
"N_mid_y1_Fem" = colSums(rep1$N_yais_mid[1,,,1]),
"N_end_y1_Fem" = colSums(rep1$N_yais_end[1,,,1]))
rep1$SSB_0i ## should not be small or negative nor disproportionate
rep1$SSB_0k ## should not be small or negative
rep1$SSB_yi[1,] ## should match SSB0 without fishing
rowSums(rep1$N_yais_beg[1:df$yRun,,,1])
rowSums(rep1$N_yais_mid[1:df$yRun,,,1])
rowSums(rep1$N_yais_end[1:df$yRun,,,1])
bounds <- boundPars(obj, r0_lower = 0, boundSlx = FALSE)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
## M S Kapur
## Inspiration from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v2L_1_16Nov",'shire_v3L')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
# df$v1 = 0.7;  df$Fmax = 1.5;
df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =   7 #df$tEnd-1
df$mat_age <- rep(1e-5,df$nage)
df$selShape_fish[3:5] <-  -1 ## slx = 1.0 for all BC fisheries
## the numbers are in order of df$parms
## if you are fixing fish fleets, be sure that selShape is correct!
mappy <- buildMap(toFix = c(3,5,8),
fixFlt = c("BC_LL","BC_TRAP","BC_TWL"))
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
array(exp(obj$par[names(obj$par)=='log_fsh_slx_pars']),
dim = c(7,2,2))
# ## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
neqnm <- matrix(rep1$NeqnR, ncol = 6, nrow = length(0:70)) %>%
data.frame(.)
head(round(rep1$catch_yf_pred,2)/round(df$catch_yf_obs[,2:(1+df$nfleets_fish)],2),df$yRun)
data.frame('NEQN_m' =colSums(neqnm) ,
"N_0_Fem" = colSums(rep1$N_0ais)[,1],
"N_0_Mal" = colSums(rep1$N_0ais)[,2],
"N_init_Fem" = colSums(rep1$Ninit_ais)[,1],
"N_init_Mal" = colSums(rep1$Ninit_ais)[,2],
"N_beg_y1_Fem" = colSums(rep1$N_yais_beg[1,,,1]),
"N_mid_y1_Fem" = colSums(rep1$N_yais_mid[1,,,1]),
"N_end_y1_Fem" = colSums(rep1$N_yais_end[1,,,1]))
rep1$SSB_0i ## should not be small or negative nor disproportionate
rep1$SSB_0k ## should not be small or negative
rep1$SSB_yi[1,] ## should match SSB0 without fishing
df$phi_ki
# for(i in 1:6){
#   for(a in 1:71){
#     ans[i] = ans[i] + rep1$N_0ais[a,i,1]*
#       df$wtatlen_kab[df$phi_ik2[i]+1,1]*
#       df$unfished_ALK_F[a,1]^df$wtatlen_kab[df$phi_ik2[i]+1,2]*
#       df$mat_ak[a,df$phi_ik2[i]+1]
#   }
# }
ans = rep(0,4)
for(k in 1:4){
for(i in 1:6){
ans[k] = ans[k]+  df$phi_ki[k,i]*rep1$SSB_0i[i];
}
}
ans
rep1$SSB_0k ## should not be small or negative
df$phi_ki
rm(list = ls())
## OM_Master.R
## M S Kapur
## Inspiration from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v2L_1_16Nov",'shire_v3L')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
# df$v1 = 0.7;  df$Fmax = 1.5;
df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =   7 #df$tEnd-1
df$mat_age <- rep(1e-5,df$nage)
df$selShape_fish[3:5] <-  -1 ##
## the numbers are in order of df$parms
## if you are fixing fish fleets, be sure that selShape is correct!
mappy <- buildMap(toFix = c(3,5,8),
fixFlt = c("BC_LL","BC_TRAP","BC_TWL"))
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
# ## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
rep1$SSB_0i ## should not be small or negative nor disproportionate
rep1$SSB_0k ## should not be small or negative
rep1$R_0k
data.frame('NEQN_m' =colSums(neqnm) ,
"N_0_Fem" = colSums(rep1$N_0ais)[,1],
"N_0_Mal" = colSums(rep1$N_0ais)[,2],
"N_init_Fem" = colSums(rep1$Ninit_ais)[,1],
"N_init_Mal" = colSums(rep1$Ninit_ais)[,2],
"N_beg_y1_Fem" = colSums(rep1$N_yais_beg[1,,,1]),
"N_mid_y1_Fem" = colSums(rep1$N_yais_mid[1,,,1]),
"N_end_y1_Fem" = colSums(rep1$N_yais_end[1,,,1]))
neqnm <- matrix(rep1$NeqnR, ncol = 6, nrow = length(0:70)) %>%
data.frame(.)
data.frame('NEQN_m' =colSums(neqnm) ,
"N_0_Fem" = colSums(rep1$N_0ais)[,1],
"N_0_Mal" = colSums(rep1$N_0ais)[,2],
"N_init_Fem" = colSums(rep1$Ninit_ais)[,1],
"N_init_Mal" = colSums(rep1$Ninit_ais)[,2],
"N_beg_y1_Fem" = colSums(rep1$N_yais_beg[1,,,1]),
"N_mid_y1_Fem" = colSums(rep1$N_yais_mid[1,,,1]),
"N_end_y1_Fem" = colSums(rep1$N_yais_end[1,,,1]))
ans = rep(0,6)
for(i in 1:6){
for(a in 1:71){
ans[i] = ans[i] + rep1$N_0ais[a,i,1]*
df$wtatlen_kab[df$phi_ik2[i]+1,1]*
df$unfished_ALK_F[a,1]^df$wtatlen_kab[df$phi_ik2[i]+1,2]*
df$mat_ak[a,df$phi_ik2[i]+1]
}
}
rep1$SSB_0i ## should not be small or negative nor disproportionate
ans
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v2L_1_16Nov",'shire_v3L')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v2L_1_16Nov",'shire_v3L')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v2L_1_16Nov",'shire_v3L')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
# df$v1 = 0.7;  df$Fmax = 1.5;
df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =   7 #df$tEnd-1
df$mat_age <- rep(1e-5,df$nage)
df$selShape_fish[3:5] <-  -1 ## slx = 1.0 for all BC fisheries
## the numbers are in order of df$parms
## if you are fixing fish fleets, be sure that selShape is correct!
mappy <- buildMap(toFix = c(3,5,8),
fixFlt = c("BC_LL","BC_TRAP","BC_TWL"))
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
# ## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
neqnm <- matrix(rep1$NeqnR, ncol = 6, nrow = length(0:70)) %>%
data.frame(.)
head(round(rep1$catch_yf_pred,2)/round(df$catch_yf_obs[,2:(1+df$nfleets_fish)],2),df$yRun)
data.frame('NEQN_m' =colSums(neqnm) ,
"N_0_Fem" = colSums(rep1$N_0ais)[,1],
"N_0_Mal" = colSums(rep1$N_0ais)[,2],
"N_init_Fem" = colSums(rep1$Ninit_ais)[,1],
"N_init_Mal" = colSums(rep1$Ninit_ais)[,2],
"N_beg_y1_Fem" = colSums(rep1$N_yais_beg[1,,,1]),
"N_mid_y1_Fem" = colSums(rep1$N_yais_mid[1,,,1]),
"N_end_y1_Fem" = colSums(rep1$N_yais_end[1,,,1]))
rep1$SSB_0i ## should not be small or negative nor disproportionate
rep1$SSB_0k ## should not be small or negative
rep1$SSB_yi[1,] ## should match SSB0 without fishing
rep1$SSB_yi[1,]/rep1$SSB_0i
bounds <- boundPars(obj, r0_lower = 0, boundSlx = FALSE)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
