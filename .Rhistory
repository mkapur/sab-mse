(pRyi | pRyk)/(pSSByi  | pSSByk)
reps$R_yk
head(reps$SSB_yk)
reps$SSB_0k
61762/199500
7199/22171
parms$logh_k
log(1)
source(here("R","functions",'load_files_OM.R'))
## OM MODEL CONDITIONING ----
# code from runomem and run om condition
set.seed(731)
plot.figures = FALSE # Set true for printing to file
# Run the simulation model
assessment <- read.csv(here("input","data",'assessment_MLE.csv')) ## I believe this comes from SS3
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
Catch.obs <- read.csv(here("input","data",'hake_totcatch.csv'))
df <- load_data_seasons(nspace =2)
df$Catch <- Catch.obs$Fishery
time <- 1
yrinit <- df$nyear
### Run the OM and the EM for x number of years in the MSE
### Set targets for harvesting etc
# df$parms$initN <- df$parms$initN*0
# df$parms$Rin <- df$parms$Rin*0
# df$F0 <- 0*df$F0
simyears <- 25 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true.catch(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
# Plot stuff
parms <- getParameters_OM(trueparms = FALSE, df = df)
##  Create a data frame to send to runsabassessment
df.new <- create_TMB_data(sim.data, df, history = TRUE)
parms.new <- parms
F0 <- rowSums(sim.data$Fout)
Rdev <- parms$Rin
parms.new$F0 <- F0
parms.new$Rin <- Rdev
## testing without movement
df.new$omega_ai[,] <- 0.5 ## stationary dist
# df.new$X_ija[,] <-
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
source(here("R","functions","plotNinit.R"))
## OM_Master.R
## M S Kapur mod from N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM_Master.R
## M S Kapur mod from N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM MODEL CONDITIONING ----
# code from runomem and run om condition
set.seed(731)
plot.figures = FALSE # Set true for printing to file
# Run the simulation model
assessment <- read.csv(here("input","data",'assessment_MLE.csv')) ## I believe this comes from SS3
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
Catch.obs <- read.csv(here("input","data",'hake_totcatch.csv'))
df <- load_data_seasons(nspace =2)
df$Catch <- Catch.obs$Fishery
time <- 1
yrinit <- df$nyear
### Run the OM and the EM for x number of years in the MSE
### Set targets for harvesting etc
# df$parms$initN <- df$parms$initN*0
# df$parms$Rin <- df$parms$Rin*0
# df$F0 <- 0*df$F0
simyears <- 25 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true.catch(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
# Plot stuff
parms <- getParameters_OM(trueparms = FALSE, df = df)
##  Create a data frame to send to runsabassessment
df.new <- create_TMB_data(sim.data, df, history = TRUE)
parms.new <- parms
F0 <- rowSums(sim.data$Fout)
Rdev <- parms$Rin
parms.new$F0 <- F0
parms.new$Rin <- Rdev
## testing without movement
df.new$omega_ai[,] <- 0.5 ## stationary dist
# df.new$X_ija[,] <-
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
source(here("R","functions","plotNinit.R"))
(pRyi | pRyk)/(pSSByi  | pSSByk)
cbind(reps$R_yk, reps$SSB_yk) %>% data.frame() %>%
mutate('Yr' = 1:nrow(.)) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = Yr, y = value, color = variable )) +
geom_line(lwd = 2) +
labs(x = 'Model Year',y = 'Recruits', color = 'stock') +
ggsidekick::theme_sleek()
cbind(reps$R_yk, reps$SSB_yk) %>% data.frame() %>%
mutate('Yr' = 1:nrow(.))
cbind(reps$R_yk, reps$SSB_yk) %>% data.frame() %>%
mutate('Yr' = 1:nrow(.), RECS1 = X1, RECS2 = X2, SSBS1 = X3, SSBS2 = X4) %>%
select(-X1,-X2,-X3,-X4) %>%
reshape2::melt(id = c('Yr'))
cbind(reps$R_yk, reps$SSB_yk) %>% data.frame() %>%
mutate('Yr' = 1:nrow(.), RECS1 = X1, RECS2 = X2, SSBS1 = X3, SSBS2 = X4) %>%
select(-X1,-X2,-X3,-X4)
cbind(reps$R_yk, reps$SSB_yk) %>% data.frame() %>%
mutate('Yr' = 1:nrow(.), RECS1 = X1, RECS2 = X2, SSBS1 = X3, SSBS2 = X4) %>%
select(-X1,-X2,-X3,-X4) %>%
# reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = SSBS1, y = RECS1, color = Yr )) +
geom_point() +
labs(x = 'SSBA1',y = 'Recruits A1', color = 'Y') +
ggsidekick::theme_sleek()
cbind(reps$R_yk, reps$SSB_yk) %>% data.frame() %>%
mutate('Yr' = 1:nrow(.), RECS1 = X1, RECS2 = X2, SSBS1 = X3, SSBS2 = X4) %>%
select(-X1,-X2,-X3,-X4) %>%
reshape2::melt(id = c('Yr'))
cbind(reps$R_yk, reps$SSB_yk) %>% data.frame() %>%
mutate('Yr' = 1:nrow(.), RECS1 = X1, RECS2 = X2, SSBS1 = X3, SSBS2 = X4) %>%
select(-X1,-X2,-X3,-X4) %>%
reshape2::melt(id = c('Yr')) %>%
mutate(variable2 = substr(variable,1,3), stock = substr(variable,4,5)) %>%
select(-variable) %>%
tidyr::pivot_wider(names_from = variable2)
pSRR <- cbind(reps$R_yk, reps$SSB_yk) %>% data.frame() %>%
mutate('Yr' = 1:nrow(.), RECS1 = X1, RECS2 = X2, SSBS1 = X3, SSBS2 = X4) %>%
select(-X1,-X2,-X3,-X4) %>%
reshape2::melt(id = c('Yr')) %>%
mutate(variable2 = substr(variable,1,3), stock = substr(variable,4,5)) %>%
select(-variable) %>%
tidyr::pivot_wider(names_from = variable2) %>%
ggplot(., aes(x = SSB, y = REC, color = Yr )) +
geom_point() +
labs(x = 'SSBA1',y = 'Recruits A1', color = 'Y') +
ggsidekick::theme_sleek() +
facet_wrap(~ stock)
pSRR
pSRR <- cbind(reps$R_yk, reps$SSB_yk) %>% data.frame() %>%
mutate('Yr' = 1:nrow(.), RECS1 = X1, RECS2 = X2, SSBS1 = X3, SSBS2 = X4) %>%
select(-X1,-X2,-X3,-X4) %>%
reshape2::melt(id = c('Yr')) %>%
mutate(variable2 = substr(variable,1,3), stock = substr(variable,4,5)) %>%
select(-variable) %>%
tidyr::pivot_wider(names_from = variable2) %>%
ggplot(., aes(x = SSB, y = REC, color = Yr )) +
geom_point() +
labs(x = 'SSBA1',y = 'Recruits A1', color = 'Y') +
ggsidekick::theme_sleek() +
facet_wrap(~ stock, scales = 'free')
pSRR
pSRR <- cbind(reps$R_yk, reps$SSB_yk) %>% data.frame() %>%
mutate('Yr' = 1:nrow(.), RECS1 = X1, RECS2 = X2, SSBS1 = X3, SSBS2 = X4) %>%
select(-X1,-X2,-X3,-X4) %>%
reshape2::melt(id = c('Yr')) %>%
mutate(variable2 = substr(variable,1,3), stock = substr(variable,4,5)) %>%
select(-variable) %>%
tidyr::pivot_wider(names_from = variable2) %>%
ggplot(., aes(x = SSB, y = REC, color = Yr )) +
geom_point() +
labs(x = 'SSB',y = 'Recruits #', color = 'Y') +
ggsidekick::theme_sleek() +
facet_wrap(~ stock, scales = 'free')
(pNinit  | pNzero)/(pNage1  | pNage2)
pNage1
reps$N_yai_beg[1:5,,1]
plot(reps$N_yai_beg[1,,1]) ## init l at age
points(reps$N_yai_beg[5,,1],pch = 19) ## init l at age
points(reps$N_yai_beg[53,,1],pch = 19) ## init l at age
reps$N_yai_beg[53,,1]
reps$N_yai_beg[0,,1]
reps$N_yai_beg[,0,1]
reps$N_yai_beg[,1,1]
reps$R_yi
reps$Length_yai_beg[,,1] %>% data.frame() %>%
mutate('Yr' = 1:nrow(.))
reps$Length_yai_beg[,,1] %>% data.frame() %>%
mutate('Yr' = 1:nrow(.)) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = as.numeric(substr(variable,2,2))-1, y = value, color = Yr )) +
geom_point() +
labs(x = 'Age',y = 'Length', color = 'Year') +
ggsidekick::theme_sleek()
View(reps$Length_yai_beg[,,1] )
reps$Length_yai_beg[,1:2,1]
reps$Length_yai_beg[,,1] %>% data.frame() %>%
mutate('Yr' = 1:nrow(.)) %>%
reshape2::melt(id = c('Yr'))
nchar("dfhhd")
pLAA1 <- reps$Length_yai_beg[,,1] %>% data.frame() %>%
mutate('Yr' = 1:nrow(.)) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = as.numeric(substr(variable,2,nchar(variable)))-1, y = value, color = Yr )) +
geom_point() +
labs(x = 'Age',y = 'Length', color = 'Year') +
ggsidekick::theme_sleek()
pLAA1
reps$Length_yai_beg[,,1] %>% data.frame() %>%
mutate('Yr' = 1:nrow(.)) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = as.numeric(substr(variable,2,nchar(variable)))-1, y = value, color = Yr )) +
geom_point() +
labs(x = 'Age',y = 'Length', color = 'Year') +
ggsidekick::theme_sleek()
substr('X2',2,3)
reps$Length_yai_beg[,,1] %>% data.frame() %>%
mutate('Yr' = 1:nrow(.)) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = as.numeric(substr(variable,2,3))-1, y = value, color = Yr )) +
geom_point() +
labs(x = 'Age',y = 'Length', color = 'Year') +
ggsidekick::theme_sleek()
pLAA1 <- reps$Length_yai_beg[,,1] %>% data.frame() %>%
mutate('Yr' = 1:nrow(.)) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = as.numeric(substr(variable,2,3))-1, y = value, color = Yr )) +
geom_point() +
labs(x = 'Age',y = 'Length', color = 'Year') +
ggsidekick::theme_sleek()
pLAA2 <- reps$Length_yai_beg[,,2] %>% data.frame() %>%
mutate('Yr' = 1:nrow(.)) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = as.numeric(substr(variable,2,3))-1, y = value, color = Yr )) +
geom_point() +
labs(x = 'Age',y = 'Length', color = 'Year') +
ggsidekick::theme_sleek()
pLAA1  | pLAA2
reps$Length_yai_beg[,,2]
head(reps$Length_yai_beg[,,1])
head(reps$Length_yai_beg[,,2])
## OM_Master.R
## M S Kapur mod from N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
source(here("R","functions","plotChecks.R"))
pLAA1  | pLAA2
reps$Length_yai_beg[1:5,,1]
reps$Length_yai_beg[1:5,,2]
reps$N_yai_beg[1:5,,2]
reps$N_yai_beg[1:5,,1]
## OM_Master.R
## M S Kapur mod from N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
source(here("R","functions","plotChecks.R"))
pLAA1  | pLAA2
df.new$phi_ik
df.new$phi_ij
source(here("R","functions",'load_files_OM.R'))
## OM MODEL CONDITIONING ----
# code from runomem and run om condition
set.seed(731)
plot.figures = FALSE # Set true for printing to file
# Run the simulation model
assessment <- read.csv(here("input","data",'assessment_MLE.csv')) ## I believe this comes from SS3
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
Catch.obs <- read.csv(here("input","data",'hake_totcatch.csv'))
df <- load_data_seasons(nspace =2)
df$Catch <- Catch.obs$Fishery
time <- 1
yrinit <- df$nyear
### Run the OM and the EM for x number of years in the MSE
### Set targets for harvesting etc
# df$parms$initN <- df$parms$initN*0
# df$parms$Rin <- df$parms$Rin*0
# df$F0 <- 0*df$F0
simyears <- 25 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true.catch(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
# Plot stuff
parms <- getParameters_OM(trueparms = FALSE, df = df)
##  Create a data frame to send to runsabassessment
df.new <- create_TMB_data(sim.data, df, history = TRUE)
parms.new <- parms
F0 <- rowSums(sim.data$Fout)
Rdev <- parms$Rin
parms.new$F0 <- F0
parms.new$Rin <- Rdev
## testing without movement
df.new$omega_ai[,] <- 0.5 ## stationary dist
# df.new$X_ija[,] <-
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
source(here("R","functions","plotChecks.R"))
pLAA1  | pLAA2
## OM_Master.R
## M S Kapur mod from N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
## OM_Master.R
## M S Kapur mod from N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
source(here("R","functions","plotChecks.R"))
pLAA1  | pLAA2
reps$Length_yai_beg[1:5,,1]
reps$Length_yai_beg[1:5,,2\]
reps$Length_yai_beg[1:5,,2]
nspace = 2
# phi_ij <-  matrix(c(1,0,1,0), byrow = TRUE, ncol = nspace, nrow = nspace) ## indicates if subareas comprise DISTINCT stocks
phi_ij <-  matrix(NA, byrow = TRUE, ncol = nspace, nrow = nspace) ## autogenerate this
phi_ik2
phi_ik <- matrix(c(1,0,0,1), byrow = TRUE, nrow = nstocks, ncol = nspace) ## placeholder for alternative spatial stratifications
phi_ik2 <- apply(phi_ik,2, function(x)which(x == 1))-1 ## a vector for par subsetting, the columns are subareas
phi_ik2
nstocks = 2
phi_ik <- matrix(c(1,0,0,1), byrow = TRUE, nrow = nstocks, ncol = nspace) ## placeholder for alternative spatial stratifications
phi_ik2 <- apply(phi_ik,2, function(x)which(x == 1))-1 ## a vector for par subsetting, the columns are subareas
phi_ik2
# phi_ij <-  matrix(c(1,0,1,0), byrow = TRUE, ncol = nspace, nrow = nspace) ## indicates if subareas comprise DISTINCT stocks
phi_ij <-  matrix(NA, byrow = TRUE, ncol = nspace, nrow = nspace) ## autogenerate this
for(i in 1:nspace){
for(j in 1:nspace){
phi_ij[i,j] = ifelse(phi_ik2[i] == phi_ik2[j],0,1)
}
}
phi_ij
## OM_Master.R
## M S Kapur mod from N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM MODEL CONDITIONING ----
# code from runomem and run om condition
set.seed(731)
plot.figures = FALSE # Set true for printing to file
# Run the simulation model
assessment <- read.csv(here("input","data",'assessment_MLE.csv')) ## I believe this comes from SS3
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
Catch.obs <- read.csv(here("input","data",'hake_totcatch.csv'))
df <- load_data_seasons(nspace =2)
df$Catch <- Catch.obs$Fishery
time <- 1
yrinit <- df$nyear
### Run the OM and the EM for x number of years in the MSE
### Set targets for harvesting etc
# df$parms$initN <- df$parms$initN*0
# df$parms$Rin <- df$parms$Rin*0
# df$F0 <- 0*df$F0
simyears <- 25 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true.catch(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
# Plot stuff
parms <- getParameters_OM(trueparms = FALSE, df = df)
##  Create a data frame to send to runsabassessment
df.new <- create_TMB_data(sim.data, df, history = TRUE)
parms.new <- parms
F0 <- rowSums(sim.data$Fout)
Rdev <- parms$Rin
parms.new$F0 <- F0
parms.new$Rin <- Rdev
## testing without movement
df.new$omega_ai[,] <- 0.5 ## stationary dist
# df.new$X_ija[,] <-
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
source(here("R","functions","plotChecks.R"))
pLAA1  | pLAA2
df.new$phi_ij
## OM_Master.R
## M S Kapur mod from N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM_Master.R
## M S Kapur mod from N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
source(here("R","functions","plotChecks.R"))
# plots returned from plotChecks.R
(pNinit  | pNzero)/(pNage1  | pNage2)
pSRR
pLAA1  | pLAA2
a1 <-
reps$LengthAge_alyi_beg[,,,2] %>%
melt() %>%
group_by(Var2) %>%
mutate(sumP = sum(value), pbin = value/sumP)
ggplot(a1,aes(x = Var1, y = Var2, fill = pbin)) +
geom_tile()
a1
reps$LengthAge_alyi_beg[,,,2]
reps$LengthAge_alyi_beg[,,,2] %>% apply(.,2,max)
reps$LengthAge_alyi_beg[,,,2] %>% apply(.,1,sum)
rowSums(reps$LengthAge_alyi_beg[,,,1])
a1 <-
reps$LengthAge_alyi_beg[,,5,2] %>%
melt() %>%
group_by(Var2) %>%
mutate(sumP = sum(value), pbin = value/sumP)
ggplot(a1,aes(x = Var1, y = Var2, fill = pbin)) +
geom_tile()
a1 <-
reps$LengthAge_alyi_beg[,,1,2] %>%
melt() %>%
group_by(Var2) %>%
mutate(sumP = sum(value), pbin = value/sumP)
ggplot(a1,aes(x = Var1, y = Var2, fill = pbin)) +
geom_tile()
rm(list =ls())
