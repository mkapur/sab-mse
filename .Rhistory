select(Fleet_Name, Yr, Obs, ret_bio) %>%
mutate(discard = Obs-ret_bio) %>%
select(-ret_bio) %>%
reshape2::melt(id = c("Yr", "Fleet_Name"))
cc_catdis <- ccbase$catch %>%
select(Fleet_Name, Yr, Obs, ret_bio) %>%
mutate(discard = Obs-ret_bio) %>%
select(-ret_bio) %>%
reshape2::melt(id = c("Yr", "Fleet_Name")) %>%
mutate(Year = Yr,
fleet = Fleet_Name,
type = ifelse(as.character(variable) == 'Obs','Catch','Discard'),
stock = NA,
subarea = NA,
mgmt = "CC") %>%
select(Year, fleet, type, subarea, stock, mgmt,  everything(), --variable)
cc_catdis
head(cc_catdis)
ccbase$catch %>%
select(Fleet_Name, Yr, Obs, ret_bio) %>%
mutate(discard = Obs-ret_bio) %>%
select(-ret_bio)
ccbase$catch %>%
select(Fleet_Name, Yr, Obs, ret_bio) %>%
mutate(discard = Obs-ret_bio) %>%
select(-ret_bio) %>%
reshape2::melt(id = c("Yr", "Fleet_Name"))
ccbase$catch %>%
select(Fleet_Name, Yr, Obs, ret_bio) %>%
mutate(discard = Obs-ret_bio) %>%
select(-ret_bio) %>%
reshape2::melt(id = c("Yr", "Fleet_Name")) %>%
mutate(Year = Yr,
fleet = Fleet_Name,
type = ifelse(as.character(variable) == 'Obs','Catch','Discard'),
stock = NA,
subarea = NA,
mgmt = "CC")
ccbase$catch %>%
select(Fleet_Name, Yr, Obs, ret_bio) %>%
mutate(discard = Obs-ret_bio) %>%
select(-ret_bio) %>%
reshape2::melt(id = c("Yr", "Fleet_Name")) %>%
mutate(Year = Yr,
fleet = Fleet_Name,
type = ifelse(as.character(variable) == 'Obs','Catch','Discard'),
stock = NA,
subarea = NA,
mgmt = "CC") %>%
select(Year, fleet, type, subarea, stock, mgmt,  everything(), -variable)
cc_catdis <- ccbase$catch %>%
select(Fleet_Name, Yr, Obs, ret_bio) %>%
mutate(discard = Obs-ret_bio) %>%
select(-ret_bio) %>%
reshape2::melt(id = c("Yr", "Fleet_Name")) %>%
mutate(Year = Yr,
fleet = Fleet_Name,
type = ifelse(as.character(variable) == 'Obs','Catch','Discard'),
stock = NA,
subarea = NA,
mgmt = "CC") %>%
select(Year, fleet, type, subarea, stock, mgmt,  everything(), -variable)
cc_catdis %>%
filter(type == 'Catch')
cc_catdis %>%
filter(type == 'Discard')
cc_catdis <- ccbase$catch %>%
select(Fleet_Name, Yr, Obs, ret_bio) %>%
mutate(discard = Obs-ret_bio) %>%
select(-ret_bio) %>%
reshape2::melt(id = c("Yr", "Fleet_Name")) %>%
mutate(Year = Yr,
fleet = Fleet_Name,
type = ifelse(as.character(variable) == 'Obs','Catch','Discard'),
stock = NA,
subarea = NA,
mgmt = "CC") %>%
select(Year, fleet, type, subarea, stock, mgmt,  everything(), -Yr, -Fleet_Name, -variable)
cc_catdis
cc_catdis %>%
filter(type == 'Catch') %>%
write.csv(., file = paste0("input/temp/cc_catch_",Sys.Date(),".csv"), row.names = FALSE)
cc_catdis %>%
filter(type == 'Discard') %>%
write.csv(., file = paste0("input/temp/cc_discard_",Sys.Date(),".csv"), row.names = FALSE)
## combine landings/discards and write to CLEAN
list.files("./temp/", full.names = TRUE)[grep("_catch_", list.files("./temp/", full.names = TRUE))]]
## combine landings/discards and write to CLEAN
list.files("./temp/", full.names = TRUE)[grep("_catch_", list.files("./temp/", full.names = TRUE))]
## combine landings/discards and write to CLEAN
list.files("./temp/", full.names = TRUE)[grep("_catch_", list.files("./temp/", full.names = TRUE))]
list.files("./temp/", full.names = TRUE)
## combine landings/discards and write to CLEAN
list.files("./input/temp/", full.names = TRUE)[grep("_catch_", list.files("./input/temp/", full.names = TRUE))]
## combine landings/discards and write to CLEAN
list.files("./input/temp/", full.names = TRUE)[grep("_catch_", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows()
## combine landings/discards and write to CLEAN
list.files("./input/temp/", full.names = TRUE)[grep("_catch_", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "input/clean/clean_landings.csv",row.names = FALSE)
## combine landings/discards and write to CLEAN
list.files("./input/temp/", full.names = TRUE)[grep("_catch_", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "./input/clean/clean_landings.csv",row.names = FALSE)
## combine landings/discards and write to CLEAN
list.files("./input/temp/", full.names = TRUE)[grep("_catch_", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "./input/cleaned/clean_landings.csv",row.names = FALSE)
list.files("./input/temp/", full.names = TRUE)[grep("_discard_", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "./input/cleaned/clean_discard.csv",row.names = FALSE)
landings <- read.csv("./input/cleaned/clean_landings.csv") ## made in dataprep.R
landings
ak_catdis <- data.frame(Year = akdis$Year, Gear = akdis$Gear, akdis[grep(paste("BSAI*","GOA*",sep= "|"), names(akdis))]) %>%
select(-BSAI_PctDiscard, -GOA_PctDiscard) %>%
reshape2::melt(id = c("Year","Gear")) %>%
mutate(variable = as.character(variable)) %>%
mutate(type = stringr::str_split_fixed(variable, "_", 2)[,2],
stock_temp =  stringr::str_split_fixed(variable, "_", 2)[,1]) %>%
mutate(fleet = Gear,
stock = ifelse(stock_temp == 'BSAI', "R5","R4"),
subarea = ifelse(stock_temp == 'BSAI', "A1","A2"),
mgmt = "AK") %>%
select(Year,fleet, type, subarea, stock, mgmt,  everything(), -stock_temp, -variable)
ak_catdis
ak_catdis %>%
filter(type == 'Catch') %>%
write.csv(., file = paste0("input/temp/ak_catch_",Sys.Date(),".csv"), row.names = FALSE)
ak_catdis %>%
filter(type == 'Discard') %>%
write.csv(., file = paste0("input/temp/ak_discard_",Sys.Date(),".csv"), row.names = FALSE)
## combine landings/discards and write to CLEAN
list.files("./input/temp/", full.names = TRUE)[grep("_catch_", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "./input/cleaned/clean_landings.csv",row.names = FALSE)
list.files("./input/temp/", full.names = TRUE)[grep("_discard_", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "./input/cleaned/clean_discard.csv",row.names = FALSE)
landings <- read.csv("./input/cleaned/clean_landings.csv") ## made in dataprep.R
landings
# Surveys
surv <- read.csv("input/Indices_SS3_2020-01-23v3.csv")  %>% filter(Fleet != "AllAreas") ## VAST stdization
# Surveys
surv <- read.csv("./input/Indices_SS3_2020-01-23v3.csv")  %>% filter(Fleet != "AllAreas") ## VAST stdization
# Surveys
surv <- read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% filter(Fleet != "AllAreas") ## VAST stdization
surv
## spatial matrix -- for matching on region, stock, sub_area, etc
spmat <- data.frame(subarea = c('A1',"A2","B3","B2","B1","C2","C1"),
stock = c(paste("R",5:1)),
mgmt = c(rep("AK",2), rep("BC",3), rep("CC",2)))
c('A1',"A2","B3","B2","B1","C2","C1")
## spatial matrix -- for matching on region, stock, sub_area, etc
spmat <- data.frame(subarea = c('A1',"A2","B3","B2","B1","C2","C1"),
stock = c("R5","R4","R4","R3","R2","R2","R1"),
mgmt = c(rep("AK",2), rep("BC",3), rep("CC",2)))
spmat
## spatial matrix -- for matching on region, stock, sub_area, etc
spmat <- data.frame(subarea = c('A1',"A2","B3","B2","B1","C2","C1"),
stock = c("R5","R4","R4","R3","R2","R2","R1"),
mgmt = c("AI","AK", rep("BC",3), rep("CC",2)))
spmat
read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
filter(Fleet != "AllAreas") %>%
merge(.,spmat, by.x = Fleet, by.y = mgmt)
read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
filter(Fleet != "AllAreas")
read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
filter(Fleet != "AllAreas") %>%
merge(.,spmat, by.x = "Fleet", by.y = "mgmt")
head(landings)
ak_catdis <- data.frame(Year = akdis$Year, Gear = akdis$Gear, akdis[grep(paste("BSAI*","GOA*",sep= "|"), names(akdis))]) %>%
select(-BSAI_PctDiscard, -GOA_PctDiscard) %>%
reshape2::melt(id = c("Year","Gear")) %>%
mutate(variable = as.character(variable)) %>%
mutate(type = stringr::str_split_fixed(variable, "_", 2)[,2],
stock_temp =  stringr::str_split_fixed(variable, "_", 2)[,1]) %>%
mutate(fleet = Gear,
stock = ifelse(stock_temp == 'BSAI', "R5","R4"),
subarea = ifelse(stock_temp == 'BSAI', "A1","A2"),
mgmt = "AK") %>%
select(Year,fleet, type, subarea, stock, mgmt,  everything(), -Gear, -stock_temp, -variable)
ak_catdis %>%
filter(type == 'Catch') %>%
write.csv(., file = paste0("input/temp/ak_catch_",Sys.Date(),".csv"), row.names = FALSE)
ak_catdis %>%
filter(type == 'Discard') %>%
write.csv(., file = paste0("input/temp/ak_discard_",Sys.Date(),".csv"), row.names = FALSE)
## combine landings/discards and write to CLEAN
list.files("./input/temp/", full.names = TRUE)[grep("_catch_", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "./input/cleaned/clean_landings.csv",row.names = FALSE)
list.files("./input/temp/", full.names = TRUE)[grep("_catch_", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows()
list.files("./input/temp/", full.names = TRUE)[grep("_discard_", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "./input/cleaned/clean_discard.csv",row.names = FALSE)
landings <- read.csv("./input/cleaned/clean_landings.csv") ## made in dataprep.R
head(landings)
# Surveys
surv <- read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
filter(Fleet != "AllAreas") %>%
merge(.,spmat, by.x = "Fleet", by.y = "mgmt") %>%
mutate(value = Estimate_metric_tons, sigma = SD_log, fleet = Fleet, type = 'survey') %>%
select(Year, fleet, type, subarea, stock, mgmt, value, sigma)
# Surveys
surv <- read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
filter(Fleet != "AllAreas") %>%
merge(.,spmat, by.x = "Fleet", by.y = "mgmt") %>%
mutate(value = Estimate_metric_tons, sigma = SD_log, fleet = Fleet, type = 'survey') %>%
select(Year, fleet, type, subarea, stock, mgmt, value, sigma)
read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
filter(Fleet != "AllAreas") %>%
merge(.,spmat, by.x = "Fleet", by.y = "mgmt") %>%
mutate(value = Estimate_metric_tons, sigma = SD_log, fleet = Fleet, type = 'survey')
# Surveys
surv <- read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
filter(Fleet != "AllAreas") %>%
merge(.,spmat, by.x = "Fleet", by.y = "mgmt") %>%
mutate(value = Estimate_metric_tons, sigma = SD_log, fleet = Fleet, mgmt = fleet, type = 'survey') %>%
select(Year, fleet, type, subarea, stock, mgmt, value, sigma)
surv
read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
filter(Fleet != "AllAreas") %>%
merge(.,spmat, by.x = "Fleet", by.y = "mgmt") %>%
mutate(value = Estimate_metric_tons, sigma = SD_log, fleet = Fleet, mgmt = fleet, type = 'survey') %>%
select(Year, fleet, type, subarea, stock, mgmt, value, sigma) %>%
arrange(.,Year)
read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
filter(Fleet != "AllAreas") %>%
merge(.,spmat, by.x = "Fleet", by.y = "mgmt") %>%
mutate(value = Estimate_metric_tons, sigma = SD_log, fleet = Fleet, mgmt = fleet, type = 'survey') %>%
select(Year, fleet, type, subarea, stock, mgmt, value, sigma) %>%
arrange(.,Year,fleet)
read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")
read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>%  filter(Year == 1980)
read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
distinct(Fleet, Yr, Estimate_metric_tons)
read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
distinct(Fleet, Year, Estimate_metric_tons)
# Surveys
surv <- read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
distinct(Fleet, Year, Estimate_metric_tons) %>% ## remove any dupes
filter(Fleet != "AllAreas") %>%
merge(.,spmat, by.x = "Fleet", by.y = "mgmt") %>%
mutate(value = Estimate_metric_tons, sigma = SD_log, fleet = Fleet, mgmt = fleet, type = 'survey') %>%
select(Year, fleet, type, subarea, stock, mgmt, value, sigma) %>%
arrange(.,Year,fleet)
# Surveys
surv <- read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
distinct(Fleet, Year, Estimate_metric_tons, .keep_all = TRUE) %>% ## remove any dupes
filter(Fleet != "AllAreas") %>%
merge(.,spmat, by.x = "Fleet", by.y = "mgmt") %>%
mutate(value = Estimate_metric_tons, sigma = SD_log, fleet = Fleet, mgmt = fleet, type = 'survey') %>%
select(Year, fleet, type, subarea, stock, mgmt, value, sigma) %>%
arrange(.,Year,fleet)
surv
read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
distinct(Fleet, Year, Estimate_metric_tons, .keep_all = TRUE) %>% ## remove any dupes
filter(Fleet != "AllAreas") %>%
merge(.,spmat, by.x = "Fleet", by.y = "mgmt", all.y = FALSE)
read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
distinct(Fleet, Year, Estimate_metric_tons, .keep_all = TRUE) %>% ## remove any dupes
filter(Fleet != "AllAreas") %>%
merge(.,spmat, by.x = "Fleet", by.y = "mgmt", all.y = FALSE) %>%
mutate(value = Estimate_metric_tons, sigma = SD_log, fleet = Fleet, mgmt = fleet, type = 'survey') %>%
select(Year, fleet, type, subarea, stock, mgmt, value, sigma) %>%
arrange(.,Year,fleet)
data.frame(Year = akdis$Year, Gear = akdis$Gear, akdis[grep(paste("BSAI*","GOA*",sep= "|"), names(akdis))]) %>%
select(-BSAI_PctDiscard, -GOA_PctDiscard) %>%
reshape2::melt(id = c("Year","Gear")) %>%
mutate(variable = as.character(variable)) %>%
mutate(type = stringr::str_split_fixed(variable, "_", 2)[,2],
stock_temp =  stringr::str_split_fixed(variable, "_", 2)[,1]) %>%
mutate(fleet = Gear,
stock = ifelse(stock_temp == 'BSAI', "R5","R4"),
subarea = ifelse(stock_temp == 'BSAI', "A1","A2")) %>%
merge(.,spmat, by.x = "stock", by.y = "stock", all.y = FALSE)
data.frame(Year = akdis$Year, Gear = akdis$Gear, akdis[grep(paste("BSAI*","GOA*",sep= "|"), names(akdis))]) %>%
select(-BSAI_PctDiscard, -GOA_PctDiscard) %>%
reshape2::melt(id = c("Year","Gear")) %>%
mutate(variable = as.character(variable)) %>%
mutate(type = stringr::str_split_fixed(variable, "_", 2)[,2],
stock_temp =  stringr::str_split_fixed(variable, "_", 2)[,1]) %>%
mutate(fleet = Gear,
# stock = ifelse(stock_temp == 'BSAI', "R5","R4"),
subarea = ifelse(stock_temp == 'BSAI', "A1","A2")) %>%
merge(.,spmat, by.x = "stock", by.y = "stock", all.y = FALSE)
data.frame(Year = akdis$Year, Gear = akdis$Gear, akdis[grep(paste("BSAI*","GOA*",sep= "|"), names(akdis))]) %>%
select(-BSAI_PctDiscard, -GOA_PctDiscard) %>%
reshape2::melt(id = c("Year","Gear")) %>%
mutate(variable = as.character(variable)) %>%
mutate(type = stringr::str_split_fixed(variable, "_", 2)[,2],
stock_temp =  stringr::str_split_fixed(variable, "_", 2)[,1]) %>%
mutate(fleet = Gear,
stock = ifelse(stock_temp == 'BSAI', "R5","R4")) %>%
# subarea = ifelse(stock_temp == 'BSAI', "A1","A2")) %>%
merge(.,spmat, by.x = "stock", by.y = "stock", all.y = FALSE)
data.frame(Year = akdis$Year, Gear = akdis$Gear, akdis[grep(paste("BSAI*","GOA*",sep= "|"), names(akdis))]) %>%
select(-BSAI_PctDiscard, -GOA_PctDiscard) %>%
reshape2::melt(id = c("Year","Gear")) %>%
mutate(variable = as.character(variable)) %>%
mutate(type = stringr::str_split_fixed(variable, "_", 2)[,2],
stock_temp =  stringr::str_split_fixed(variable, "_", 2)[,1]) %>%
mutate(fleet = Gear,
stock = ifelse(stock_temp == 'BSAI', "R5","R4")) %>%
merge(.,spmat, by.x = "stock", by.y = "stock", all.y = FALSE) %>%
select(Year,fleet, type, subarea, stock, mgmt,  everything(), -Gear, -stock_temp, -variable)
ak_catdis <- data.frame(Year = akdis$Year, Gear = akdis$Gear, akdis[grep(paste("BSAI*","GOA*",sep= "|"), names(akdis))]) %>%
select(-BSAI_PctDiscard, -GOA_PctDiscard) %>%
reshape2::melt(id = c("Year","Gear")) %>%
mutate(variable = as.character(variable)) %>%
mutate(type = stringr::str_split_fixed(variable, "_", 2)[,2],
stock_temp =  stringr::str_split_fixed(variable, "_", 2)[,1]) %>%
mutate(fleet = Gear,
stock = ifelse(stock_temp == 'BSAI', "R5","R4")) %>%
merge(.,spmat, by.x = "stock", by.y = "stock", all.y = FALSE) %>%
select(Year,fleet, type, subarea, stock, mgmt,  everything(), -Gear, -stock_temp, -variable)
ak_catdis
ak_catdis %>%
filter(type == 'Catch') %>%
write.csv(., file = paste0("input/temp/ak_catch_",Sys.Date(),".csv"), row.names = FALSE)
ak_catdis %>%
filter(type == 'Discard') %>%
write.csv(., file = paste0("input/temp/ak_discard_",Sys.Date(),".csv"), row.names = FALSE)
## combine landings/discards and write to CLEAN
list.files("./input/temp/", full.names = TRUE)[grep("_catch_", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "./input/cleaned/clean_landings.csv",row.names = FALSE)
list.files("./input/temp/", full.names = TRUE)[grep("_discard_", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "./input/cleaned/clean_discard.csv",row.names = FALSE)
## Comps ----
ccbase$agedbase
## Comps ----
ccbase$age_comp_fit_table
## Comps ----
ccbase$size_comp_fit_table
## Comps ----
ccbase$sizedbase
## Comps ----
ccbase$Age_Comp_Fit_Summary
## Comps ----
ccbase$Data_File
## Comps ----
ccbase$age_data_info
## Comps ----
ccbase$comp_data_exists
## Comps ----
SS_readdat(file = "./input/raw/CC_2019_100.00/")
## Comps ----
SS_readdat(file = "./input/raw/CC_2019_100.00/dat.sso")
## Comps ----
SS_readdat(file = "./input/raw/CC_2019_100.00/data.sso")
## Comps ----
SS_readdat(file = "./input/raw/CC_2019_100.00/data.sso")
## Comps ----
SS_readdat(file = "./input/raw/CC_2019_100.00/data.ss")
## Comps ----
ccdat <- SS_readdat(file = "./input/raw/CC_2019_100.00/data.ss")
ccdat$agecomp
ccbase$FleetNames
ccdat$fleetinfo
ccdat$fleetinfo0
ccdat$fleetinfo1
ccdat$fleetinfo2
ccdat$Nfleet
ccdat$Nfleets
ccdat$fleetnames
class(ccdat$agecomp$FltSvy )
ccdat$agecomp$Fleet <-   ccdat$fleetnames[ccdat$agecomp$FltSvy ]
ccdat$agecomp$Fleet
View(ccdat$agecomp)
head(landings)
## Comps -- would be great to get these @ subarea if possible ----
ccdat <- SS_readdat(file = "./input/raw/CC_2019_100.00/data.ss")
ccdat$agecomp$fleet <-   ccdat$fleetnames[ccdat$agecomp$FltSvy ] ## rename fleets
ccdat$agecomp %>%
mutate(Year = Yr, subarea = NA, stock = NA, mgmt = "CC", type = 'age_comp' ) %>%
select(-Seas, - FltySvy, -Gender, -Part, -Ageerr, -Lbin_lo, - Lbin_hi) %>%
select(Year, fleet, type, subarea,stock, mgmt, Nsamp, everything())
ccdat$agecomp %>%
mutate(Year = Yr, subarea = NA, stock = NA, mgmt = "CC", type = 'age_comp' ) %>%
select(-Seas, - FltSvy, -Gender, -Part, -Ageerr, -Lbin_lo, - Lbin_hi) %>%
select(Year, fleet, type, subarea,stock, mgmt, Nsamp, everything())
ccdat$agecomp %>%
mutate(Year = Yr, subarea = NA, stock = NA, mgmt = "CC", type = 'age_comp' ) %>%
select(-Seas, - FltSvy, -Gender, -Part, -Ageerr, -Lbin_lo, -Yr, -Lbin_hi) %>%
select(Year, fleet, type, subarea,stock, mgmt, Nsamp, everything())
ccdat$lencomp %>%
mutate(Year = Yr, subarea = NA, stock = NA, mgmt = "CC", type = 'age_comp' ) %>%
select(-Seas, - FltSvy, -Gender, -Part, -Ageerr, -Lbin_lo, -Yr, -Lbin_hi) %>%
select(Year, fleet, type, subarea,stock, mgmt, Nsamp, everything())
ccdat$lencomp %>%
mutate(Year = Yr, subarea = NA, stock = NA, mgmt = "CC", type = 'age_comp' )
ccdat$lencomp %>%
mutate(Year = Yr, subarea = NA, stock = NA, mgmt = "CC", type = 'age_comp' ) %>%
select(-Seas, - FltSvy, -Gender, -Part, -Yr) %>%
select(Year, fleet, type, subarea,stock, mgmt, Nsamp, everything()) %>%
write.csv(., "./input/temp/CC_lencomps.csv",row.names = FALSE)
ccdat$lencomp$fleet <-   ccdat$fleetnames[ccdat$agecomp$FltSvy ] ## rename fleets
ccdat$lencomp$fleet <-   ccdat$fleetnames[ccdat$lencomp$FltSvy ] ## rename fleets
ccdat$lencomp %>%
mutate(Year = Yr, subarea = NA, stock = NA, mgmt = "CC", type = 'age_comp' ) %>%
select(-Seas, - FltSvy, -Gender, -Part, -Yr) %>%
select(Year, fleet, type, subarea,stock, mgmt, Nsamp, everything()) %>%
write.csv(., "./input/temp/CC_lencomps.csv",row.names = FALSE)
## combine comps and write to CLEAN
list.files("./input/temp/", full.names = TRUE)[grep("_lencomps", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "./input/cleaned/clean_lencomps.csv",row.names = FALSE)
list.files("./input/temp/", full.names = TRUE)[grep("_agecomps", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "./input/cleaned/clean_agecomps.csv",row.names = FALSE)
agecomps <-  read.csv("./input/cleaned/clean_agecomps.csv") ## made in dataprep.R
ccdat$lencomp %>%
mutate(Year = Yr, subarea = NA, stock = NA, mgmt = "CC", type = 'age_comp' ) %>%
select(-Seas, - FltSvy, -Gender, -Part, -Yr) %>%
select(Year, fleet, type, subarea,stock, mgmt, Nsamp, everything())
ccdat$lencomp %>%
mutate(Year = Yr, subarea = NA, stock = NA, mgmt = "CC", type = 'age_comp' ) %>%
select(-Seas, - FltSvy, -Gender, -Part, -Yr) %>%
select(Year, fleet, type, subarea,stock, mgmt, Nsamp, everything()) %>%
write.csv(., "./input/temp/CC_lencomps.csv",row.names = FALSE)
## combine comps and write to CLEAN
list.files("./input/temp/", full.names = TRUE)[grep("_lencomps", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows()
## combine comps and write to CLEAN
list.files("./input/temp/", full.names = TRUE)[grep("_lencomps", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "./input/cleaned/clean_lencomps.csv",row.names = FALSE)
lencomps <-  read.csv("./input/cleaned/clean_lencomps.csv") ## made in dataprep.R
lencomps
agecomps <-  read.csv("./input/cleaned/clean_agecomps.csv") ## made in dataprep.R
ccdat$agecomp %>%
mutate(Year = Yr, subarea = NA, stock = NA, mgmt = "CC", type = 'age_comp' ) %>%
select(-Seas, - FltSvy, -Gender, -Part, -Ageerr, -Lbin_lo, -Yr, -Lbin_hi) %>%
select(Year, fleet, type, subarea,stock, mgmt, Nsamp, everything())
ccdat$agecomp %>%
mutate(Year = Yr, subarea = NA, stock = NA, mgmt = "CC", type = 'age_comp' ) %>%
select(-Seas, - FltSvy, -Gender, -Part, -Ageerr, -Lbin_lo, -Yr, -Lbin_hi) %>%
select(Year, fleet, type, subarea,stock, mgmt, Nsamp, everything()) %>%
write.csv(., "./input/temp/CC_agecomps.csv",row.names = FALSE)
list.files("./input/temp/", full.names = TRUE)[grep("_agecomps", list.files("./input/temp/", full.names = TRUE))] %>%
lapply(.,read.csv) %>% bind_rows() %>%
write.csv(., "./input/cleaned/clean_agecomps.csv",row.names = FALSE)
read.csv("./input/cleaned/clean_agecomps.csv")
agecomps <-  read.csv("./input/cleaned/clean_agecomps.csv") ## made in dataprep.R
## Surveys - from VAST ----
read.csv("./input/raw/Indices_SS3_2020-01-23v3.csv")  %>% ## VAST stdization
distinct(Fleet, Year, Estimate_metric_tons, .keep_all = TRUE) %>% ## remove any dupes
filter(Fleet != "AllAreas") %>%
merge(.,spmat, by.x = "Fleet", by.y = "mgmt", all.y = FALSE) %>%
mutate(value = Estimate_metric_tons,
sigma = SD_log,
fleet = Fleet,
mgmt = fleet,
type = 'survey') %>%
select(Year, fleet, type, subarea, stock, mgmt, value, sigma) %>%
arrange(.,Year,fleet) %>%
write.csv(., "./input/cleaned/clean_survey.csv",row.names = FALSE)
NsurveyFleets <- length(unique(surv$fleet))
NsurveyFleets
unique(surv$fleet)
unique(landings$fleet)
xaringan:::inf_mr()
install.packages("emo")
remotes::install_github("hadley/emo")
pagedown::chrome_print('Kapur_OM_PSTAT_Apr2020.html')
install.packages('pagedown')
pagedown::chrome_print('Kapur_OM_PSTAT_Apr2020.html')
pagedown::chrome_print('./_presentations/Kapur_OM_PSTAT_Apr2020.html')
pagedown::chrome_print('./_presentations/Kapur_OM_PSTAT-Apr2020.html')
pagedown::chrome_print('./_presentations/Kapur_OM_PSTAT-Apr2020.html')
xaringan::decktape()
xaringan::decktape('./_presentations/Kapur_OM_PSTAT-Apr2020.html')
xaringan::decktape('./_presentations/Kapur_OM_PSTAT-Apr2020.html', "Kapur_OM_PSTAT-Apr2020.pdf")
remotes::install_github('rstudio/pagedown')
require(pagedown)
pagedown::chrome_print("'./_presentations/Kapur_OM_PSTAT-Apr2020.html'")
pagedown::chrome_print('./_presentations/Kapur_OM_PSTAT-Apr2020.html')
pagedown::chrome_print('./_presentations/Kapur_OM_PSTAT-Apr2020.html')
pagedown::chrome_print('./_presentations/Kapur_OM_PSTAT-Apr2020.html')
xaringan:::inf_mr()
View(solarized_light)
## load tables_for_ss3.csv
OM1File <- "C:/Users/mkapur/Dropbox/UW/sab-idx/runs/2020-01-23_nx=500_Triennial_WCGBTS_BCs_BCo_AK_DOM_LL_GOA_baseQ=AK_DOM_LL1980_2018/Table_for_SS3.csv"
vastc <- read.csv(OM1File) %>%
mutate(TYPE = 'Abundance', Source = 'VAST',
lci = Estimate_metric_tons-SD_mt,
uci = Estimate_metric_tons+SD_mt) %>%
select(Year, Fleet, Estimate_metric_tons, SD_log, TYPE, Source, uci, lci )
for(i in 1:nrow(vastc)){
vastc$Fleet2[i] <- ifelse(vastc$Fleet[i] == "California_current",
"WC",
ifelse(vastc$Fleet[i] == "British_Columbia", "BC",
"AK"))
if(vastc$Fleet[i] == 'AllAreas')   vastc$Fleet2[i] <- "ALL"
}
vastc <- vastc %>%
filter(Fleet != 'Eastern_Bering_Sea' & Fleet != 'AllAreas')
vastc$SubArea[vastc$Fleet == "British_Columbia"] <- "B1, B2, B3 (BC)"
vastc$SubArea[vastc$Fleet == "California_current"] <- "C1, C2 (CC)"
vastc$SubArea[vastc$Fleet == "Gulf_of_Alaska"] <- "A1, A2 (AK)"
vastc$SubArea[vastc$Fleet == "Aleutian_Islands"] <- "A1 (AK)"
require(ggplot2)
require(dplyr)
require(patchwork)
cbbPalette <- c("#000000", "#009E73", "#e79f00", "#9ad0f3",
"#0072B2", "#D55E00", "#CC79A7", "navy", "#F0E442" )
# cbbPalette <- c("grey22", "seagreen2", "goldenrod", "skyblue",
