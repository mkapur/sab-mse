library(ggsidekick)
dllUSE = c('shire_v4')[1]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
mappy <-
buildMap(toFix =  c("omega_0ij",
"logh_k",
"logSDR",
"b_y",
"epsilon_tau",
"logpi_acomp",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c(paste(df$fltnames_fish[df$fltnames_fish!='WC_FIX'],sep=","),
"AK_GOA_SURV", "BC_StRS", "BC_SS"))
mappy$logh_k <- factor(c(NA,NA,1,2)) ##  fix WC regs
mappy$b_y <- factor(c(1,rep(NA,59))) ## enable estimation of year 1 b_y ## consider mirroring for these guys
mappy
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll = dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repeat for stability)
## kapurm@uw.edu
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
df <- load_data_OM(nspace = 6,
move = TRUE) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
mappy <-
buildMap(toFix =  c("omega_0ij",
"logh_k",
"logSDR",
"b_y",
"epsilon_tau",
"logpi_acomp",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c(paste(df$fltnames_fish[df$fltnames_fish!='WC_FIX'],sep=","),
"AK_GOA_SURV", "BC_StRS", "BC_SS"))
# mappy$logh_k <- factor(c(NA,NA,1,2)) ##  fix WC regs
mappy$b_y <- factor(c(1,rep(NA,59))) ## enable estimation of year 1 b_y ## consider mirroring for these guys
mappy
mappy <-
buildMap(toFix =  c("omega_0ij",
# "logh_k",
# "logSDR",
"b_y",
"epsilon_tau",
"logpi_acomp",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c(paste(df$fltnames_fish[df$fltnames_fish!='WC_FIX'],sep=","),
"AK_GOA_SURV", "BC_StRS", "BC_SS"))
# mappy$logh_k <- factor(c(NA,NA,1,2)) ##  fix WC regs
mappy$b_y <- factor(c(1,rep(NA,59))) ## enable estimation of year 1 b_y ## consider mirroring for these guys
mappy
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll = dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repeat for stability)
mappy <-
buildMap(toFix =  c("omega_0ij",
# "logh_k",
# "logSDR",
"b_y",
# "epsilon_tau",
"logpi_acomp",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c(paste(df$fltnames_fish[df$fltnames_fish!='WC_FIX'],sep=","),
"AK_GOA_SURV", "BC_StRS", "BC_SS"))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll = dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repeat for stability)
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/2021-01-13 16_35_40-60y_v4_b_y0ON_estWC_FIX_srvblksON/opt.rdata")
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/2021-01-13 16_04_10-60y_v4_b_yon_estWC_FIX/opt.rdata")
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/2021-01-13 16_04_10-60y_v4_b_yon_estWC_FIX/obj.rdata")
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
by <- round(best[names(best) == 'b_y'],3);
names(by) <- paste0("b_y",1:length((best[names(best) == 'b_y'])));by
plot(by)
plot(exp(-0.5*by))
max(by)
plot(df$parms$b_y)
points(by, col = 'blue')
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.161) ## data that works with OM
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.161) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
plot(df$parms$b_y)
points(by, col = 'blue')
b_y <- matrix(NA, nyear)
Yr <- 1960:max(years)
# Parameters
yb_1 <- 1960 #_last_early_yr_nobias_adj_in_MPD
yb_2 <- 1974 #_first_yr_fullbias_adj_in_MPD
yb_3 <- 1995 #_last_yr_fullbias_adj_in_MPD
yb_4 <- max(years) #_first_recent_yr_nobias_adj_in_MPD
b_max <- b_y_max #_max_bias_adj_in_MPD
b_y[1] <- 0 ## likely estimate this
for(j in 2:length(Yr)){
if (Yr[j] <= yb_1){
b_y[j] = 0}
if(Yr[j] > yb_1 & Yr[j]< yb_2){
b_y[j] = b_max*((Yr[j]-yb_1)/(yb_2-yb_1));
}
if(Yr[j] >= yb_2 & Yr[j] <= yb_3){
b_y[j] = b_max}
if(Yr[j] > yb_3 & Yr[j] < yb_4){
# b_y[j] = b_max*(1-(yb_3-Yr[j])/(yb_4-yb_3))
b_y[j] = b_max*((Yr[j]-yb_3)/(yb_4-yb_3));
}
if(Yr[j] >= yb_4){
b_y[j] = 0
}
# if (b_y[j]<b[j-1]){
#   stop('why')
# }
}
source('C:/Users/mkapur/Dropbox/UW/sab-mse/R/functions/load_data_OM.R')
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.161) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
plot(df$parms$b_y)
points(by, col = 'blue')
by
mean(by[1:13])
require(r4ss)
source('C:/Users/mkapur/Dropbox/UW/sab-mse/R/functions/load_data_OM.R')
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.161) ## data that works with OM
plot(df$parms$b_y)
source('C:/Users/mkapur/Dropbox/UW/sab-mse/R/functions/load_data_OM.R')
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.161) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
plot(df$parms$b_y)
points(by, col = 'blue')
by
max(by[14:35])
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.109) ## data that works with OM
plot(df$parms$b_y)
points(by, col = 'blue')
plot(df$parms$b_y, pch = 19)
source('C:/Users/mkapur/Dropbox/UW/sab-mse/R/functions/load_data_OM.R')
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.109) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
plot(df$parms$b_y, pch = 19)
points(by, col = 'blue')
source('C:/Users/mkapur/Dropbox/UW/sab-mse/R/functions/load_data_OM.R')
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.109) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
plot(df$parms$b_y, pch = 19)
points(by, col = 'blue')
source('C:/Users/mkapur/Dropbox/UW/sab-mse/R/functions/load_data_OM.R')
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.109) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
plot(df$parms$b_y, pch = 19)
points(by, col = 'blue')
by
source('C:/Users/mkapur/Dropbox/UW/sab-mse/R/functions/load_data_OM.R')
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.109) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
plot(df$parms$b_y, pch = 19)
points(by, col = 'blue')
source('C:/Users/mkapur/Dropbox/UW/sab-mse/R/functions/load_data_OM.R')
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.109) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
plot(df$parms$b_y, pch = 19)
points(by, col = 'blue')
mean(by[2:13])
source('C:/Users/mkapur/Dropbox/UW/sab-mse/R/functions/load_data_OM.R')
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.109) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
plot(df$parms$b_y, pch = 19, ylim = c(0,0.5))
points(by, col = 'blue')
mappy <-
buildMap(toFix =  c("omega_0ij",
# "logh_k",
# "logSDR",
"b_y",
# "epsilon_tau",
"logpi_acomp",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c(paste(df$fltnames_fish[df$fltnames_fish!='WC_FIX'],sep=","),
"AK_GOA_SURV", "BC_StRS", "BC_SS"))
# mappy$logh_k <- factor(c(NA,NA,1,2)) ##  fix WC regs
mappy$b_y <- factor(c(1,rep(NA,59))) ## enable estimation of year 1 b_y ## consider mirroring for these guys
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll = dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
## plot bias ramp ----
plot(df$parms$b_y, pch = 19, ylim = c(0,0.5))
points(by, col = 'blue', pch = 19)
legend('topright',
col = c('black','blue'),
pch = 19,
legend = c('input','estimated'))
## plot bias ramp ----
plot(df$parms$b_y, pch = 17, ylim = c(0,0.5))
## plot bias ramp ----
plot(df$parms$b_y, pch = 10, ylim = c(0,0.5))
## plot bias ramp ----
plot(df$parms$b_y, pch = 5, ylim = c(0,0.5))
## plot bias ramp ----
plot(df$parms$b_y, pch = 3, ylim = c(0,0.5))
## plot bias ramp ----
plot(df$parms$b_y, pch = 19, ylim = c(0,0.5))
points(by, col = 'blue', pch = 3)
## plot bias ramp ----
plot(df$parms$b_y, pch = 19, ylim = c(0,0.5))
lines(by, col = 'blue', pch = 3)
## plot bias ramp ----
plot(df$parms$b_y,  type = 'l', ylim = c(0,0.5))
## plot bias ramp ----
plot(df$parms$b_y,  type = 'l', cex = 2, ylim = c(0,0.5))
## plot bias ramp ----
plot(df$parms$b_y,  type = 'l', lwd = 2, ylim = c(0,0.5))
lines(by, col = 'blue', pch = 19)
points(by, col = 'blue', pch = 19)
legend('topright',
col = c('black','blue'),
pch = c(NA,19),
lty = c(1,NA),
legend = c('input','estimated'))
legend('topright',
col = c('black','blue'),
pch = c(NA,19),
lwd = 2,
lty = c(1,NA),
legend = c('input','estimated'))
plot(df$parms$b_y,  type = 'l', lwd = 2, ylim = c(0,0.5))
points(by, col = 'blue', pch = 19)
legend('topright',
col = c('black','blue'),
pch = c(NA,19),
lwd = 2,
lty = c(1,NA),
legend = c('input','estimated'))
max(df$parms$b_y,round(best[names(best) == 'b_y'],3) )
plot(df$parms$b_y,  type = 'l', lwd = 2,
ylim = c(0,1.1*max(df$parms$b_y,round(best[names(best) == 'b_y'],3) )))
points(by, col = 'blue', pch = 19)
legend('topright',
col = c('black','blue'),
pch = c(NA,19),
lwd = 2,
lty = c(1,NA),
legend = c('input','estimated'))
plot(df$parms$b_y,  type = 'l', lwd = 2,
ylim = c(0,1.2*max(df$parms$b_y,round(best[names(best) == 'b_y'],3) )))
points(by, col = 'blue', pch = 19)
legend('topright',
col = c('black','blue'),
pch = c(NA,19),
lwd = 2,
lty = c(1,NA),
legend = c('input','estimated'))
?axis
axis(side = 1, at = seq(0,59,1), labels= seq(1960,2019,1))
plot(df$parms$b_y,  type = 'l', lwd = 2,
xlab = 'Year',
xaxt = 'n',
ylab = 'B_y',
ylim = c(0,1.2*max(df$parms$b_y,round(best[names(best) == 'b_y'],3) )))
points(by, col = 'blue', pch = 19)
axis(side = 1, at = seq(0,59,1), labels= seq(1960,2019,1))
plot(df$parms$b_y,  type = 'l', lwd = 2,
xlab = 'Year',
xaxt = 'n',
ylab = 'B_y',
ylim = c(0,1.2*max(df$parms$b_y,round(best[names(best) == 'b_y'],3) )))
points(by, col = 'blue', pch = 19)
axis(side = 1, at = seq(0,60,5), labels= seq(1960,2020,5))
length(df$parms$b_y)
plot(df$parms$b_y[1:59],  type = 'l', lwd = 2,
xlab = 'Year',
xaxt = 'n',
ylab = 'B_y',
ylim = c(0,1.2*max(df$parms$b_y,round(best[names(best) == 'b_y'],3) )))
points(by, col = 'blue', pch = 19)
axis(side = 1, at = seq(0,60,5), labels= seq(1960,2020,5))
plot(df$parms$b_y[1:59],  type = 'l', lwd = 2,
xlab = 'Year',
xaxt = 'n',
ylab = 'B_y',
ylim = c(0,1.2*max(df$parms$b_y,round(best[names(best) == 'b_y'],3) )))
points(best[names(best) == 'b_y'][1:59], col = 'blue', pch = 19)
axis(side = 1, at = seq(0,60,5), labels= seq(1960,2020,5))
legend('topright',
col = c('black','blue'),
pch = c(NA,19),
lwd = 2,
lty = c(1,NA),
legend = c('input','estimated'))
mappy$b_y
which(is.na(mappy$b_y))
plot(df$parms$b_y[1:59],  type = 'l', lwd = 2,
xlab = 'Year',
xaxt = 'n',
ylab = 'B_y',
ylim = c(0,1.2*max(df$parms$b_y,round(best[names(best) == 'b_y'],3) )))
axis(side = 1, at = seq(0,60,5), labels= seq(1960,2020,5))
## blue for estimated points
points(best[names(best) == 'b_y'][which(!is.na(mappy$b_y))], col = 'blue', pch = 19)
## grey for fixed points
points(best[names(best) == 'b_y'][which(is.na(mappy$b_y))], col = 'grey44', pch = 19)
which(is.na(mappy$b_y))
!is.na(mappy$b_y)
best[names(best) == 'b_y'][which(!is.na(mappy$b_y))]
best[names(best) == 'b_y'][which(is.na(mappy$b_y))]
legend('topright',
col = c('black','blue','grey44'),
pch = c(NA,19),
lwd = 2,
lty = c(1,NA),
legend = c('input','estimated','fixed'))
legend('topright',
col = c('black','blue','grey44'),
pch = c(NA,19,19),
lwd = 2,
lty = c(1,NA,NA),
legend = c('input','estimated','fixed'))
plot(df$parms$b_y[1:59],  type = 'l', lwd = 2,
xlab = 'Year',
xaxt = 'n',
ylab = 'B_y',
ylim = c(0,1.2*max(df$parms$b_y,round(best[names(best) == 'b_y'],3) )))
axis(side = 1, at = seq(0,60,5), labels= seq(1960,2020,5))
## blue for estimated points
points(best[names(best) == 'b_y'][which(!is.na(mappy$b_y))], col = 'blue', pch = 19)
## grey for fixed points
points(best[names(best) == 'b_y'][which(is.na(mappy$b_y))], col = 'grey44', pch = 19)
legend('topright',
col = c('black','blue','grey44'),
pch = c(NA,19,19),
lwd = 2,
lty = c(1,NA,NA),
legend = c('input','estimated','fixed'))
mappy <-
buildMap(toFix =  c("omega_0ij",
# "logh_k",
# "logSDR",
"b_y",
# "epsilon_tau",
"logpi_acomp",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c(paste(df$fltnames_fish[df$fltnames_fish!='WC_FIX'],sep=","),
"AK_GOA_SURV", "BC_StRS", "BC_SS"))
# mappy$logh_k <- factor(c(NA,NA,1,2)) ##  fix WC regs
mappy$b_y <- factor(c(1,rep(NA,59))) ## enable estimation of year 1 b_y ## consider mirroring for these guys
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll = dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repeat for stability)
