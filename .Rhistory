# Catch_yf_est(y,fish_flt)= Catch_yf_est[y,a,fish_flt] + Catch_yaf_est(y,a,fish_flt); ## sum over the current catch at age
# CatchN(y,fish_flt) <- CatchN_yaf[y,a,] CatchN_yaf(y,a,fish_flt);
} ## end fishery fleets
Z_a_TEMP2
Adj
sum(N_yai_beg[y,,i])
catch_yf_obs[y, fish_flt+1]
catch_yf_obs
## Obs
catch_yf_obs <- df$Catch2/100
Catch_yf_est <- array(0, dim = c(tEnd,nage,nfleets_fish))
CatchN <- matrix(0, nrow = tEnd, ncol = nfleets_fish)
niter = 7 ## F iterations
for(fish_flt in 1:nfleets_fish){
F1_yf <- F2_yf <- array(0, dim = c(tEnd, nfleets_fish, niter+1)) ## storage for intermediate guesses
Freal <- matrix(0, nrow = tEnd, ncol = nfleets_fish) ## storage for final guess
catch_afk_TEMP <- array(0, dim = c(nage, nfleets_fish, niter+1)) ## storage for intermediate guesses
Adj <- NULL
## make an initial guess for Ff using obs catch - need to update selex whihc is 1.0 now
for(i in 1:nspace){
## eq 19
F1_yf[y, fish_flt, 1] <-     F1_yf[y, fish_flt, 1] + catch_yf_obs[y, fish_flt+1]/
(phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 + catch_yf_obs[y, fish_flt+1])
}
## iterative tuning
for(k in 2:(niter+1)){
## modify the guess Eq 20
term0 = 1/(1+exp(v2*( F1_yf[y,fish_flt,k-1] - v1)));
term1 = F1_yf[y,fish_flt,k-1]*term0;
term2 = v1*(1-term0);
F1_yf[y,fish_flt,k] = -log(1-(term1+term2))
# Predicted catches @ F Eq 21; need to add SELEX
for(i in 1:nspace){
for(a in 1:nage){
Z_a_TEMP <- F1_yf[y,fish_flt,k] + M[a]
catch_afk_TEMP[a,fish_flt,k] <-     catch_afk_TEMP[a,fish_flt,k] +
(F1_yf[y,fish_flt,k]/(Z_a_TEMP))*(1-exp(-Z_a_TEMP))*
phi_if_fish[fish_flt, i]*
N_yai_beg[y,a,i]*1.0*
wage_catch[a,i]
} ## end ages
} ## end space
## Calc Adj Eq 22
Adj[k] <- catch_yf_obs[y, fish_flt+1]/catch_afk_TEMP[a,fish_flt,k]
## Get new Z given ADJ - need to add discard and selex here
Z_a_TEMP2 <-  Adj[k]*F1_yf[y,fish_flt,k] + M[a]
## Second Guess for F (EQ 24)
denom = 0
for(i in 1:nspace){
denom <- denom + phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 *(1-exp(-Z_a_TEMP2)) * (F1_yf[y,fish_flt,k]/(Z_a_TEMP2))
}
F2_yf[y, fish_flt, k] <- F2_yf[y, fish_flt, k-1] + catch_yf_obs[y, fish_flt+1]/denom
## Modify the guess again Eq 25
term0 = 1/(1+exp(v2*( F2_yf[y,fish_flt,k-1] - v1)));
term1 = F2_yf[y,fish_flt,k-1]*term0;
term2 = v1*(1-term0);
F2_yf[y,fish_flt,k] = -log(1-(term1+term2))
# cat(F2_yf[y,fish_flt,k],"\n")
} ## end hybrid F iterations
Freal[y, fish_flt] <- F2_yf[y,fish_flt,niter] ## final as Freal
cat( Freal[y, fish_flt],fish_flt,"\n")
# Catch_yaf_est(y,a,fish_flt) = (Freal(a)/(Z(a)))*(1-exp(-Z(a)))*
#   phi_if_fish(fish_flt, i)* N_yai_beg(y,a,i)*wage_catch(a,y); ## do this by fleet with phi
# CatchN_yaf(y,a,fish_flt) = (Freal(a)/(Z(a)))*(1-exp(-Z(a)))* phi_if_fish(fish_flt, i)* N_yai_beg(y,a,i);## Calculate the catch in kg
# Catch_yf_est(y,fish_flt)= Catch_yf_est[y,a,fish_flt] + Catch_yaf_est(y,a,fish_flt); ## sum over the current catch at age
# CatchN(y,fish_flt) <- CatchN_yaf[y,a,] CatchN_yaf(y,a,fish_flt);
} ## end fishery fleets
catch_yf_obs
Adj[k]
Adj
catch_afk_TEMP
for(fish_flt in 1:nfleets_fish){
F1_yf <- F2_yf <- array(0, dim = c(tEnd, nfleets_fish, niter+1)) ## storage for intermediate guesses
Freal <- matrix(0, nrow = tEnd, ncol = nfleets_fish) ## storage for final guess
catch_afk_TEMP <- array(0, dim = c(nage, nfleets_fish, niter+1)) ## storage for intermediate guesses
Adj <- NULL
## make an initial guess for Ff using obs catch - need to update selex whihc is 1.0 now
for(i in 1:nspace){
## eq 19
F1_yf[y, fish_flt, 1] <-     F1_yf[y, fish_flt, 1] + catch_yf_obs[y, fish_flt+1]/
(phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 + catch_yf_obs[y, fish_flt+1])
}
## iterative tuning
for(k in 2:(niter+1)){
## modify the guess Eq 20
term0 = 1/(1+exp(v2*( F1_yf[y,fish_flt,k-1] - v1)));
term1 = F1_yf[y,fish_flt,k-1]*term0;
term2 = v1*(1-term0);
F1_yf[y,fish_flt,k] = -log(1-(term1+term2))
# Predicted catches @ F Eq 21; need to add SELEX
for(i in 1:nspace){
for(a in 1:nage){
Z_a_TEMP <- F1_yf[y,fish_flt,k] + M[a]
catch_afk_TEMP[a,fish_flt,k] <-     catch_afk_TEMP[a,fish_flt,k] +
(F1_yf[y,fish_flt,k]/(Z_a_TEMP))*(1-exp(-Z_a_TEMP))*
phi_if_fish[fish_flt, i]*
N_yai_beg[y,a,i]*1.0*
wage_catch[a,i]
} ## end ages
} ## end space
## Calc Adj Eq 22
Adj[k] <- catch_yf_obs[y, fish_flt+1]/catch_afk_TEMP[a,fish_flt,k]
## Get new Z given ADJ - need to add discard and selex here
Z_a_TEMP2 <-  Adj[k]*F1_yf[y,fish_flt,k] + M[a]
## Second Guess for F (EQ 24)
denom = 0
for(i in 1:nspace){
denom <- denom + phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 *(1-exp(-Z_a_TEMP2)) * (F1_yf[y,fish_flt,k]/(Z_a_TEMP2))
}
F2_yf[y, fish_flt, k] <- F2_yf[y, fish_flt, k-1] + catch_yf_obs[y, fish_flt+1]/denom
## Modify the guess again Eq 25
term0 = 1/(1+exp(v2*( F2_yf[y,fish_flt,k-1] - v1)));
term1 = F2_yf[y,fish_flt,k-1]*term0;
term2 = v1*(1-term0);
F2_yf[y,fish_flt,k] = -log(1-(term1+term2))
# cat(F2_yf[y,fish_flt,k],"\n")
} ## end hybrid F iterations
Freal[y, fish_flt] <- F2_yf[y,fish_flt,niter] ## final as Freal
cat( Freal[y, fish_flt],fish_flt,"\n")
# Catch_yaf_est(y,a,fish_flt) = (Freal(a)/(Z(a)))*(1-exp(-Z(a)))*
#   phi_if_fish(fish_flt, i)* N_yai_beg(y,a,i)*wage_catch(a,y); ## do this by fleet with phi
# CatchN_yaf(y,a,fish_flt) = (Freal(a)/(Z(a)))*(1-exp(-Z(a)))* phi_if_fish(fish_flt, i)* N_yai_beg(y,a,i);## Calculate the catch in kg
# Catch_yf_est(y,fish_flt)= Catch_yf_est[y,a,fish_flt] + Catch_yaf_est(y,a,fish_flt); ## sum over the current catch at age
# CatchN(y,fish_flt) <- CatchN_yaf[y,a,] CatchN_yaf(y,a,fish_flt);
} ## end fishery fleets
catch_afk_TEMP
a = 1
fish_flt = 1
k = 1
k = 2
# Predicted catches @ F Eq 21; need to add SELEX
for(i in 1:nspace){
for(a in 1:nage){
Z_a_TEMP <- F1_yf[y,fish_flt,k] + M[a]
catch_afk_TEMP[a,fish_flt,k] <-     catch_afk_TEMP[a,fish_flt,k] +
(F1_yf[y,fish_flt,k]/(Z_a_TEMP))*(1-exp(-Z_a_TEMP))*
phi_if_fish[fish_flt, i]*
N_yai_beg[y,a,i]*1.0*
wage_catch[a,i]
} ## end ages
} ## end space
catch_afk_TEMP
catch_afk_TEMP <- array(0, dim = c(nage, nfleets_fish, niter+1)) ## storage for intermediate guesses
catch_afk_TEMP <- array(0, dim = c(nage, nfleets_fish, niter+1)) ## storage for intermediate guesses
for(fish_flt in 1:nfleets_fish){
F1_yf <- F2_yf <- array(0, dim = c(tEnd, nfleets_fish, niter+1)) ## storage for intermediate guesses
Freal <- matrix(0, nrow = tEnd, ncol = nfleets_fish) ## storage for final guess
Adj <- NULL
## make an initial guess for Ff using obs catch - need to update selex whihc is 1.0 now
for(i in 1:nspace){
## eq 19
F1_yf[y, fish_flt, 1] <-     F1_yf[y, fish_flt, 1] + catch_yf_obs[y, fish_flt+1]/
(phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 + catch_yf_obs[y, fish_flt+1])
}
## iterative tuning
for(k in 2:(niter+1)){
## modify the guess Eq 20
term0 = 1/(1+exp(v2*( F1_yf[y,fish_flt,k-1] - v1)));
term1 = F1_yf[y,fish_flt,k-1]*term0;
term2 = v1*(1-term0);
F1_yf[y,fish_flt,k] = -log(1-(term1+term2))
# Predicted catches @ F Eq 21; need to add SELEX
for(i in 1:nspace){
for(a in 1:nage){
Z_a_TEMP <- F1_yf[y,fish_flt,k] + M[a]
catch_afk_TEMP[a,fish_flt,k] <-     catch_afk_TEMP[a,fish_flt,k] +
(F1_yf[y,fish_flt,k]/(Z_a_TEMP))*(1-exp(-Z_a_TEMP))*
phi_if_fish[fish_flt, i]*
N_yai_beg[y,a,i]*1.0*
wage_catch[a,i]
} ## end ages
} ## end space
## Calc Adj Eq 22
Adj[k] <- catch_yf_obs[y, fish_flt+1]/catch_afk_TEMP[a,fish_flt,k]
## Get new Z given ADJ - need to add discard and selex here
Z_a_TEMP2 <-  Adj[k]*F1_yf[y,fish_flt,k] + M[a]
## Second Guess for F (EQ 24)
denom = 0
for(i in 1:nspace){
denom <- denom + phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 *(1-exp(-Z_a_TEMP2)) * (F1_yf[y,fish_flt,k]/(Z_a_TEMP2))
}
F2_yf[y, fish_flt, k] <- F2_yf[y, fish_flt, k-1] + catch_yf_obs[y, fish_flt+1]/denom
## Modify the guess again Eq 25
term0 = 1/(1+exp(v2*( F2_yf[y,fish_flt,k-1] - v1)));
term1 = F2_yf[y,fish_flt,k-1]*term0;
term2 = v1*(1-term0);
F2_yf[y,fish_flt,k] = -log(1-(term1+term2))
# cat(F2_yf[y,fish_flt,k],"\n")
} ## end hybrid F iterations
Freal[y, fish_flt] <- F2_yf[y,fish_flt,niter] ## final as Freal
cat( Freal[y, fish_flt],fish_flt,"\n")
# Catch_yaf_est(y,a,fish_flt) = (Freal(a)/(Z(a)))*(1-exp(-Z(a)))*
#   phi_if_fish(fish_flt, i)* N_yai_beg(y,a,i)*wage_catch(a,y); ## do this by fleet with phi
# CatchN_yaf(y,a,fish_flt) = (Freal(a)/(Z(a)))*(1-exp(-Z(a)))* phi_if_fish(fish_flt, i)* N_yai_beg(y,a,i);## Calculate the catch in kg
# Catch_yf_est(y,fish_flt)= Catch_yf_est[y,a,fish_flt] + Catch_yaf_est(y,a,fish_flt); ## sum over the current catch at age
# CatchN(y,fish_flt) <- CatchN_yaf[y,a,] CatchN_yaf(y,a,fish_flt);
} ## end fishery fleets
catch_afk_TEMP
Catch_yf_est <- array(0, dim = c(tEnd,nage,nfleets_fish))
CatchN <- matrix(0, nrow = tEnd, ncol = nfleets_fish)
catch_afk_TEMP <- array(0, dim = c(nage, nfleets_fish, niter+1)) ## storage for intermediate guesses
niter = 7 ## F iterations
F1_yf <- F2_yf <- array(0, dim = c(tEnd, nfleets_fish, niter+1)) ## storage for intermediate guesses
Freal <- matrix(0, nrow = tEnd, ncol = nfleets_fish) ## storage for final guess
Adj <- NULL
for(fish_flt in 1:nfleets_fish){
## make an initial guess for Ff using obs catch - need to update selex whihc is 1.0 now
for(i in 1:nspace){
## eq 19
F1_yf[y, fish_flt, 1] <-     F1_yf[y, fish_flt, 1] + catch_yf_obs[y, fish_flt+1]/
(phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 + catch_yf_obs[y, fish_flt+1])
}
## iterative tuning
for(k in 2:(niter+1)){
## modify the guess Eq 20
term0 = 1/(1+exp(v2*( F1_yf[y,fish_flt,k-1] - v1)));
term1 = F1_yf[y,fish_flt,k-1]*term0;
term2 = v1*(1-term0);
F1_yf[y,fish_flt,k] = -log(1-(term1+term2))
# Predicted catches @ F Eq 21; need to add SELEX
for(i in 1:nspace){
for(a in 1:nage){
Z_a_TEMP <- F1_yf[y,fish_flt,k] + M[a]
catch_afk_TEMP[a,fish_flt,k] <-     catch_afk_TEMP[a,fish_flt,k] +
(F1_yf[y,fish_flt,k]/(Z_a_TEMP))*(1-exp(-Z_a_TEMP))*
phi_if_fish[fish_flt, i]*
N_yai_beg[y,a,i]*1.0*
wage_catch[a,i]
} ## end ages
} ## end space
## Calc Adj Eq 22
Adj[k] <- catch_yf_obs[y, fish_flt+1]/catch_afk_TEMP[a,fish_flt,k]
## Get new Z given ADJ - need to add discard and selex here
Z_a_TEMP2 <-  Adj[k]*F1_yf[y,fish_flt,k] + M[a]
## Second Guess for F (EQ 24)
denom = 0
for(i in 1:nspace){
denom <- denom + phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 *(1-exp(-Z_a_TEMP2)) * (F1_yf[y,fish_flt,k]/(Z_a_TEMP2))
}
F2_yf[y, fish_flt, k] <- F2_yf[y, fish_flt, k-1] + catch_yf_obs[y, fish_flt+1]/denom
## Modify the guess again Eq 25
term0 = 1/(1+exp(v2*( F2_yf[y,fish_flt,k-1] - v1)));
term1 = F2_yf[y,fish_flt,k-1]*term0;
term2 = v1*(1-term0);
F2_yf[y,fish_flt,k] = -log(1-(term1+term2))
# cat(F2_yf[y,fish_flt,k],"\n")
} ## end hybrid F iterations
Freal[y, fish_flt] <- F2_yf[y,fish_flt,niter] ## final as Freal
cat( Freal[y, fish_flt],fish_flt,"\n")
# Catch_yaf_est(y,a,fish_flt) = (Freal(a)/(Z(a)))*(1-exp(-Z(a)))*
#   phi_if_fish(fish_flt, i)* N_yai_beg(y,a,i)*wage_catch(a,y); ## do this by fleet with phi
# CatchN_yaf(y,a,fish_flt) = (Freal(a)/(Z(a)))*(1-exp(-Z(a)))* phi_if_fish(fish_flt, i)* N_yai_beg(y,a,i);## Calculate the catch in kg
# Catch_yf_est(y,fish_flt)= Catch_yf_est[y,a,fish_flt] + Catch_yaf_est(y,a,fish_flt); ## sum over the current catch at age
# CatchN(y,fish_flt) <- CatchN_yaf[y,a,] CatchN_yaf(y,a,fish_flt);
} ## end fishery fleets
Freal
F2_yf
F2_yf[y,fish_flt,k]
Z_a_TEMP2
F1_yf[y,fish_flt,k]
F1_yf[y, fish_flt, 1]
catch_yf_obs[y, fish_flt+1]
catch_yf_obs[y, fish_flt+1]/
(phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 + catch_yf_obs[y, fish_flt+1])
F1_yf[y, fish_flt, 1] + catch_yf_obs[y, fish_flt+1]/
(phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 + catch_yf_obs[y, fish_flt+1])
catch_yf_obs[y, fish_flt+1]/
(phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 + catch_yf_obs[y, fish_flt+1])
denom = 0
for(i in 1:nspace){
denom <- denom +   (phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 + catch_yf_obs[y, fish_flt+1])
}
F1_yf[y, fish_flt, 1] <-     F1_yf[y, fish_flt, 1] + + catch_yf_obs[y, fish_flt+1]/denom
F1_yf[y, fish_flt, 1]
for(fish_flt in 1:nfleets_fish){
## make an initial guess for Ff using obs catch - need to update selex whihc is 1.0 now
# for(i in 1:nspace){
#   ## eq 19
#   F1_yf[y, fish_flt, 1] <-     F1_yf[y, fish_flt, 1] + catch_yf_obs[y, fish_flt+1]/
#     (phi_if_fish[fish_flt, i] *
#        sum(N_yai_beg[y,,i])*
#        sum(wage_catch[,y]) * 1.0 + catch_yf_obs[y, fish_flt+1])
# }
#
denom = 0
for(i in 1:nspace){
denom <- denom +   (phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 + catch_yf_obs[y, fish_flt+1])
}
F1_yf[y, fish_flt, 1] <-     F1_yf[y, fish_flt, 1] + + catch_yf_obs[y, fish_flt+1]/denom
## iterative tuning
for(k in 2:(niter+1)){
## modify the guess Eq 20
term0 = 1/(1+exp(v2*( F1_yf[y,fish_flt,k-1] - v1)));
term1 = F1_yf[y,fish_flt,k-1]*term0;
term2 = v1*(1-term0);
F1_yf[y,fish_flt,k] = -log(1-(term1+term2))
# Predicted catches @ F Eq 21; need to add SELEX
for(i in 1:nspace){
for(a in 1:nage){
Z_a_TEMP <- F1_yf[y,fish_flt,k] + M[a]
catch_afk_TEMP[a,fish_flt,k] <-     catch_afk_TEMP[a,fish_flt,k] +
(F1_yf[y,fish_flt,k]/(Z_a_TEMP))*(1-exp(-Z_a_TEMP))*
phi_if_fish[fish_flt, i]*
N_yai_beg[y,a,i]*1.0*
wage_catch[a,i]
} ## end ages
} ## end space
## Calc Adj Eq 22
Adj[k] <- catch_yf_obs[y, fish_flt+1]/catch_afk_TEMP[a,fish_flt,k]
## Get new Z given ADJ - need to add discard and selex here
Z_a_TEMP2 <-  Adj[k]*F1_yf[y,fish_flt,k] + M[a]
## Second Guess for F (EQ 24)
denom = 0
for(i in 1:nspace){
denom <- denom + phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 *(1-exp(-Z_a_TEMP2)) * (F1_yf[y,fish_flt,k]/(Z_a_TEMP2))
}
F2_yf[y, fish_flt, k] <- F2_yf[y, fish_flt, k-1] + catch_yf_obs[y, fish_flt+1]/denom
## Modify the guess again Eq 25
term0 = 1/(1+exp(v2*( F2_yf[y,fish_flt,k-1] - v1)));
term1 = F2_yf[y,fish_flt,k-1]*term0;
term2 = v1*(1-term0);
F2_yf[y,fish_flt,k] = -log(1-(term1+term2))
# cat(F2_yf[y,fish_flt,k],"\n")
} ## end hybrid F iterations
Freal[y, fish_flt] <- F2_yf[y,fish_flt,niter] ## final as Freal
cat( Freal[y, fish_flt],fish_flt,"\n")
# Catch_yaf_est(y,a,fish_flt) = (Freal(a)/(Z(a)))*(1-exp(-Z(a)))*
#   phi_if_fish(fish_flt, i)* N_yai_beg(y,a,i)*wage_catch(a,y); ## do this by fleet with phi
# CatchN_yaf(y,a,fish_flt) = (Freal(a)/(Z(a)))*(1-exp(-Z(a)))* phi_if_fish(fish_flt, i)* N_yai_beg(y,a,i);## Calculate the catch in kg
# Catch_yf_est(y,fish_flt)= Catch_yf_est[y,a,fish_flt] + Catch_yaf_est(y,a,fish_flt); ## sum over the current catch at age
# CatchN(y,fish_flt) <- CatchN_yaf[y,a,] CatchN_yaf(y,a,fish_flt);
} ## end fishery fleets
Catch_yf_est <- array(0, dim = c(tEnd,nage,nfleets_fish))
CatchN <- matrix(0, nrow = tEnd, ncol = nfleets_fish)
catch_afk_TEMP <- array(0, dim = c(nage, nfleets_fish, niter+1)) ## storage for intermediate guesses
niter = 7 ## F iterations
F1_yf <- F2_yf <- array(0, dim = c(tEnd, nfleets_fish, niter+1)) ## storage for intermediate guesses
Freal <- matrix(0, nrow = tEnd, ncol = nfleets_fish) ## storage for final guess
Adj <- NULL
fish_flt
fish_flt=1
denom = 0
for(i in 1:nspace){
denom <- denom +   (phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 + catch_yf_obs[y, fish_flt+1])
}
F1_yf[y, fish_flt, 1] <-     F1_yf[y, fish_flt, 1] + + catch_yf_obs[y, fish_flt+1]/denom
k = 2
term0 = 1/(1+exp(v2*( F1_yf[y,fish_flt,k-1] - v1)));
term1 = F1_yf[y,fish_flt,k-1]*term0;
term2 = v1*(1-term0);
F1_yf[y,fish_flt,k] = -log(1-(term1+term2))
F1_yf[y,fish_flt,k]
F1_yf[y,fish_flt,k] + M[a]
Z_a_TEMP <- F1_yf[y,fish_flt,k] + M[a]
catch_afk_TEMP[a,fish_flt,k] +
(F1_yf[y,fish_flt,k]/(Z_a_TEMP))*(1-exp(-Z_a_TEMP))*
phi_if_fish[fish_flt, i]*
N_yai_beg[y,a,i]*1.0*
wage_catch[a,i]
catch_afk_TEMP[a,fish_flt,k]
F1_yf[y,fish_flt,k]/(Z_a_TEMP)
(1-exp(-Z_a_TEMP))*
phi_if_fish[fish_flt, i]*
N_yai_beg[y,a,i]*1.0*
wage_catch[a,i]
(F1_yf[y,fish_flt,k]/(Z_a_TEMP))
(F1_yf[y,fish_flt,k]/(Z_a_TEMP))*(1-exp(-Z_a_TEMP))*
phi_if_fish[fish_flt, i]*
N_yai_beg[y,a,i]*1.0*
wage_catch[a,i]
catch_afk_TEMP[a,fish_flt,k] +
(F1_yf[y,fish_flt,k]/(Z_a_TEMP))*(1-exp(-Z_a_TEMP))*
phi_if_fish[fish_flt, i]*
N_yai_beg[y,a,i]*1.0*
wage_catch[a,i]
# Predicted catches @ F Eq 21; need to add SELEX
for(i in 1:nspace){
for(a in 1:nage){
Z_a_TEMP <- F1_yf[y,fish_flt,k] + M[a]
catch_afk_TEMP[a,fish_flt,k] <-     catch_afk_TEMP[a,fish_flt,k] +
(F1_yf[y,fish_flt,k]/(Z_a_TEMP))*(1-exp(-Z_a_TEMP))*
phi_if_fish[fish_flt, i]*
N_yai_beg[y,a,i]*1.0*
wage_catch[a,i]
} ## end ages
} ## end space
catch_afk_TEMP
catch_afk_TEMP[a,fish_flt,k]
catch_yf_obs[y, fish_flt+1]/catch_afk_TEMP[a,fish_flt,k]
F1_yf[y,fish_flt,k]
Adj[k]*F1_yf[y,fish_flt,k] + M[a]
M[a]
# Predicted catches @ F Eq 21; need to add SELEX
for(i in 1:nspace){
for(a in 1:nage){
Z_a_TEMP[a] <- F1_yf[y,fish_flt,k] + M[a]
catch_afk_TEMP[a,fish_flt,k] <-     catch_afk_TEMP[a,fish_flt,k] +
(F1_yf[y,fish_flt,k]/(Z_a_TEMP[a]))*(1-exp(-Z_a_TEMP[a]))*
phi_if_fish[fish_flt, i]*
N_yai_beg[y,a,i]*1.0*
wage_catch[a,i]
} ## end ages
} ## end space
## Calc Adj Eq 22
Adj[k] <- catch_yf_obs[y, fish_flt+1]/catch_afk_TEMP[a,fish_flt,k]
## Calc Adj Eq 22
Adj[k] <- catch_yf_obs[y, fish_flt+1]/sum(catch_afk_TEMP[,fish_flt,k])
Adj[k]
Z_a_TEMP2[a] <-  Adj[k]*F1_yf[y,fish_flt,k] +  M[a]
## Get new Z given ADJ - need to add discard and selex here
for(a in 1:nage) Z_a_TEMP2[a] <-  Adj[k]*F1_yf[y,fish_flt,k] +  M[a]
Z_a_TEMP2
denom + phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 *(1-exp(-Z_a_TEMP2[,])) * (F1_yf[y,fish_flt,k]/(Z_a_TEMP2[,]))
## Second Guess for F (EQ 24)
denom = 0
for(i in 1:nspace){
for(a in 1:nage){
denom <- denom + phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,a,i])*
sum(wage_catch[a,y]) * 1.0 *(1-exp(-Z_a_TEMP2[a])) * (F1_yf[y,fish_flt,k]/(Z_a_TEMP2[a]))
}
}
denom
F2_yf[y, fish_flt, k-1] + catch_yf_obs[y, fish_flt+1]/denom
for(fish_flt in 1:nfleets_fish){
## make an initial guess for Ff using obs catch - need to update selex whihc is 1.0 now
denom = 0
for(i in 1:nspace){
denom <- denom +   (phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,,i])*
sum(wage_catch[,y]) * 1.0 + catch_yf_obs[y, fish_flt+1])
}
F1_yf[y, fish_flt, 1] <-     F1_yf[y, fish_flt, 1] + + catch_yf_obs[y, fish_flt+1]/denom
## iterative tuning
for(k in 2:(niter+1)){
## modify the guess Eq 20
term0 = 1/(1+exp(v2*( F1_yf[y,fish_flt,k-1] - v1)));
term1 = F1_yf[y,fish_flt,k-1]*term0;
term2 = v1*(1-term0);
F1_yf[y,fish_flt,k] = -log(1-(term1+term2))
# Predicted catches @ F Eq 21; need to add SELEX
for(i in 1:nspace){
for(a in 1:nage){
Z_a_TEMP[a] <- F1_yf[y,fish_flt,k] + M[a]
catch_afk_TEMP[a,fish_flt,k] <-     catch_afk_TEMP[a,fish_flt,k] +
(F1_yf[y,fish_flt,k]/(Z_a_TEMP[a]))*(1-exp(-Z_a_TEMP[a]))*
phi_if_fish[fish_flt, i]*
N_yai_beg[y,a,i]*1.0*
wage_catch[a,i]
} ## end ages
} ## end space
## Calc Adj Eq 22
Adj[k] <- catch_yf_obs[y, fish_flt+1]/sum(catch_afk_TEMP[,fish_flt,k])
## Get new Z given ADJ - need to add discard and selex here
for(a in 1:nage) Z_a_TEMP2[a] <-  Adj[k]*F1_yf[y,fish_flt,k] +  M[a]
## Second Guess for F (EQ 24)
denom = 0
for(i in 1:nspace){
for(a in 1:nage){
denom <- denom + phi_if_fish[fish_flt, i] *
sum(N_yai_beg[y,a,i])*
sum(wage_catch[a,y]) * 1.0 *(1-exp(-Z_a_TEMP2[a])) * (F1_yf[y,fish_flt,k]/(Z_a_TEMP2[a]))
}
}
F2_yf[y, fish_flt, k] <- F2_yf[y, fish_flt, k-1] + catch_yf_obs[y, fish_flt+1]/denom
## Modify the guess again Eq 25
term0 = 1/(1+exp(v2*( F2_yf[y,fish_flt,k-1] - v1)));
term1 = F2_yf[y,fish_flt,k-1]*term0;
term2 = v1*(1-term0);
F2_yf[y,fish_flt,k] = -log(1-(term1+term2))
# cat(F2_yf[y,fish_flt,k],"\n")
} ## end hybrid F iterations
Freal[y, fish_flt] <- F2_yf[y,fish_flt,niter] ## final as Freal
cat( Freal[y, fish_flt],fish_flt,"\n")
# Catch_yaf_est(y,a,fish_flt) = (Freal(a)/(Z(a)))*(1-exp(-Z(a)))*
#   phi_if_fish(fish_flt, i)* N_yai_beg(y,a,i)*wage_catch(a,y); ## do this by fleet with phi
# CatchN_yaf(y,a,fish_flt) = (Freal(a)/(Z(a)))*(1-exp(-Z(a)))* phi_if_fish(fish_flt, i)* N_yai_beg(y,a,i);## Calculate the catch in kg
# Catch_yf_est(y,fish_flt)= Catch_yf_est[y,a,fish_flt] + Catch_yaf_est(y,a,fish_flt); ## sum over the current catch at age
# CatchN(y,fish_flt) <- CatchN_yaf[y,a,] CatchN_yaf(y,a,fish_flt);
} ## end fishery fleets
