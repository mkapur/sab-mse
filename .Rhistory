# "_M=", paste(df$parms$mort_k,collapse="-"),
"_baseQ=WCGBTS",
"_fshfixed_wcbcearlyfixed_withbounds")
dllUSE = c("shire_v4L",'shire_v4')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v4L",'shire_v4')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-
df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <-  df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
df$parms$logq_f <- rep(log(1e-5),length(df$parms$logq_f))
df$acomp_yafs_obs
df$fltnames_acomp
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-
df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <-  df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
df$parms$logq_f <- rep(log(1e-5),length(df$parms$logq_f))
load(here("output","2020-12-17-59y_v4L_baseQ=WCGBTS_fshfixed_wcbcearlyfixed_withbounds/opt.rdata"))
df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
dimnames = dimnames(df$parms$log_srv_slx_pars))
df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
rm(opt)
load(here("output","2020-12-17-59y_v4L_baseQ=WCGBTS_fshfixed_wcbcearlyfixed_withbounds/opt.rdata"))
df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
dimnames = dimnames(df$parms$log_srv_slx_pars))
rm(opt)
df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
load(here("output","2020-12-17-59y_v4L_baseQ=WCGBTS_fshfixed_wcbcearlyfixed_withbounds/opt.rdata"))
rm(opt)
load(here("output","2020-12-17-59y_v4L_baseQ=WCGBTS_fshfixed_wcbcearlyfixed_withbounds/opt.rdata"))
df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
dimnames = dimnames(df$parms$log_srv_slx_pars))
df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
rm(opt)
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh", "WC_VAST","BC_EARLY"))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
head(rep1$Length_yais_beg)
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v4L",'shire_v4')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-
df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <-  df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
df$parms$logq_f <- rep(log(1e-5),length(df$parms$logq_f))
load(here("output","2020-12-17-59y_v4L_baseQ=WCGBTS_fshfixed_wcbcearlyfixed_withbounds/opt.rdata"))
df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
dimnames = dimnames(df$parms$log_srv_slx_pars))
df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
rm(opt)
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh", "WC_VAST","BC_EARLY"))
# array(mappy$log_fsh_slx_pars, dim = c(df$nfleets_fish,2,1,2), dimnames = dimnames(df$parms$log_fsh_slx_pars))
# array(mappy$log_srv_slx_pars, dim = c(df$nfleets_surv+df$nfleets_acomp-4,2,1,2),
#       dimnames = dimnames(df$parms$log_srv_slx_pars))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
head(rep1$Length_yais_beg)
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v4L",'shire_v4')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v4L",'shire_v4')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-
df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <-  df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
df$parms$logq_f <- rep(log(1e-5),length(df$parms$logq_f))
load(here("output","2020-12-17-59y_v4L_baseQ=WCGBTS_fshfixed_wcbcearlyfixed_withbounds/opt.rdata"))
df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
dimnames = dimnames(df$parms$log_srv_slx_pars))
df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
rm(opt)
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh", "WC_VAST","BC_EARLY"))
# array(mappy$log_fsh_slx_pars, dim = c(df$nfleets_fish,2,1,2), dimnames = dimnames(df$parms$log_fsh_slx_pars))
# array(mappy$log_srv_slx_pars, dim = c(df$nfleets_surv+df$nfleets_acomp-4,2,1,2),
#       dimnames = dimnames(df$parms$log_srv_slx_pars))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
rep1$surv_yf_pred
rep1$N_yais_beg
df$parms
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v4L",'shire_v4')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-
df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <-  df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
df$parms$logq_f <- rep(log(1e-5),length(df$parms$logq_f))
# load(here("output","2020-12-17-59y_v4L_baseQ=WCGBTS_fshfixed_wcbcearlyfixed_withbounds/opt.rdata"))
# df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
# dimnames = dimnames(df$parms$log_srv_slx_pars))
# df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
#                                    dimnames = dimnames(df$parms$log_fsh_slx_pars))
# rm(opt)
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh", "WC_VAST","BC_EARLY"))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
head(rep1$Length_yais_beg)
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v4L",'shire_v4')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-
df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <-  df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
df$parms$logq_f <- rep(log(1e-5),length(df$parms$logq_f))
# load(here("output","2020-12-17-59y_v4L_baseQ=WCGBTS_fshfixed_wcbcearlyfixed_withbounds/opt.rdata"))
# df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
# dimnames = dimnames(df$parms$log_srv_slx_pars))
# df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
#                                    dimnames = dimnames(df$parms$log_fsh_slx_pars))
# rm(opt)
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh", "WC_VAST","BC_EARLY"))
# array(mappy$log_fsh_slx_pars, dim = c(df$nfleets_fish,2,1,2), dimnames = dimnames(df$parms$log_fsh_slx_pars))
# array(mappy$log_srv_slx_pars, dim = c(df$nfleets_surv+df$nfleets_acomp-4,2,1,2),
#       dimnames = dimnames(df$parms$log_srv_slx_pars))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
system.time(rep1 <- obj$report())
head(rep1$Length_yais_mid)
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v4L",'shire_v4')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-
df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <-  df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
df$parms$logq_f <- rep(log(1e-5),length(df$parms$logq_f))
# load(here("output","2020-12-17-59y_v4L_baseQ=WCGBTS_fshfixed_wcbcearlyfixed_withbounds/opt.rdata"))
# df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
# dimnames = dimnames(df$parms$log_srv_slx_pars))
# df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
#                                    dimnames = dimnames(df$parms$log_fsh_slx_pars))
# rm(opt)
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh", "WC_VAST","BC_EARLY"))
# array(mappy$log_fsh_slx_pars, dim = c(df$nfleets_fish,2,1,2), dimnames = dimnames(df$parms$log_fsh_slx_pars))
# array(mappy$log_srv_slx_pars, dim = c(df$nfleets_surv+df$nfleets_acomp-4,2,1,2),
#       dimnames = dimnames(df$parms$log_srv_slx_pars))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
system.time(rep1 <- obj$report())
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repeat for stability)
load(here("output","2020-12-17-59y_v4L_baseQ=WCGBTS_allest_lwrbounds/opt.rdata"))
df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
dimnames = dimnames(df$parms$log_srv_slx_pars))
df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
rm(opt)
load(here("output","2020-12-17-59y_v4L_baseQ=WCGBTS_allest_lwrbounds/opt.rdata"))
load(here("output","2020-12-15-59y_v4L_baseQ=WCGBTS_allest_lwrbounds/opt.rdata"))
df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
dimnames = dimnames(df$parms$log_srv_slx_pars))
df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
rm(opt)
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh", "WC_VAST","BC_EARLY"))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repeat for stability)
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v4L",'shire_v4')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v4L",'shire_v4')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v4L",'shire_v4')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-
df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <-  df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
df$parms$logq_f <- rep(log(1e-5),length(df$parms$logq_f))
load(here("output","2020-12-15-59y_v4L_baseQ=WCGBTS_allest_lwrbounds/opt.rdata"))
df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
dimnames = dimnames(df$parms$log_srv_slx_pars))
df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
rm(opt)
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
# "log_fsh_slx_pars",
# "log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh", "WC_VAST","BC_EARLY"))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v4L",'shire_v4')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/2020-12-23-59y_v4_baseQ=WCGBTS_lengthon/opt.rdata")
opt$max_gradient
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <-   30 #df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
df$parms$logq_f <- rep(log(1e-5),length(df$parms$logq_f))
exp(df$parms$log_srv_slx_pars)
# load(here("output","2020-12-15-59y_v4L_baseQ=WCGBTS_allest_lwrbounds/opt.rdata"))
# df$parms$log_srv_slx_pars <- array(opt$par[names(opt$par) == 'log_srv_slx_pars'],dim= c(8,2,1,2),
# dimnames = dimnames(df$parms$log_srv_slx_pars))
# df$parms$log_fsh_slx_pars <- array(opt$par[names(opt$par) == 'log_fsh_slx_pars'],dim= c(7,2,1,2),
#                                    dimnames = dimnames(df$parms$log_fsh_slx_pars))
# rm(opt)
mappy <-
buildMap(toFix =  c("omega_0ij",
"epsilon_tau",
"log_fsh_slx_pars",
# "log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh", "WC_VAST","BC_EARLY"))
# array(mappy$log_fsh_slx_pars, dim = c(df$nfleets_fish,2,1,2), dimnames = dimnames(df$parms$log_fsh_slx_pars))
# array(mappy$log_srv_slx_pars, dim = c(df$nfleets_surv+df$nfleets_acomp-4,2,1,2),
#       dimnames = dimnames(df$parms$log_srv_slx_pars))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
dat = rep1;attach(dat)
years <- 1960:2019
nyear <- length(years)
tEnd <- length(years)
age <- 0:70
nage <- length(age)
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
## confirm that we've only bounded unfixed fleets by number
# length(bounds$upper[names(bounds$upper)=='log_fsh_slx_pars']) == length(mappy$log_fsh_slx_pars[!is.na(mappy$log_fsh_slx_pars)])
# length(bounds$upper[names(bounds$upper)=='log_srv_slx_pars']) == length(mappy$log_srv_slx_pars[!is.na(mappy$log_srv_slx_pars)])
# with(bounds, array(exp(lower[names(lower)=='log_fsh_slx_pars']), dim = c(7,2,1,2),
#                    dimnames = list(df$fltnames_fish)))
# with(bounds, array(exp(upper[names(upper)=='log_srv_slx_pars']), dim = c(8,2,1,2)))
# with(bound
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[1])
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt)
opt$time_for_MLE
best <- obj$env$last.par.best ## update object with the best parameters
dat <- obj$report(par = best)
## save everything and plot
cppname = substr(dllUSE,7,nchar(dllUSE))
writeOM(dat=dat,obj = obj, opt = opt, rep=rep, cppname =cppname, mappy = mappy,
runname = paste0("-",df$yRun-1,"y_",cppname,
# "_M=", paste(df$parms$mort_k,collapse="-"),
"_noslxbnds",
"_lengthon"))
df$surv_yf_err
best
exp(best[names(best) == 'log_srv_slx_pars'])
exp(best[names(best) == 'log_srv_slx_pars']) %>% array(., dim = c(7,2,1,2))
df$fltnames_surv
exp(best[names(best) == 'log_srv_slx_pars']) %>% array(., dim = c(7,2,1,2), dimnames = dimnames(df$parms$log_srv_slx_pars))
dim(df$parms$log_srv_slx_pars)
exp(best[names(best) == 'log_srv_slx_pars']) %>% array(., dim = c(8,2,1,2), dimnames = dimnames(df$parms$log_srv_slx_pars))
