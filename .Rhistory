dimnames = list(df$fltnames_fish))
## about 65s for 22 years
## 7 hours for 44 yrs ## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
rep1$NeqnR
# ## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
rep1$fsh_slx_yafs[1,,3,1]; rep1$fsh_slx_yafs[1,,4,1]; rep1$fsh_slx_yafs[1,,5,1]
rep1$R_0i_vect
rep1$NeqnR
head(round(rep1$catch_yf_pred/df$catch_yf_obs[,2:(1+df$nfleets_fish)],2),df$yRun)
rep1$NeqnR
colSums(rep1$N_0ais) ## should not be super small anywhere
head(df$Neqn)
colSums(df$Neqn)
Neqn
load("C:/Users/mkapur/Dropbox/UW/sab-mse/input/input_data/Mat2_init.rdata")
load("C:/Users/mkapur/Dropbox/UW/sab-mse/input/input_data/I_init.rdata")
# save(r0vect, file=  here('input','input_data','r0vect_init.rdata'))
Neqn <- solve(I-Mat2) #%*% r0vect
Neqn
matrix(Neqn, ncol = nspace, nrow = nage)
nage = df$nage ## #just trying ages 5:7 for now
nspace =  df$nspace
matrix(Neqn, ncol = nspace, nrow = nage)
r0vect <- matrix(0, nrow = 1, ncol = Ndim)
Ndim <- nage*nspace
# R_init <-  rep(1,nspace) ## fixed R0 in each earea
R_init_temp <-  df$parms$logR_0k*df$tau_ki ## fixed R0 in each earea
r0vect <- matrix(0, nrow = 1, ncol = Ndim)
r0vect[seq(1,Ndim,nage)] <- exp(R_init_temp[R_init_temp !=0])
r0vect = c(r0vect)
# save(r0vect, file=  here('input','input_data','r0vect_init.rdata'))
Neqn <- solve(I-Mat2) %*% r0vect
neqnm <- matrix(Neqn, ncol = nspace, nrow = nage) %>%
data.frame(.) %>%
mutate(age = 1:nage) %>%
reshape2::melt(id = 'age') #%>%
conservation_status <- c(
X1 =  dimnames(df$X_ijas)[[1]][1],
X2 = dimnames(df$X_ijas)[[1]][2],
X3 = dimnames(df$X_ijas)[[1]][3],
X4 =dimnames(df$X_ijas)[[1]][4],
X5 = dimnames(df$X_ijas)[[1]][5],
X6 = dimnames(df$X_ijas)[[1]][6]
)
ggplot(neqnm, aes(x = age, y = value, color = variable)) +
ggsidekick::theme_sleek() +
geom_line(lwd = 1.1) +
scale_color_manual(values = rev(subareaPal),labels =  dimnames(df$X_ijas)[[1]]) +
facet_wrap(~variable, scales = 'free_y', labeller = labeller(variable =conservation_status))
rep1$NeqnR
neqnm <- matrix(rep1$NeqnR, ncol = nspace, nrow = nage) %>%
data.frame(.) %>%
mutate(age = 1:nage) %>%
reshape2::melt(id = 'age') #%>%
conservation_status <- c(
X1 =  dimnames(df$X_ijas)[[1]][1],
X2 = dimnames(df$X_ijas)[[1]][2],
X3 = dimnames(df$X_ijas)[[1]][3],
X4 =dimnames(df$X_ijas)[[1]][4],
X5 = dimnames(df$X_ijas)[[1]][5],
X6 = dimnames(df$X_ijas)[[1]][6]
)
ggplot(neqnm, aes(x = age, y = value, color = variable)) +
ggsidekick::theme_sleek() +
geom_line(lwd = 1.1) +
scale_color_manual(values = rev(subareaPal),labels =  dimnames(df$X_ijas)[[1]]) +
facet_wrap(~variable, scales = 'free_y', labeller = labeller(variable =conservation_status))
rep1$SSB_0i ## should not be small or negative
rep1$SSB_yi[1,] ## should match SSB0 without fishing
## OM_Master.R
## M S Kapur
## Inspiration from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v2L",'shire_v2L_1')[2]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
# df$v1 = 0.7;  df$Fmax = 1.5;
df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =  2 #df$tEnd-1
df$mat_age <- rep(1e-5,df$nage)
omega_0ij_map <- matrix(NA, nrow = 6, ncol = 6) ## turn off age-zero movement estimation
# omega_0ij_map[1,] <- df$parms$omega_0ij[1,] ## estimate to/from C1 only
#
# ## mirror selex in AK E/W
# ## if you want to MIRROR selex, fill a value in the specific location which is identical for each fleet
fsh_slx_map <- array(1:length(df$parms$log_fsh_slx_pars)*2,
dim = dim(df$parms$log_fsh_slx_pars),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
# dimnames(fsh_slx_map)[[1]] <- df$fltnames_fish
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(omega_0ij_map),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))#,
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now) x sex
# log_fsh_slx_pars = factor(fsh_slx_map)
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
# ## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
rep1$fsh_slx_yafs[1,,3,1]; rep1$fsh_slx_yafs[1,,4,1]; rep1$fsh_slx_yafs[1,,5,1]
rep1$R_0i_vect
rep1$NeqnR
head(round(rep1$catch_yf_pred/df$catch_yf_obs[,2:(1+df$nfleets_fish)],2),df$yRun)
rep1$catch_yf_pred
tdf = data.frame('age' = 1:10,lbeg_y0 = rep(NA,10), lbeg = rep(NA,10), lmid = rep(NA,10))
L1 = 5
LINF = 50
KAPPA = 0.2
## as written in BB
for(a in 1:nrow(tdf)){
tdf[a,'lbeg_y0'] <- LINF+(L1-LINF)*exp(-KAPPA*a) ## year zero only
tdf[a,'lbeg'] <- LINF+(L1-LINF)*exp(-KAPPA*a) ## year zero only
tdf[a,'lmid'] <-   tdf[a,'lbeg']+(LINF - tdf[a,'lbeg'])*(1-exp(-0.5*KAPPA))
}
plot(tdf$lbeg);points(tdf$lmid, col = 'red')
plot(tdf$lbegm col = 'green');points(tdf$lmid, col = 'blue');points(tdf$lbeg_y0, col = 'red')
plot(tdf$lbeg, col = 'green');points(tdf$lmid, col = 'blue');points(tdf$lbeg_y0, col = 'red')
L1/4+1:5
## as written in BB
for(a in 1:nrow(tdf)){
tdf[a,'lbeg_y0'] <- LINF+(L1-LINF)*exp(-KAPPA*a) ## year zero only
if(a < 6) tdf[a,'lbeg'] <- L1/4+1:5 ## year zero only
if(a > 5) tdf[a,'lbeg'] <- tdf[a-1,'lbeg_y0']+(LINF- tdf[a-1,'lbeg_y0'])*(1-exp(-KAPPA)) ## year zero only
tdf[a,'lmid'] <-   tdf[a,'lbeg']+(LINF - tdf[a,'lbeg'])*(1-exp(-0.5*KAPPA))
}
## as written in BB
for(a in 1:nrow(tdf)){
tdf[a,'lbeg_y0'] <- LINF+(L1-LINF)*exp(-KAPPA*a) ## year zero only
if(a < 6) tdf[a,'lbeg'] <- L1/4+a ## year zero only
if(a > 5) tdf[a,'lbeg'] <- tdf[a-1,'lbeg_y0']+(LINF- tdf[a-1,'lbeg_y0'])*(1-exp(-KAPPA)) ## year zero only
tdf[a,'lmid'] <-   tdf[a,'lbeg']+(LINF - tdf[a,'lbeg'])*(1-exp(-0.5*KAPPA))
}
plot(tdf$lbeg, col = 'green');points(tdf$lmid, col = 'blue');points(tdf$lbeg_y0, col = 'red')
tdf$lbeg_y0, col = 'red'
tdf
plot(tdf$lbeg, col = 'green', lty = 19, ylim = c(0,50));points(tdf$lmid, col = 'blue');points(tdf$lbeg_y0, col = 'red')
plot(tdf$lbeg, col = 'green', lty = 19, ylim = c(0,50))
plot(tdf$lbeg, col = 'green', pch = 19, ylim = c(0,50));
## as written in BB
for(a in 1:nrow(tdf)){
tdf[a,'lbeg_y0'] <- LINF+(L1-LINF)*exp(-KAPPA*a) ## year zero only
if(a < 6) tdf[a,'lbeg'] <- L1/4+a ## year zero only
if(a > 5) tdf[a,'lbeg'] <- tdf[a-1,'lbeg']+(LINF- tdf[a-1,'lbeg'])*(1-exp(-KAPPA)) ## year zero only
tdf[a,'lmid'] <-   tdf[a,'lbeg']+(LINF - tdf[a,'lbeg'])*(1-exp(-0.5*KAPPA))
}
plot(tdf$lbeg, col = 'green', pch = 19, ylim = c(0,50));
points(tdf$lmid, col = 'blue');points(tdf$lbeg_y0, col = 'red')
## as written in BB
for(a in 1:nrow(tdf)){
tdf[a,'lbeg_y0'] <- LINF+(L1-LINF)*exp(-KAPPA*a) ## year zero only
if(a < 6) tdf[a,'lbeg'] <- L1/4+a ## year zero only
if(a > 5) tdf[a,'lbeg'] <- tdf[a-1,'lbeg_y0']+(LINF- tdf[a-1,'lbeg_y0'])*(1-exp(-KAPPA)) ## year zero only
tdf[a,'lmid'] <-   tdf[a,'lbeg']+(LINF - tdf[a,'lbeg'])*(1-exp(-0.5*KAPPA))
}
plot(tdf$lbeg, col = 'green', pch = 19, ylim = c(0,50));
points(tdf$lmid, col = 'blue');points(tdf$lbeg_y0, col = 'red')
tdf = data.frame('age' = 1:100,lbeg_y0 = rep(NA,100), lbeg = rep(NA,100), lmid = rep(NA,100))
L1 = 5
LINF = 50
KAPPA = 0.2
## as written in BB
for(a in 1:nrow(tdf)){
tdf[a,'lbeg_y0'] <- LINF+(L1-LINF)*exp(-KAPPA*a) ## year zero only
if(a < 6) tdf[a,'lbeg'] <- L1/4+a ## year zero only
if(a > 5) tdf[a,'lbeg'] <- tdf[a-1,'lbeg_y0']+(LINF- tdf[a-1,'lbeg_y0'])*(1-exp(-KAPPA)) ## year zero only
tdf[a,'lmid'] <-   tdf[a,'lbeg']+(LINF - tdf[a,'lbeg'])*(1-exp(-0.5*KAPPA))
}
plot(tdf$lbeg, col = 'green', pch = 19, ylim = c(0,50));
points(tdf$lmid, col = 'blue');points(tdf$lbeg_y0, col = 'red')
tdf = data.frame('age' = 1:50,lbeg_y0 = rep(NA,50), lbeg = rep(NA,50), lmid = rep(50))
L1 = 5
LINF = 50
KAPPA = 0.2
## as written in BB
for(a in 1:nrow(tdf)){
tdf[a,'lbeg_y0'] <- LINF+(L1-LINF)*exp(-KAPPA*a) ## year zero only
if(a < 6) tdf[a,'lbeg'] <- L1/4+a ## year zero only
if(a > 5) tdf[a,'lbeg'] <- tdf[a-1,'lbeg_y0']+(LINF- tdf[a-1,'lbeg_y0'])*(1-exp(-KAPPA)) ## year zero only
tdf[a,'lmid'] <-   tdf[a,'lbeg']+(LINF - tdf[a,'lbeg'])*(1-exp(-0.5*KAPPA))
}
plot(tdf$lbeg, col = 'green', pch = 19, ylim = c(0,50));
points(tdf$lmid, col = 'blue');points(tdf$lbeg_y0, col = 'red')
require(gganimate)
dat$SSB_yk %>%
data.frame() %>%
mutate('Yr' = years[1:nrow(.)]) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = Yr, y = value, color = variable )) +
scale_color_manual(values = demPal) +
geom_line(lwd = 2) + labs(x = 'Modeled Year',y = 'SSB', color = 'stock') +
ggsidekick::theme_sleek() +
theme( legend.position = c(0.8,0.8))+ transition_reveal(Yr)
require(dplyr)
dat$SSB_yk %>%
data.frame() %>%
mutate('Yr' = years[1:nrow(.)]) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = Yr, y = value, color = variable )) +
scale_color_manual(values = demPal) +
geom_line(lwd = 2) + labs(x = 'Modeled Year',y = 'SSB', color = 'stock') +
ggsidekick::theme_sleek() +
theme( legend.position = c(0.8,0.8))+ transition_reveal(Yr)
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/2020-11-19-59y_v2L_1_16Nov_M=1e-05_Fon_SurvOff_BCSelexOff/dat.rdata")
dat$SSB_yk %>%
data.frame() %>%
mutate('Yr' = years[1:nrow(.)]) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = Yr, y = value, color = variable )) +
scale_color_manual(values = demPal) +
geom_line(lwd = 2) + labs(x = 'Modeled Year',y = 'SSB', color = 'stock') +
ggsidekick::theme_sleek() +
theme( legend.position = c(0.8,0.8))+
transition_reveal(Yr)
years <- 1960:2019
nyear <- length(years)
dat$SSB_yk %>%
data.frame() %>%
mutate('Yr' = years[1:nrow(.)]) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = Yr, y = value, color = variable )) +
scale_color_manual(values = demPal) +
geom_line(lwd = 2) + labs(x = 'Modeled Year',y = 'SSB', color = 'stock') +
ggsidekick::theme_sleek() +
theme( legend.position = c(0.8,0.8))+
transition_reveal(Yr)
?anim_save
anim_save(paste0(dumpfile,"SSB_yk_animate"))
anim_save(paste0(dumpfile,"SSB_yk_animate",animation = last_animation()))
anim_save(paste0(dumpfile,"SSB_yk_animate.gif",animation = last_animation()))
last_animation()
myPlot= dat$SSB_yk %>%
data.frame() %>%
mutate('Yr' = years[1:nrow(.)]) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = Yr, y = value, color = variable )) +
scale_color_manual(values = demPal) +
geom_line(lwd = 2) +
labs(x = 'Modeled Year',y = 'SSB', color = 'stock') +
ggsidekick::theme_sleek() +
theme( legend.position = c(0.8,0.8))+
transition_reveal(Yr)
animate(myPlot, duration = 5, fps = 20, width = 200,
height = 200, renderer = gifski_renderer())
anim_save("output.gif")
myPlot <-dat$SSB_yk %>%
data.frame() %>%
mutate('Yr' = years[1:nrow(.)]) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = Yr, y = value, color = variable )) +
scale_color_manual(values = demPal) +
geom_line(lwd = 2) +
labs(x = 'Modeled Year',y = 'SSB', color = 'stock') +
ggsidekick::theme_sleek() +
theme( legend.position = c(0.8,0.8))+
transition_reveal(Yr)
animate(myPlot, duration = 5, fps = 20, width = 200,
height = 200, renderer = gifski_renderer())
install.packages('gifski')
library(gifski)
myPlot <-dat$SSB_yk %>%
data.frame() %>%
mutate('Yr' = years[1:nrow(.)]) %>%
reshape2::melt(id = c('Yr')) %>%
ggplot(., aes(x = Yr, y = value, color = variable )) +
scale_color_manual(values = demPal) +
geom_line(lwd = 2) +
labs(x = 'Modeled Year',y = 'SSB', color = 'stock') +
ggsidekick::theme_sleek() +
theme( legend.position = c(0.8,0.8))+
transition_reveal(Yr)
animate(myPlot, duration = 5, fps = 20, width = 200,
height = 200, renderer = gifski_renderer())
anim_save("output.gif")
animate(myPlot, duration = 5, fps = 20, width = 6,
height = 6, unit = 'in', renderer = gifski_renderer())
animate(myPlot, duration = 5, fps = 20, width = 6,
height = 6, unit = 'in', res = 420, renderer = gifski_renderer())
anim_save('SSB_yk-animate-',Sys.Date(),'.png')
?animate
anim_save('SSB_yk-animate-',Sys.Date(),'.png')
dat
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/2020-11-19-59y_v2L_1_16Nov_M=1e-05_Fon_SurvOff_BCSelexOff/dat.rdata")
## ninit ----
neqnm <- matrix(dat$NeqnR, ncol = 6, nrow = 71) %>%
data.frame(.) %>%
mutate(age = 0:70) %>%
reshape2::melt(id = 'age')
require(dplyr)
require(ggplot2)
## ninit ----
neqnm <- matrix(dat$NeqnR, ncol = 6, nrow = 71) %>%
data.frame(.) %>%
mutate(age = 0:70) %>%
reshape2::melt(id = 'age')
conservation_status <- c(
X1 =  dimnames(df$X_ijas)[[1]][1],
X2 = dimnames(df$X_ijas)[[1]][2],
X3 = dimnames(df$X_ijas)[[1]][3],
X4 =dimnames(df$X_ijas)[[1]][4],
X5 = dimnames(df$X_ijas)[[1]][5],
X6 = dimnames(df$X_ijas)[[1]][6]
)
ggplot(neqnm, aes(x = age, y = value, color = variable)) +
ggsidekick::theme_sleek() +
geom_line(lwd = 1.1) +
scale_color_manual(values = rev(subareaPal),labels =  dimnames(df$X_ijas)[[1]]) +
facet_wrap(~variable, scales = 'free_y', labeller = labeller(variable =conservation_status))
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/2020-11-19-59y_v2L_1_16Nov_M=1e-05_Fon_SurvOff_BCSelexOff/opt.rdata")
steep <- exp(opt$par[names(opt$par) == 'logh_k'])
names(steep) <- paste0("h","_R",1:4)
steep
logR_0 <- opt$par[names(opt$par) == 'logR_0k']
logR_0
names(logR_0) <- paste0("logR_0","_R",1:4)
logR_0
rm(list = ls())
## M S Kapur
## Inspiration from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v2L_1",'shire_v2L_1_16Nov')[2]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
## OM_Master.R
## M S Kapur
## Inspiration from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shire_v2L_1",'shire_v2L_1_16Nov')[2]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
# df$v1 = 0.7;  df$Fmax = 1.5;
df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =  df$tEnd-1
df$mat_age <- rep(1e-5,df$nage)
omega_0ij_map <- matrix(NA, nrow = 6, ncol = 6) ## turn off age-zero movement estimation
# omega_0ij_map[1,] <- df$parms$omega_0ij[1,] ## estimate to/from C1 only
#
# ## mirror selex in AK E/W
# ## if you want to MIRROR selex, fill a value in the specific location which is identical for each fleet
fsh_slx_map <- array(1:length(df$parms$log_fsh_slx_pars),
dim = dim(df$parms$log_fsh_slx_pars),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
#
# fsh_slx_map[c(1,2)] <- 1 ## mirror p1 for females, W
# fsh_slx_map[c(19,20)] <- 2 ## mirror p1 for males, W
# fsh_slx_map[c(3,4)] <- 3 ## mirror p1 for females, E
# fsh_slx_map[c(21,22)] <- 4 ## mirror p1 for males, E
# fsh_slx_map[c(10,11)] <- 5## mirror p2 for females, W
# fsh_slx_map[c(28,29)] <- 6## mirror p2 for males, W
# fsh_slx_map[c(12,13)] <- 7## mirror p2 for females, E
# fsh_slx_map[c(30,31)] <- 8## mirror p2 for males, E
## fix BC selex (for use with -1 slx)
df$selShape_fish[3:5] <-  -1 ## slx = 1.0 for all BC fisheries
fsh_slx_map[3:5,1,1,1:2] <- factor(NA)
fsh_slx_map[3:5,2,1,1:2] <- factor(NA)
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/2020-11-19-59y_v2L_1_16Nov_M=1e-05_Fon_SurvOff_BCSelexOff/opt.rdata")
opt$par
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- opt$env$last.par.best ## update object with the best parameters
array(round(exp(best[names(best)=='log_fsh_slx_pars'])),
dim = c(7,2,2))
load("C:/Users/mkapur/Dropbox/UW/sab-mse/output/2020-11-19-59y_v2L_1_16Nov_M=1e-05_Fon_SurvOff_BCSelexOff/obj.rdata")
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
array(round(exp(best[names(best)=='log_fsh_slx_pars'])),
dim = c(7,2,2))
df$parms$log_fsh_slx_pars
# omega_0ij_map[1,] <- df$parms$omega_0ij[1,] ## estimate to/from C1 only
#
# ## mirror selex in AK E/W
# ## if you want to MIRROR selex, fill a value in the specific location which is identical for each fleet
fsh_slx_map <- array(1:length(df$parms$log_fsh_slx_pars), byrow= TRUE,
dim = dim(df$parms$log_fsh_slx_pars),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
# omega_0ij_map[1,] <- df$parms$omega_0ij[1,] ## estimate to/from C1 only
#
# ## mirror selex in AK E/W
# ## if you want to MIRROR selex, fill a value in the specific location which is identical for each fleet
fsh_slx_map <- array(1:length(df$parms$log_fsh_slx_pars),
dim = dim(df$parms$log_fsh_slx_pars),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
#
# fsh_slx_map[c(1,2)] <- 1 ## mirror p1 for females, W
# fsh_slx_map[c(19,20)] <- 2 ## mirror p1 for males, W
# fsh_slx_map[c(3,4)] <- 3 ## mirror p1 for females, E
# fsh_slx_map[c(21,22)] <- 4 ## mirror p1 for males, E
# fsh_slx_map[c(10,11)] <- 5## mirror p2 for females, W
# fsh_slx_map[c(28,29)] <- 6## mirror p2 for males, W
# fsh_slx_map[c(12,13)] <- 7## mirror p2 for females, E
# fsh_slx_map[c(30,31)] <- 8## mirror p2 for males, E
## fix BC selex (for use with -1 slx)
df$selShape_fish[3:5] <-  -1 ## slx = 1.0 for all BC fisheries
fsh_slx_map[3:5,1,1,1:2] <- factor(NA)
fsh_slx_map[3:5,2,1,1:2] <- factor(NA)
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## testing to see if mult is slowing down
omega_0ij = factor(omega_0ij_map),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60)),
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now) x sex
log_fsh_slx_pars = factor(fsh_slx_map)
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
source(here('R','functions','boundPars.R')) ## bound selex etc
obj$par
## bounds on fsh slx ----
## brute force par locations; if mappy mirrors first ak fleets,
## assume that fleets 1 and 2 are now AK FIX mirror and AK TWL mirror
array(1:length(df$parms$log_fsh_slx_pars), dim = c(7,2,2))
obj$par
## bounds on fsh slx ----
## brute force par locations; if mappy mirrors first ak fleets,
## assume that fleets 1 and 2 are now AK FIX mirror and AK TWL mirror
array(1:length(obj$par[names(obj$par == "log_fsh_slx_pars")]), dim = c(7,2,2))
#
p1_logistic_idx <- c(1:2,15:16) #c(1:4,19:22)
p2_logistic_idx <- p1_logistic_idx+df$nfleets_fish
p1_norm_idx <- c(3,4,6,7,17,18,20,21)  #c(5,6,8,9,23,24,26,27)
p2_norm_idx <- p1_norm_idx+df$nfleets_fish
p1_gamma_idx <- c(5,19)#c(7,25)
p2_gamma_idx <- p1_gamma_idx+df$nfleets_fish
#
#
# #* fsh slx lower bounds ----
# ## logistic p1 (a50)
# array(1:length(lower[names(lower) == 'log_fsh_slx_pars']), dim = c(7,2,2))
#
#
lower[names(lower) == 'log_fsh_slx_pars'][p1_logistic_idx] <- log(35)
## logistic p2 (a95)
lower[names(lower) == 'log_fsh_slx_pars'][p2_logistic_idx] <- log(60)
## normal p1 (mean)
lower[names(lower) == 'log_fsh_slx_pars'][p1_norm_idx] <- log(15)
length(obj$par[names(obj$par == "log_fsh_slx_pars")]
)
## bounds on fsh slx ----
## brute force par locations; if mappy mirrors first ak fleets,
## assume that fleets 1 and 2 are now AK FIX mirror and AK TWL mirror
array(1:length(obj$par[names(obj$par == "log_fsh_slx_pars")]), dim = c(7,2,2))
obj$par
## bounds on fsh slx ----
## brute force par locations; if mappy mirrors first ak fleets,
## assume that fleets 1 and 2 are now AK FIX mirror and AK TWL mirror
array(1:length(obj$par[names(obj$par) == "log_fsh_slx_pars"]), dim = c(7,2,2))
length(obj$par[names(obj$par) == "log_fsh_slx_pars"])
## bounds on fsh slx ----
## brute force par locations; if mappy mirrors first ak fleets,
## assume that fleets 1 and 2 are now AK FIX mirror and AK TWL mirror
array(1:length(obj$par[names(obj$par) == "log_fsh_slx_pars"]), dim = c(4,2,2))
