source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
reps$CatchN
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM MODEL INIT ----
# Initialize the model parameters. Make a version with movement and no seasons (simple)
df.simple <- load_data_seasons(nseason = 1,
nspace = 2,
bfuture = 0.5,
movemaxinit = 0.5,
movefiftyinit =8) # Prepare data for operating model
# Run the model using 'run.agebased.true.catch()' -- will fail if pars not == nspace
sim.data.simple <- run.agebased.true.catch(df.simple)
## sanity checks
sim.data.simple$SSB %>%
data.frame() %>%
mutate('totalSSB' = X1+X2, year = as.numeric(row.names(.))) %>%
melt(id = 'year') %>%
ggplot(., aes(x = year, y = value, color = variable)) +
geom_line(size =2 ) +  theme_sleek()
## OM MODEL CONDITIONING ----
# runomem and run om condition
set.seed(731)
plot.figures = FALSE # Set true for printing to file
# Run the simulation model
assessment <- read.csv(here("input","data",'assessment_MLE.csv')) ## I believe this comes from SS3
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
Catch.obs <- read.csv(here("input","data",'hake_totcatch.csv'))
df <- load_data_seasons(nspace =2)
df$Catch <- Catch.obs$Fishery
time <- 1
yrinit <- df$nyear
### Run the OM and the EM for x number of years in the MSE
### Set targets for harvesting etc
# df$parms$initN <- df$parms$initN*0
# df$parms$Rin <- df$parms$Rin*0
# df$F0 <- 0*df$F0
simyears <- 25 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true.catch(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
# Plott stuff
parms <- getParameters_OM(trueparms = FALSE, df = df)
##  Create a data frame to send to runsabassessment
df.new <- create_TMB_data(sim.data, df, history = TRUE)
parms.new <- parms
F0 <- rowSums(sim.data$Fout)
Rdev <- parms$Rin
parms.new$F0 <- F0
parms.new$Rin <- Rdev
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
parms$logRinit2
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM MODEL INIT ----
# Initialize the model parameters. Make a version with movement and no seasons (simple)
df.simple <- load_data_seasons(nseason = 1,
nspace = 2,
bfuture = 0.5,
movemaxinit = 0.5,
movefiftyinit =8) # Prepare data for operating model
# Run the model using 'run.agebased.true.catch()' -- will fail if pars not == nspace
sim.data.simple <- run.agebased.true.catch(df.simple)
## sanity checks
sim.data.simple$SSB %>%
data.frame() %>%
mutate('totalSSB' = X1+X2, year = as.numeric(row.names(.))) %>%
melt(id = 'year') %>%
ggplot(., aes(x = year, y = value, color = variable)) +
geom_line(size =2 ) +  theme_sleek()
## OM MODEL CONDITIONING ----
# runomem and run om condition
set.seed(731)
plot.figures = FALSE # Set true for printing to file
# Run the simulation model
assessment <- read.csv(here("input","data",'assessment_MLE.csv')) ## I believe this comes from SS3
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
Catch.obs <- read.csv(here("input","data",'hake_totcatch.csv'))
df <- load_data_seasons(nspace =2)
df$Catch <- Catch.obs$Fishery
time <- 1
yrinit <- df$nyear
### Run the OM and the EM for x number of years in the MSE
### Set targets for harvesting etc
# df$parms$initN <- df$parms$initN*0
# df$parms$Rin <- df$parms$Rin*0
# df$F0 <- 0*df$F0
simyears <- 25 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true.catch(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
# Plott stuff
parms <- getParameters_OM(trueparms = FALSE, df = df)
##  Create a data frame to send to runsabassessment
df.new <- create_TMB_data(sim.data, df, history = TRUE)
parms.new <- parms
F0 <- rowSums(sim.data$Fout)
Rdev <- parms$Rin
parms.new$F0 <- F0
parms.new$Rin <- Rdev
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
## OM MODEL INIT ----
# Initialize the model parameters. Make a version with movement and no seasons (simple)
df.simple <- load_data_seasons(nseason = 1,
nspace = 2,
bfuture = 0.5,
movemaxinit = 0.5,
movefiftyinit =8) # Prepare data for operating model
source(here("R","functions",'load_files_OM.R'))
parms <- getParameters_OM(trueparms = FALSE, df = df)
df.new <- create_TMB_data(sim.data, df, history = TRUE)
parms.new <- parms
Rdev <- parms$Rin
parms.new$F0 <- F0
parms.new$Rin <- Rdev
F0 <- rowSums(sim.data$Fout)
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM MODEL INIT ----
# Initialize the model parameters. Make a version with movement and no seasons (simple)
df.simple <- load_data_seasons(nseason = 1,
nspace = 2,
bfuture = 0.5,
movemaxinit = 0.5,
movefiftyinit =8) # Prepare data for operating model
# Run the model using 'run.agebased.true.catch()' -- will fail if pars not == nspace
sim.data.simple <- run.agebased.true.catch(df.simple)
## sanity checks
sim.data.simple$SSB %>%
data.frame() %>%
mutate('totalSSB' = X1+X2, year = as.numeric(row.names(.))) %>%
melt(id = 'year') %>%
ggplot(., aes(x = year, y = value, color = variable)) +
geom_line(size =2 ) +  theme_sleek()
## OM MODEL CONDITIONING ----
# runomem and run om condition
set.seed(731)
plot.figures = FALSE # Set true for printing to file
# Run the simulation model
assessment <- read.csv(here("input","data",'assessment_MLE.csv')) ## I believe this comes from SS3
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
Catch.obs <- read.csv(here("input","data",'hake_totcatch.csv'))
df <- load_data_seasons(nspace =2)
df$Catch <- Catch.obs$Fishery
time <- 1
yrinit <- df$nyear
### Run the OM and the EM for x number of years in the MSE
### Set targets for harvesting etc
# df$parms$initN <- df$parms$initN*0
# df$parms$Rin <- df$parms$Rin*0
# df$F0 <- 0*df$F0
simyears <- 25 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true.catch(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
# Plott stuff
parms <- getParameters_OM(trueparms = FALSE, df = df)
##  Create a data frame to send to runsabassessment
df.new <- create_TMB_data(sim.data, df, history = TRUE)
parms.new <- parms
F0 <- rowSums(sim.data$Fout)
Rdev <- parms$Rin
parms.new$F0 <- F0
parms.new$Rin <- Rdev
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
reps$R_i
df.new$tau_ik
reps$R_k
reps$R_i
reps$R_k
df.new$tau_ik
reps$N_beg3
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
parms$logRinit2
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
reps$Rinit2
df.new$tEnd
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM MODEL CONDITIONING ----
# runomem and run om condition
set.seed(731)
plot.figures = FALSE # Set true for printing to file
# Run the simulation model
assessment <- read.csv(here("input","data",'assessment_MLE.csv')) ## I believe this comes from SS3
assessment <- assessment[assessment$year > 1965 &assessment$year < 2018 ,]
Catch.obs <- read.csv(here("input","data",'hake_totcatch.csv'))
df <- load_data_seasons(nspace =2)
df$Catch <- Catch.obs$Fishery
time <- 1
yrinit <- df$nyear
### Run the OM and the EM for x number of years in the MSE
### Set targets for harvesting etc
# df$parms$initN <- df$parms$initN*0
# df$parms$Rin <- df$parms$Rin*0
# df$F0 <- 0*df$F0
simyears <- 25 # Project 30 years into the future (2048 that year)
year.future <- c(df$years,(df$years[length(df$years)]+1):(df$years[length(df$years)]+simyears))
N0 <- NA
sim.data <- run.agebased.true.catch(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
# Plott stuff
parms <- getParameters_OM(trueparms = FALSE, df = df)
##  Create a data frame to send to runsabassessment
df.new <- create_TMB_data(sim.data, df, history = TRUE)
parms.new <- parms
F0 <- rowSums(sim.data$Fout)
Rdev <- parms$Rin
parms.new$F0 <- F0
parms.new$Rin <- Rdev
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
compile(here("TMB","runsabassessment.cpp"))
dyn.load(dynlib(here("TMB","runsabassessment")))
rm(list = ls())
df <- load_data_seasons(nspace =2)
## OM_Master.R
## M S Kapur mod N Jacobsen Summer 2020
## kapurm@uw.edu
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
source(here("R","functions",'load_files_OM.R'))
df <- load_data_seasons(nspace =2)
parms <- getParameters_OM(trueparms = FALSE, df = df)
df.new <- create_TMB_data(sim.data, df, history = TRUE)
sim.data <- run.agebased.true.catch(df)
simdata0 <- sim.data # The other one is gonna get overwritten.
parms <- getParameters_OM(trueparms = FALSE, df = df)
df.new <- create_TMB_data(sim.data, df, history = TRUE)
parms.new <- parms
F0 <- rowSums(sim.data$Fout)
Rdev <- parms$Rin
parms.new$F0 <- F0
parms.new$Rin <- Rdev
obj <- MakeADFun(df.new,
parms.new,
DLL= "runsabassessment") # Run the assessment, in TMB folder
reps <- obj$report()
