omega_0ij = factor(omega_0ij_map),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
array(exp(obj$par[names(obj$par)=='log_fsh_slx_pars']), dim = c(9,2,2),
dimnames = list(df$fltnames_fish))
## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
head(round(rep1$catch_yf_pred/df$catch_yf_obs[,2:10],2),df$yRun)
# rep1$N_yais_beg[1:7,c(0:4,71),,1]
# rep1$N_yais_mid[1:7,c(0:4,71),,1]
# rep1$N_yais_end[1:7,c(0:4,71),,1]
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
array(round(exp(best[names(best)=='log_fsh_slx_pars'])), dim = c(9,2,2),
dimnames = list(df$fltnames_fish))
## 81 s
dat <- obj$report(par = best)
head(round(dat$catch_yf_pred/df$catch_yf_obs[,2:10],2),df$yRun)
rowSums(dat$N_yais_end[1:df$yRun,,,1])
round(dat$SSB_yi[1:df$yRun,]) ## should not be small or negative
round(dat$R_yi[1:df$yRun,])
steep <- exp(opt$par[1:4])
names(steep) <- paste0("h","_R",1:4)
steep
# rep1$N_yais_beg[1:7,c(0:4,71),,1]
# rep1$N_yais_mid[1:7,c(0:4,71),,1]
# rep1$N_yais_end[1:7,c(0:4,71),,1]
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
head(round(dat$catch_yf_pred/df$catch_yf_obs[,2:10],2),df$yRun)
array(round(exp(best[names(best)=='log_fsh_slx_pars'])), dim = c(9,2,2),
dimnames = list(df$fltnames_fish))
steep <- exp(opt$par[1:4])
names(steep) <- paste0("h","_R",1:4)
logR_0 <- opt$par[5:8]
names(logR_0) <- paste0("logR_0","_R",1:4)
logR_0
round(dat$R_yi[1:df$yRun,])
steep
rm(list = ls())
## OM_Master.R
## M S Kapur
## Inspiration  from J Sullivan N Jacobsen Summer 2020
## kapurm@uw.edu
# file.copy("C:/Users/public/shire.cpp",here("TMB","shire.cpp"),overwrite = TRUE)
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shireAEP1010",'shire_v2','shire_v2L')[3]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =  10 #df$tEnd-1
df$mat_age <- rep(0.1,df$nage)
df$selShape_fish[5:7] <-  -1 ## turn OFF all slx for BC
omega_0ij_map <- matrix(NA, nrow = 6, ncol = 6) ## turn everything off
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(omega_0ij_map),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
omega_0ij_map[1,] <- df$parms$omega_0ij[1,] ## estimate to/from C1 only
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
head(round(rep1$catch_yf_pred/df$catch_yf_obs[,2:10],2),df$yRun)
# rep1$N_yais_beg[1:7,c(0:4,71),,1]
# rep1$N_yais_mid[1:7,c(0:4,71),,1]
# rep1$N_yais_end[1:7,c(0:4,71),,1]
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
array(round(exp(best[names(best)=='log_fsh_slx_pars'])), dim = c(9,2,2),
dimnames = list(df$fltnames_fish))
## 81 s
dat <- obj$report(par = best)
head(round(dat$catch_yf_pred/df$catch_yf_obs[,2:10],2),df$yRun)
colSums(dat$N_0ais) ## should not be super small anywhere
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
round(dat$R_yi[1:df$yRun,])
steep <- exp(opt$par[1:4])
names(steep) <- paste0("h","_R",1:4)
steep
logR_0 <- opt$par[5:8]
names(logR_0) <- paste0("logR_0","_R",1:4)
logR_0
df$yRun
writeOM(dat=dat,obj = obj, opt = opt, rep=rep, cppname =cppname,
runname = paste0(df$yRun,"y_",cppname,"_M=",df$mat_age[1],"_bcseloff"))
## save everything and plot
cppname = substr(dllUSE,7,nchar(dllUSE))
writeOM(dat=dat,obj = obj, opt = opt, rep=rep, cppname =cppname,
runname = paste0(df$yRun,"y_",cppname,"_M=",df$mat_age[1],"_bcseloff"))
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shireAEP1010",'shire_v2','shire_v2L')[3]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =  33 #df$tEnd-1
df$mat_age <- rep(0.1,df$nage)
df$selShape_fish[5:7] <-  -1 ## turn OFF all slx for BC
omega_0ij_map <- matrix(NA, nrow = 6, ncol = 6) ## turn everything off
omega_0ij_map[1,] <- df$parms$omega_0ij[1,] ## estimate to/from C1 only
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(omega_0ij_map),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
array(exp(obj$par[names(obj$par)=='log_fsh_slx_pars']), dim = c(9,2,2),
dimnames = list(df$fltnames_fish))
## up to 30s
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
head(round(rep1$catch_yf_pred/df$catch_yf_obs[,2:10],2),df$yRun)
colSums(rep1$N_0ais) ## should not be super small anywhere
rep1$SSB_0i ## should not be small or negative
round(rep1$SSB_yi[1:df$yRun,]) ## should not be small or negative
round(rep1$R_yi[1:df$yRun,])
rowSums(rep1$N_yais_end[1:df$yRun,,,1])
# rep1$N_yais_beg[1:7,c(0:4,71),,1]
# rep1$N_yais_mid[1:7,c(0:4,71),,1]
# rep1$N_yais_end[1:7,c(0:4,71),,1]
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
array(exp(upper[names(upper)=='log_fsh_slx_pars']), dim = c(9,2,2),
dimnames = list(df$fltnames_fish))
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
array(round(exp(best[names(best)=='log_fsh_slx_pars'])), dim = c(9,2,2),
dimnames = list(df$fltnames_fish))
## 81 s
dat <- obj$report(par = best)
head(round(dat$catch_yf_pred/df$catch_yf_obs[,2:10],2),df$yRun)
colSums(dat$N_0ais) ## should not be super small anywhere
dat$SSB_0i ## should not be small or negative
round(dat$R_yi[1:df$yRun,])
round(dat$SSB_yi[1:df$yRun,]) ## should not be small or negative
rowSums(dat$N_yais_beg[1:df$yRun,,,1])
rowSums(dat$N_yais_end[1:df$yRun,,,1])
steep <- exp(opt$par[1:4])
names(steep) <- paste0("h","_R",1:4)
logR_0 <- opt$par[5:8]
names(logR_0) <- paste0("logR_0","_R",1:4)
system.time(rep <- sdreport(obj, par = best)) ## re-run & return values at best pars
likes <- dat$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
likes
## save everything and plot
cppname = substr(dllUSE,7,nchar(dllUSE))
writeOM(dat=dat,obj = obj, opt = opt, rep=rep, cppname =cppname,
runname = paste0(df$yRun,"y_",cppname,"_M=",df$mat_age[1],"_bcseloff"))
opt$time_for_MLE
writeOM(dat=dat,obj = obj, opt = opt, rep=rep, cppname =cppname,
runname = paste0(df$yRun,"y_",cppname,"_M=",df$mat_age[1],"_bcseloff_est0ij"))
best
plot(df$mla_yais)
plot(df$mla_yais[44,,1,1])
df$mat_ak
df$phi_ki
df$phi_im
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shireAEP1010",'shire_v2','shire_v2L')[3]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =  22 #df$tEnd-1
df$mat_age <- rep(1e-3,df$nage)
df$selShape_fish[5:7] <-  -1 ## turn OFF all slx for BC
omega_0ij_map <- matrix(NA, nrow = 6, ncol = 6) ## turn everything off
# omega_0ij_map[1,] <- df$parms$omega_0ij[1,] ## estimate to/from C1 only
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(omega_0ij_map),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
head(round(rep1$catch_yf_pred/df$catch_yf_obs[,2:10],2),df$yRun)
# rep1$N_yais_beg[1:7,c(0:4,71),,1]
# rep1$N_yais_mid[1:7,c(0:4,71),,1]
# rep1$N_yais_end[1:7,c(0:4,71),,1]
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
head(round(dat$catch_yf_pred/df$catch_yf_obs[,2:10],2),df$yRun)
writeOM(dat=dat,obj = obj, opt = opt, rep=rep, cppname =cppname,
runname = paste0(df$yRun,"y_",cppname,"_M=",df$mat_age[1],"_bcseloff_est0ij"))
## save everything and plot
cppname = substr(dllUSE,7,nchar(dllUSE))
writeOM(dat=dat,obj = obj, opt = opt, rep=rep, cppname =cppname,
runname = paste0(df$yRun,"y_",cppname,"_M=",df$mat_age[1],"_bcseloff"))
rm(list= ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shireAEP1010",'shire_v2','shire_v2L')[3]
# compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =  df$tEnd-1
df$mat_age <- rep(1e-3,df$nage)
df$selShape_fish[5:7] <-  -1 ## t
omega_0ij_map <- matrix(NA, nrow = 6, ncol = 6) ## turn everything off
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(omega_0ij_map),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
# rep1$N_yais_beg[1:7,c(0:4,71),,1]
# rep1$N_yais_mid[1:7,c(0:4,71),,1]
# rep1$N_yais_end[1:7,c(0:4,71),,1]
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
## 81 s
dat <- obj$report(par = best)
head(round(dat$catch_yf_pred/df$catch_yf_obs[,2:10],2),df$yRun)
## save everything and plot
cppname = substr(dllUSE,7,nchar(dllUSE))
writeOM(dat=dat,obj = obj, opt = opt, rep=rep, cppname =cppname,
runname = paste0("-",df$yRun,"y_",cppname,"_M=",df$mat_age[1],"_bcseloff"))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c("shireAEP1010",'shire_v2','shire_v2L')[3]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6, move = TRUE) ## data that works with OM
# df$v1 = 0.99; df$Fmax = 3;
df$v1 = 0.7;  df$Fmax = 1.5;
# df$v1 = 0.65; df$Fmax = 1.15;
df$niter = 20
df$yRun =  df$tEnd-1
# df$mat_age <- rep(1e-3,df$nage)
df$selShape_fish[5:7] <-  -1 ## turn OFF all slx for BC
omega_0ij_map <- matrix(NA, nrow = 6, ncol = 6) ## turn everything off
mappy <- list(
# logh_k = factor(rep(NA, 4)),
# logR_0k = factor(rep(NA, 4)), ## sum wc = 12
omega_0ij = factor(omega_0ij_map),
# logq_f = factor(rep(NA, 5)),
b =  factor(rep(NA, 60))
# logpi_acomp = factor(rep(NA,df$nfleets_acomp)),
# logSDR = factor(NA),
## structure is fleet x alpha, beta x time block (1 for now)x sex
# log_fsh_slx_pars = factor(array(NA, dim = c(df$nfleets_fish,2,1,2)))
# log_srv_slx_pars =  factor(array(NA, dim = c( df$nfleets_surv+(df$nfleets_acomp-5),2,1,2)))
)
## ~90s with full years
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll =dllUSE,
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
# rep1$N_yais_beg[1:7,c(0:4,71),,1]
# rep1$N_yais_mid[1:7,c(0:4,71),,1]
# rep1$N_yais_end[1:7,c(0:4,71),,1]
# likes <- rep1$ans_tot %>% matrix(., ncol = length(.)) %>% data.frame()
# names(likes) = c("SDR","CATCH","SURVEY","SURVCOMP","CATCHCOMP","PRIORS")
# likes
source(here('R','functions','boundPars.R')) ## bound selex etc
## about 65s for 22 years
## 7 hours for 44 yrs
## 3hrs for all years with bounds (just catch like)
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = lower,
upper = upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repreat for stability)
1766/60
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
dat <- obj$report(par = best)
head(round(dat$catch_yf_pred/df$catch_yf_obs[,2:10],2),df$yRun)
df$mat_age[1]
cppname = substr(dllUSE,7,nchar(dllUSE))
writeOM(dat=dat,obj = obj, opt = opt, rep=rep, cppname =cppname,
runname = paste0("-",df$yRun,"y_",cppname,"_M=",df$mat_age[1],"_noF"))
