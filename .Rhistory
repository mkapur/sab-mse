)
mappy <-
buildMap(toFix =  c("omega_0ij",
"logh_k",
"logSDR",
# "tildeR_yk",
"b_y",
"epsilon_tau",
"logpi_acomp",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh",
# "all_srv"))
c( paste0(c(as.character(unlist(df$fltnames_surv)),
as.character(unlist(df$fltnames_acomp)[c(2,4,5)])))[-c(4)] )))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll = dllUSE,
# random = "tildeR_y",
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
mappy
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
## inspect survey bounds in proper format
exp(bounds$srv_bnds_lwr)
mappy <-
buildMap(toFix =  c("omega_0ij",
"logh_k",
"logSDR",
# "tildeR_yk",
"b_y",
"epsilon_tau",
"logpi_acomp",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh",
"all_srv"))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll = dllUSE,
# random = "tildeR_y",
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
system.time(rep1 <- obj$report()) ## one off caclulation using start pars
rep1$surv_slx_yafs[,,3,1]
rep1$srv_slx_yafs[,,3,1]
df$selShape_surv
rep1$srv_slx_yafs[,,4,1]
mappy <-
buildMap(toFix =  c("omega_0ij",
"logh_k",
"logSDR",
# "tildeR_yk",
"b_y",
"epsilon_tau",
"logpi_acomp",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh",
"all_srv"))
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
## TMBHELPER unavail for R >4.0
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repeat for stability)
best <- obj$env$last.par.best ## update object with the best parameters
dat <- obj$report(par = best)
dat$surv_yf_pred/df$surv_yf_obs
# dat$catch_yf_pred_total/df$catch_yf_obs[,2:ncol(df$catch_yf_obs)]
## save everything and plot
cppname = substr(dllUSE,7,nchar(dllUSE))
writeOM(justPlots = FALSE,
dat=dat,
obj = obj,
opt = opt,
rep=rep,
cppname =cppname,
mappy = mappy,
runname = paste0("-",df$yRun,"y_",
cppname,
"",
"_BCVASTselShape=-1",
"_Bramp=1.0"))
df$LBins
rep1$srv_slx_yafs[,,4,1]
df$selType_surv
df$selShape_surv
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
libray(TMB)
library(TMB)
compile(here("TMB",paste0(dllUSE,".cpp")))
compile(here("TMB",paste0(dllUSE,".cpp")))
library(TMB)
compile(here("TMB",paste0(dllUSE,".cpp")))
library(here)
dllUSE = c('shire_v4')[1]
library(ggsidekick)
compile(here("TMB",paste0(dllUSE,".cpp")))
compile(here("TMB",paste0(dllUSE,".cpp")))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
?sink
sink(file = here('out.txt'))
compile(here("TMB",paste0(dllUSE,".cpp")))
sink()
sink(file = here('out.txt'), type = 'message')
sink(file = here('out.txt'), type = 'message')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
sink(file = here('out.txt'), type = 'message')
sink(file = here('out2.txt'), type = 'message')
sink(file = here('out2.txt'), type = 'message')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
sink(file = here('out2.txt'), type = 'message')
sink()
sink(file = here('out2.txt'), type = 'message')
sink.number()
here('out.txt')
sink(file = here('out2.txt'), type = 'message')
sink(file = NULL, type = 'message')
DFASDF
"SADFASDFSD"
sink()
sink(file = 'out.txt', type = 'message')
sink(file = here('out.txt'), type = 'message')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.109) ## data that works with OM
df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$selShape_surv[4] <- -1 # constant slx for bc vast
df$Neqn <- buildNeqn(df)
df$parms$b_y <- rep(1,df$tEnd) ## 1 is no ramp (exp(-0.5*B) in recruits; b*lnRy in like))
array(exp(df$parms$log_srv_slx_pars), dim = c(df$nfleets_surv+df$nfleets_acomp-4,2,max(df$srv_blks_size),2),
dimnames = dimnames(df$parms$log_srv_slx_pars))
mappy <-
buildMap(toFix =  c("omega_0ij",
"logh_k",
"logSDR",
# "tildeR_yk",
"b_y",
"epsilon_tau",
"logpi_acomp",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh",
"all_srv"))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll = dllUSE,
# random = "tildeR_y",
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
system.time(rep1 <- obj$report()) ## one
rep$srv_slx_yafs[,,4,1]
rep1$srv_slx_yafs[,,4,1]
bounds <- boundPars(obj,
r0_lower = 0,
boundSlx = c(NA,'fsh','srv')[2:3])
## TMBHELPER unavail for R >4.0
system.time(opt <-
TMBhelper::fit_tmb(
obj,
lower = bounds$lower,
upper = bounds$upper,
dll = dllUSE,
getHessian = FALSE,
control = list(eval.max = 1e6,
iter.max = 1e6,
rel.tol = 1e-4)
)$opt) ## estimate; can repeat for stability)
# for (k in 1:2)  opt <- nlminb(obj$env$last.par.best, obj$fn, obj$gr)
best <- obj$env$last.par.best ## update object with the best parameters
dat <- obj$report(par = best)
dat$surv_yf_pred/df$surv_yf_obs
?TMB
??TMB
remove.packages('TMB')
install.packages('devtools')
require(devtools)
install.packages('TMB')
install.packages("TMB")
require(TMB)
compile(here("TMB",paste0(dllUSE,".cpp")))
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
setwd("C:/Users/mkapur/Dropbox/UW/sab-mse")
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
library(here)
h
library(here)
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
?compile
?makefile
compile(here("TMB",paste0(dllUSE,".cpp")))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
remove.packages('TMB')
install_github('kaskr/adcomp/TMB')
require(devtools)
install_github('kaskr/adcomp/TMB')
remove.packages('TMB')
install_github('kaskr/adcomp', subdir = 'TMB')
devtools::install_github('kaskr/adcomp', subdir = 'TMB')
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(here)
library(r4ss)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
library(RcppEigen)
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.109) ## data that works with OM
df$acomp_yafs_obs
## age comps  ----
OM_agecomps_yafs <- array(NA, dim = c(length(1960:2019),
length(0:70),
length(fltnames$NAME[fltnames$ACOMP]),2),
dimnames = list(c(1960:2019),
c(0:70),
c(fltnames$NAME[fltnames$ACOMP]),
c('Fem','Mal')))
#* ak agecomps ----
## fixed gear and GOA survey. note they are NOT sex specific.
ak_agecomps  <- array(NA, dim = c(length(1960:2019),
length(0:70),
length(fltnames$NAME[fltnames$ACOMP & fltnames$M == 'AK'])))
dimnames(ak_agecomps) <-  list(c(1960:2019),
c(0:70),
c(paste(fltnames$NAME[fltnames$M == 'AK' & fltnames$ACOMP])))
ak_agecomps
OM_agecomps_male
## Age comps. Note that AK is not sex-specific
## need to make these -1 for NA years
# load(here("input","input_data",'OM_agecomps_female.rdata'))
# load(here("input","input_data",'OM_agecomps_male.rdata'))
load(here("input","input_data",'OM_agecomps_yafs.rdata'))
OM_agecomps_yafs
str(OM_agecomps_yafs)
dim(OM_agecomps_yafs)
y=flt=s=1
OM_agecomps_yafs[y,,flt,s]
which(is.na(OM_agecomps_yafs[y,,flt,s]))
first(which(is.na(OM_agecomps_yafs[y,,flt,s])))
## age comps  ----
OM_agecomps_yafs <- array(NA, dim = c(length(1960:2019),
length(0:70),
length(fltnames$NAME[fltnames$ACOMP]),2),
dimnames = list(c(1960:2019),
c(0:70),
c(fltnames$NAME[fltnames$ACOMP]),
c('Fem','Mal')))
#* ak agecomps ----
## fixed gear and GOA survey. note they are NOT sex specific.
ak_agecomps  <- array(NA, dim = c(length(1960:2019),
length(0:70),
length(fltnames$NAME[fltnames$ACOMP & fltnames$M == 'AK'])))
dimnames(ak_agecomps) <-  list(c(1960:2019),
c(0:70),
c(paste(fltnames$NAME[fltnames$M == 'AK' & fltnames$ACOMP])))
## fix e, fixw, goasurv no sex so div by 2
OM_agecomps_yafs[,2:31,1,1:2] <- 0.5*as.matrix(merge(data.frame('Year' = 1960:2019),
read.csv(here("input","raw_data","comps","AK_fishery_fixedgear_E_agecomp.csv")),
by = 'Year',all.x = TRUE)%>% select(-Year))
OM_agecomps_yafs[,2:31,1,1:2] <- 0.5*as.matrix(merge(data.frame('Year' = 1960:2019),
read.csv(here("input","raw_data","comps","AK_fishery_fixedgear_W_agecomp.csv")),
by = 'Year',all.x = TRUE) %>% select(-Year))
OM_agecomps_yafs
as.matrix(merge(data.frame('Year' = 1960:2019),
read.csv(here("input","raw_data","comps","AK_fishery_fixedgear_E_agecomp.csv")),
by = 'Year',all.x = TRUE)%>% select(-Year))
read.csv(here("input","raw_data","comps","AK_fishery_fixedgear_E_agecomp.csv"))
as.matrix(merge(data.frame('Year' = 1960:2019),
read.csv(here("input","raw_data","comps","AK_fishery_fixedgear_E_agecomp.csv")),
by = 'Year',all.x = TRUE)
)
read.csv(here("input","raw_data","comps","AK_fishery_fixedgear_E_agecomp.csv"))
dimnames(OM_agecomps_yafs)
