box(which = 'plot', lty = 'solid',
col = survfltPal[flt],
# col = c(rep(mgmtPal[1],4), rep(mgmtPal[2],3),rep(mgmtPal[3],2))[flt],
lwd = 2)
if(s == 2) lines(tmp, col = sexPal_temp[2],
type = 'l', lty = 2, lwd = 2)
# seeddim = nestflts
# lines(bounds$lower type = 'v', col = sexPal[2])
}
}
## age comps  ----
OM_agecomps_yafs <- array(NA, dim = c(length(1960:2019),
length(0:70),
length(fltnames$NAME[fltnames$ACOMP]),2),
dimnames = list(c(1960:2019),
c(0:70),
c(fltnames$NAME[fltnames$ACOMP]),
c('Fem','Mal')))
## per fleet and sex, designate which bin acomps start/stop at for looping purposes
acomp_dims_yfs <- array(NA, dim = c(60,2,8,2)) ## years, stary&stop, fleet, sex
for(y in 1:60){
for(flt in 1:8){
for(s in 1:2){
acomp_dims_yfs[y,1,flt,s] <- first(which(is.na(OM_agecomps_yafs[y,,flt,s])))
acomp_dims_yfs[y,2,flt,s] <- last(which(is.na(OM_agecomps_yafs[y,,flt,s])))
}
}
}
df$nfleets_acomp
for(y in 1:df$nyear){
for(flt in 1:df$nfleets_acomp){
for(s in 1:2){
acomp_dims_yfs[y,1,flt,s] <- first(which(is.na(OM_agecomps_yafs[y,,flt,s])))
acomp_dims_yfs[y,2,flt,s] <- last(which(is.na(OM_agecomps_yafs[y,,flt,s])))
}
}
}
acomp_dims_yfs
## per fleet and sex, designate which bin acomps start/stop at for looping purposes
acomp_dims_yfs <- array(NA,
dim = c(60,2,df$nfleets_acomp,2),
dimnames = list(c(1960:2019),
c('miny','maxy'),
df$fltnames_acomp,
c('fem','mal'))) ## years, stary&stop, fleet, sex
## per fleet and sex, designate which bin acomps start/stop at for looping purposes
acomp_dims_yfs <- array(NA,
dim = c(60,2,df$nfleets_acomp,2),
dimnames = list(c(1960:2019),
c('miny','maxy'),
c(df$fltnames_acomp),
c('fem','mal'))) ## years, stary&stop, fleet, sex
df$nfleets_acomp
df$fltnames_acomp
## per fleet and sex, designate which bin acomps start/stop at for looping purposes
acomp_dims_yfs <- array(NA,
dim = c(60,2,df$nfleets_acomp,2),
dimnames = list(c(1960:2019),
c('miny','maxy'),
c(unlist(df$fltnames_acomp)),
c('fem','mal'))) ## years, stary&stop, fleet, sex
acomp_dims_yfs
c(unlist(df$fltnames_acomp))
c(as.character(unlist(df$fltnames_acomp)))
## per fleet and sex, designate which bin acomps start/stop at for looping purposes
acomp_dims_yfs <- array(NA,
dim = c(60,2,df$nfleets_acomp,2),
dimnames = list(c(1960:2019),
c('miny','maxy'),
c(as.character(unlist(df$fltnames_acomp))),
c('fem','mal'))) ## years, stary&stop, fleet, sex
acomp_dims_yfs
c(as.character(unlist(df$fltnames_acomp)))
for(y in 1:df$nyear){
for(flt in 1:df$nfleets_acomp){
for(s in 1:2){
acomp_dims_yfs[y,1,flt,s] <- first(which(is.na(OM_agecomps_yafs[y,,flt,s])))
acomp_dims_yfs[y,2,flt,s] <- last(which(is.na(OM_agecomps_yafs[y,,flt,s])))
}
}
}
acomp_dims_yfs
for(y in 1:df$nyear){
for(flt in 1:df$nfleets_acomp){
for(s in 1:2){
acomp_dims_yfs[y,1,flt,s] <- first(which(!is.na(OM_agecomps_yafs[y,,flt,s])))
acomp_dims_yfs[y,2,flt,s] <- last(which(!is.na(OM_agecomps_yafs[y,,flt,s])))
}
}
}
acomp_dims_yfs
## per fleet and sex, designate which bin acomps start/stop at for looping purposes
acomp_dims_yfs <- array(NA,
dim = c(60,2,df$nfleets_acomp,2),
dimnames = list(c(1960:2019),
c('abinlo','abinhi'),
c(as.character(unlist(df$fltnames_acomp))),
c('fem','mal'))) ## years, stary&stop, fleet, sex
for(y in 1:df$nyear){
for(flt in 1:df$nfleets_acomp){
for(s in 1:2){
acomp_dims_yfs[y,1,flt,s] <- first(which(!is.na(OM_agecomps_yafs[y,,flt,s])))
acomp_dims_yfs[y,2,flt,s] <- last(which(!is.na(OM_agecomps_yafs[y,,flt,s])))
}
}
}
acomp_dims_yfs
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
# compile(here("TMB",paste0(dllUSE,".cpp")),
#         CPPFLAGS = "-Wno-ignored-attributes",
#         R_MAKEVARS_USER = here("suppressMakeVars.txt"))
dyn.load(dynlib(here("TMB",dllUSE)))
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")),
CPPFLAGS = "-Wno-ignored-attributes",
R_MAKEVARS_USER = here("suppressMakeVars.txt"))
dyn.load(dynlib(here("TMB",dllUSE)))
compile(here("TMB",paste0(dllUSE,".cpp")),
CPPFLAGS = "-Wno-ignored-attributes")
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")),
CPPFLAGS = "-Wno-ignored-attributes")
dyn.load(dynlib(here("TMB",dllUSE)))
compile(here("TMB",paste0(dllUSE,".cpp")),
CPPFLAGS = "-Wno-ignored-attributes")
compile(here("TMB",paste0(dllUSE,".cpp")),
CPPFLAGS = "-Wno-ignored-attributes")
dyn.load(dynlib(here("TMB",dllUSE)))
# CPPFLAGS="-Wno-ignored-attributes"
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.109) ## data that works with OM
# df$surv_yf_obs[df$surv_yf_obs >0] <-  df$surv_yf_obs[df$surv_yf_obs >0]*1000
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$parms$b_y <- rep(1,df$tEnd) ## 1 is no ramp (exp(-0.5*B) in recruits; b*lnRy in like))
df$Neqn <- buildNeqn(df)
mappy <-
buildMap(toFix =  c("omega_0ij",
"logh_k",
"logSDR",
# "tildeR_y",
"b_y",
"epsilon_tau",
"logpi_acomp",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh",
# "all_srv"))
colnames(df$srv_blks)[6] ))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll = dllUSE,
# random = "tildeR_y",
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
df$nfleets_acomp
dim(df$acomp_yafs_obs)
df$nage
View(fltnames)
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")),
CPPFLAGS = "-Wno-ignored-attributes")
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")),
CPPFLAGS = "-Wno-ignored-attributes")
dyn.load(dynlib(here("TMB",dllUSE)))
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")),
CPPFLAGS = "-Wno-ignored-attributes")
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")))
dyn.load(dynlib(here("TMB",dllUSE)))
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")), R_MAKEVARS_USER = here("suppressMakeVars.txt"))
dyn.load(dynlib(here("TMB",dllUSE)))
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")), R_MAKEVARS_USER = here("suppressMakeVars.txt"))
dyn.load(dynlib(here("TMB",dllUSE)))
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")), R_MAKEVARS_USER = here("suppressMakeVars.txt"))
dyn.load(dynlib(here("TMB",dllUSE)))
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")),
R_MAKEVARS_USER = here("mkmakevars.win"))
dyn.load(dynlib(here("TMB",dllUSE)))
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")),
R_MAKEVARS_USER = here("mkmakevars.win"))
dyn.load(dynlib(here("TMB",dllUSE)))
compile(here("TMB",paste0(dllUSE,".cpp")),
CPPFLAGS="-Wno-ignored-attributes",
R_MAKEVARS_USER = here("mkMakeVars.win"))
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")),
CPPFLAGS="-Wno-ignored-attributes",
R_MAKEVARS_USER = here("mkMakeVars.win"))
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")),
CPPFLAGS="-Wno-ignored-attributes -Wno-deprecated-declarations -fno-common",
R_MAKEVARS_USER = here("mkMakeVars.win"))
dyn.load(dynlib(here("TMB",dllUSE)))
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")),
CPPFLAGS="-Wno-ignored-attributes -Wno-deprecated-declarations -fno-common")#,
# R_MAKEVARS_USER = here("mkMakeVars.win"))
dyn.load(dynlib(here("TMB",dllUSE)))
## OM_Master.R
## M S Kapur
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")),
# CPPFLAGS="-Wno-ignored-attributes -Wno-deprecated-declarations -fno-common")#,
R_MAKEVARS_USER = here("suppressMakeVars.txt"))
## Inspiration & code guidance from J Sullivan, N Jacobsen Summer 2020
## kapurm@uw.edu
rm(list = ls())
# devtools::install_github('kaskr/adcomp', subdir = 'TMB')
library(TMB)
library(dplyr)
library(reshape2)
library(ggplot2)
library(r4ss)
library(here)
library(ggsidekick)
dllUSE = c('shire_v4_1')[1]
compile(here("TMB",paste0(dllUSE,".cpp")),
# CPPFLAGS="-Wno-ignored-attributes -Wno-deprecated-declarations -fno-common")#,
R_MAKEVARS_USER = here("suppressMakeVars.txt"))
dyn.load(dynlib(here("TMB",dllUSE)))
source(here("R","functions",'load_files_OM.R'))
df <- load_data_OM(nspace = 6,
move = TRUE,
b_y_max = 0.109) ## data that works with OM
df$yRun <- df$tEnd ## number of years to run model
df$parms$mort_k <- c(0.2,0.2,0.2,0.2)
df$Neqn <- buildNeqn(df)
mappy <-
buildMap(toFix =  c("omega_0ij",
"logh_k",
"logSDR",
# "tildeR_y",
"b_y",
"epsilon_tau",
"logpi_acomp",
"log_fsh_slx_pars",
"log_srv_slx_pars",
"mort_k"),
fixFlt = c("all_fsh",
# "all_srv"))
colnames(df$srv_blks)[6] ))
array(mappy$log_fsh_slx_pars, dim = c(df$nfleets_fish,2,max(df$fsh_blks_size),2),
dimnames = dimnames(df$parms$log_fsh_slx_pars))
array(mappy$log_srv_slx_pars,
dim = c(ncol(df$srv_blks),2,max(df$srv_blks_size),2),
dimnames = dimnames(df$parms$log_srv_slx_pars))
df$parms$b_y <- rep(1,df$tEnd) ## 1 is no ramp (exp(-0.5*B) in recruits; b*lnRy in like))
system.time(obj <- MakeADFun(df,
parameters = df$parms,
dll = dllUSE,
# random = "tildeR_y",
map = mappy, ## fix everything for testing eigen fails
checkParameterOrder = TRUE))
df$phi_ff_acomp
df$fltnames_acomp
df$fltnames_fish
df$fltnames_surv
## indicates the position of acomp fleet
phi_ff_acomp <- matrix(-1, nrow = nfleets_acomp, ncol = 5)
## Fleet [names and nfleets] ----
## build fleets
## makes the master flag_fleets matrix
## and attendant indices for subsetting
fltnames <- read.table(here("input","input_data","OM_fleetnames.txt"), header = TRUE) ## this is like flag_fleets
x=y
x='y'
if(tolower(x) == 'n'){
## turn off SURV for design-based
fltnames$SURV[fltnames$NAME%in%c('BC_OFFStd','BC_StRs')] <- FALSE
} else{
fltnames$SURV[fltnames$NAME%in%c('BC_EARLY','BC_VAST')] <- FALSE
}
fltnames_fish <- fltnames$NAME[fltnames$COMM]
fltnames_surv <- fltnames$NAME[fltnames$SURV]
colnames(survfltPal) <- fltnames$NAME[fltnames$SURV]
fltnames_acomp <- fltnames$NAME[fltnames$ACOMP]
nfleets_fish <- length(fltnames$NAME[fltnames$COMM])
fltnames_lcomp <- fltnames$NAME[fltnames$LCOMP]
nfleets_acomp <- length(fltnames$NAME[fltnames$ACOMP])
nfleets_surv <- length(fltnames$NAME[fltnames$SURV])
nfleets_lcomp <- length(fltnames$NAME[fltnames$LCOMP])
# Catch ----
catch <- round(read.csv(here("input","input_data","OM_catch.csv")),1)
## do this smartly; check for overlap or use the design setup
nfishflts_acomp <- sum(fltnames_fish %in% fltnames_acomp)
nsurvflts_acomp <- sum(fltnames_surv %in% fltnames_acomp)
## take idx of acomp fleets which are already acctd for in fish or surv
Wnfishflts_acomp <- which(fltnames_acomp %in% fltnames_fish)
Wnsurvflts_acomp <- which(fltnames_acomp %in% fltnames_surv)
selType_surv <- ifelse(c(fltnames$SELTYPE[fltnames$SURV],
fltnames$SELTYPE[fltnames$ACOMP][-c(Wnfishflts_acomp,Wnsurvflts_acomp)])=='AGE',0,1)
# selType_surv <- seltype_surv0-1
## later this might need to include lcomps
fltnames_survcomp <-  unique(c(as.character(fltnames_surv),
as.character(fltnames_acomp[-Wnfishflts_acomp])))
## truncate the length of selShape by the number of overlap fleets with survey
## this ensures that we are estimating a single survey selectivity informed simulataneously
## by biomass, and comps
selShape_surv <- c(rep(0,length(selType_surv))) ## 0 and 1 logistic, 2 dome normal, 3 dome gamma
if(length(selType_surv) != length(selShape_surv)) {
stop("seltype surv length doesn't match selshape surv")
}
# Survey ----
# survey <- read.csv(here("input","input_data",'OM_indices.csv'))
# survey[is.na(survey)] <- -1.0#
## indicates the position of acomp fleet
phi_ff_acomp <- matrix(-1, nrow = nfleets_acomp, ncol = 5)
rownames(phi_ff_acomp) <- fltnames_acomp
colnames(phi_ff_acomp) <- c('fsh_slx_pos','srv_slx_pos',"nsamp_pos","commacomp_pos","survacomp_pos")
phi_ff_acomp[which(rownames(phi_ff_acomp) %in% paste(fltnames_fish)),1] <-
which(grepl(paste(rownames(phi_ff_acomp), collapse = "|"), paste(fltnames_fish)))-1
phi_ff_acomp
fltnames_surv
fltnames_acomp
which(fltnames_surv %in% fltnames_acomp )
